digraph Mir_0_1303 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn refresh_obligation_deposits(_1: &amp;ReErased mut state::obligation::Obligation, _2: &amp;ReErased state::lending_market::LendingMarket, _3: u64, _4: state::types::MaxReservesAsCollateralCheck, _5: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, _6: impl Iterator&lt;Item = T&gt;/#2, _7: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt;<br align="left"/>let mut _8: u8;<br align="left"/>let mut _9: u8;<br align="left"/>let mut _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _13: u8;<br align="left"/>let mut _14: state::last_update::PriceStatusFlags;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u8;<br align="left"/>let _17: std::option::Option&lt;(&amp;ReErased state::lending_market::ElevationGroup, u64)&gt;;<br align="left"/>let mut _18: (std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _19: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _20: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _21: isize;<br align="left"/>let mut _22: isize;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: (&amp;ReErased state::lending_market::ElevationGroup, u64);<br align="left"/>let mut _27: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: !;<br align="left"/>let _30: !;<br align="left"/>let _31: !;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _36: [&amp;ReErased str; 1_usize];<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;, Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _39: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;, Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _40: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;;<br align="left"/>let mut _41: std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _42: &amp;ReErased mut [state::obligation::ObligationCollateral];<br align="left"/>let mut _43: &amp;ReErased mut [state::obligation::ObligationCollateral; 8_usize];<br align="left"/>let mut _44: Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _45: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;, Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _46: ();<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::option::Option&lt;(usize, &amp;ReErased mut state::obligation::ObligationCollateral)&gt;;<br align="left"/>let mut _49: &amp;ReErased mut std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;, Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _50: &amp;ReErased mut std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;&gt;, Closure(DefId(0:1306 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationCollateral),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: !;<br align="left"/>let _53: usize;<br align="left"/>let _54: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let _55: T/#1;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, T/#1&gt;;<br align="left"/>let mut _57: std::result::Result&lt;T/#1, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: std::option::Option&lt;T/#1&gt;;<br align="left"/>let mut _59: &amp;ReErased mut impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _60: anchor_lang::error::Error;<br align="left"/>let mut _61: anchor_lang::error::AnchorError;<br align="left"/>let mut _62: std::string::String;<br align="left"/>let mut _63: &amp;ReErased LendingError;<br align="left"/>let _64: LendingError;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: LendingError;<br align="left"/>let mut _67: std::string::String;<br align="left"/>let mut _68: &amp;ReErased LendingError;<br align="left"/>let _69: LendingError;<br align="left"/>let mut _70: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _71: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _72: anchor_lang::error::Source;<br align="left"/>let mut _73: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _78: T/#1;<br align="left"/>let _79: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _80: &amp;ReErased T/#1;<br align="left"/>let mut _81: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _83: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased T/#1;<br align="left"/>let mut _86: Closure(DefId(0:1307 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_deposits::{closure#1}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _91: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _92: ();<br align="left"/>let mut _93: bool;<br align="left"/>let mut _94: &amp;ReErased std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: u8;<br align="left"/>let mut _97: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _98: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _99: ();<br align="left"/>let mut _100: bool;<br align="left"/>let mut _101: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _102: state::reserve::ReserveStatus;<br align="left"/>let mut _103: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _104: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _105: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _106: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _107: state::reserve::ReserveStatus;<br align="left"/>let mut _108: (u8, bool);<br align="left"/>let _109: ();<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _111: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _112: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _113: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _114: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _115: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _116: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _117: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _118: usize;<br align="left"/>let mut _119: u64;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _124: ();<br align="left"/>let _125: ();<br align="left"/>let mut _126: bool;<br align="left"/>let mut _127: u64;<br align="left"/>let mut _128: (u8, bool);<br align="left"/>let _129: ();<br align="left"/>let mut _130: isize;<br align="left"/>let _131: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _132: u64;<br align="left"/>let _133: usize;<br align="left"/>let mut _134: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _135: ();<br align="left"/>let mut _136: bool;<br align="left"/>let mut _137: &amp;ReErased [u8];<br align="left"/>let mut _138: &amp;ReErased [u8; 20_usize];<br align="left"/>let _139: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _140: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _141: &amp;ReErased u8;<br align="left"/>let _142: &amp;ReErased u8;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: anchor_lang::error::Error;<br align="left"/>let mut _145: anchor_lang::error::AnchorError;<br align="left"/>let mut _146: std::string::String;<br align="left"/>let mut _147: &amp;ReErased LendingError;<br align="left"/>let _148: LendingError;<br align="left"/>let mut _149: u32;<br align="left"/>let mut _150: LendingError;<br align="left"/>let mut _151: std::string::String;<br align="left"/>let mut _152: &amp;ReErased LendingError;<br align="left"/>let _153: LendingError;<br align="left"/>let mut _154: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _155: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _156: anchor_lang::error::Source;<br align="left"/>let mut _157: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _158: ();<br align="left"/>let mut _159: bool;<br align="left"/>let mut _160: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _161: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _162: !;<br align="left"/>let mut _163: anchor_lang::error::Error;<br align="left"/>let mut _164: anchor_lang::error::Error;<br align="left"/>let mut _165: anchor_lang::error::AnchorError;<br align="left"/>let mut _166: std::string::String;<br align="left"/>let mut _167: &amp;ReErased LendingError;<br align="left"/>let _168: LendingError;<br align="left"/>let mut _169: u32;<br align="left"/>let mut _170: LendingError;<br align="left"/>let mut _171: std::string::String;<br align="left"/>let mut _172: &amp;ReErased LendingError;<br align="left"/>let _173: LendingError;<br align="left"/>let mut _174: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _175: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _176: anchor_lang::error::Source;<br align="left"/>let mut _177: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _178: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _179: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _180: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _181: u64;<br align="left"/>let mut _182: u64;<br align="left"/>let mut _183: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _184: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _185: usize;<br align="left"/>let mut _186: usize;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: u64;<br align="left"/>let mut _189: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _190: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _191: usize;<br align="left"/>let mut _192: usize;<br align="left"/>let mut _193: bool;<br align="left"/>let mut _194: u64;<br align="left"/>let mut _195: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _196: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _197: usize;<br align="left"/>let mut _198: usize;<br align="left"/>let mut _199: bool;<br align="left"/>let mut _200: (u64, bool);<br align="left"/>let mut _201: u64;<br align="left"/>let _202: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _203: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _204: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _205: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _206: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _207: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _208: u128;<br align="left"/>let mut _209: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _210: u8;<br align="left"/>let _211: u8;<br align="left"/>let mut _212: (u8, u8);<br align="left"/>let mut _213: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _214: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _215: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _216: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _217: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _218: ();<br align="left"/>let mut _219: bool;<br align="left"/>let mut _220: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _221: &amp;ReErased u64;<br align="left"/>let mut _222: bool;<br align="left"/>let mut _223: u8;<br align="left"/>let mut _224: u8;<br align="left"/>let mut _225: u8;<br align="left"/>let mut _226: u8;<br align="left"/>let mut _227: u8;<br align="left"/>let mut _228: u8;<br align="left"/>let mut _229: u8;<br align="left"/>let mut _230: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _231: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _232: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _233: ();<br align="left"/>let mut _234: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _235: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _236: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _237: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _238: u8;<br align="left"/>let _239: ();<br align="left"/>let mut _240: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _241: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _242: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _243: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _244: u8;<br align="left"/>let mut _245: u8;<br align="left"/>let mut _246: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _247: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _248: usize;<br align="left"/>let mut _249: usize;<br align="left"/>let mut _250: bool;<br align="left"/>let _251: ();<br align="left"/>let mut _252: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let mut _253: state::last_update::PriceStatusFlags;<br align="left"/>let mut _254: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let _255: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _256: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _257: ();<br align="left"/>let _258: ();<br align="left"/>let mut _259: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _261: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _262: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _263: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _266: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _267: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _268: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _269: &amp;ReErased &amp;ReErased &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased &amp;ReErased &amp;ReErased str;<br align="left"/>let _271: &amp;ReErased &amp;ReErased str;<br align="left"/>let _272: &amp;ReErased str;<br align="left"/>let mut _273: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let _274: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _275: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _276: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _277: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _278: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _279: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _281: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _282: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _283: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _284: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _285: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _286: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _287: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _288: u64;<br align="left"/>let mut _289: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _291: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _292: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _293: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _294: ();<br align="left"/>let mut _295: bool;<br align="left"/>let mut _296: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _297: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let _298: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _299: isize;<br align="left"/>let _300: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _301: ();<br align="left"/>let mut _302: bool;<br align="left"/>let mut _303: u8;<br align="left"/>let mut _304: u8;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: anchor_lang::error::Error;<br align="left"/>let mut _307: anchor_lang::error::Error;<br align="left"/>let mut _308: anchor_lang::error::AnchorError;<br align="left"/>let mut _309: std::string::String;<br align="left"/>let mut _310: &amp;ReErased LendingError;<br align="left"/>let _311: LendingError;<br align="left"/>let mut _312: u32;<br align="left"/>let mut _313: LendingError;<br align="left"/>let mut _314: std::string::String;<br align="left"/>let mut _315: &amp;ReErased LendingError;<br align="left"/>let _316: LendingError;<br align="left"/>let mut _317: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _318: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _319: anchor_lang::error::Source;<br align="left"/>let mut _320: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _321: (u8, u8);<br align="left"/>let mut _322: u8;<br align="left"/>let mut _323: u8;<br align="left"/>let mut _324: state::types::RefreshObligationDepositsResult;<br align="left"/>let mut _325: u8;<br align="left"/>let mut _326: u8;<br align="left"/>let mut _327: u8;<br align="left"/>let mut _328: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _329: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _330: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _331: state::last_update::PriceStatusFlags;<br align="left"/>let mut _332: bool;<br align="left"/>let mut _333: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _334: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _335: &amp;ReErased LendingError;<br align="left"/>let mut _336: &amp;ReErased LendingError;<br align="left"/>let mut _337: &amp;ReErased LendingError;<br align="left"/>let mut _338: &amp;ReErased LendingError;<br align="left"/>let mut _339: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let mut _340: &amp;ReErased LendingError;<br align="left"/>let mut _341: &amp;ReErased LendingError;<br align="left"/>let mut _342: &amp;ReErased LendingError;<br align="left"/>let mut _343: &amp;ReErased LendingError;<br align="left"/>let mut _344: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _345: bool;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>debug obligation =&gt; _1;<br align="left"/>debug lending_market =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug max_reserves_as_collateral_check =&gt; _4;<br align="left"/>debug elevation_group =&gt; _5;<br align="left"/>debug reserves_iter =&gt; _6;<br align="left"/>debug borrowed_amount_in_elevation_group =&gt; _7;<br align="left"/>debug lowest_deposit_liquidation_ltv_threshold_pct =&gt; _8;<br align="left"/>debug lowest_deposit_max_ltv_pct =&gt; _9;<br align="left"/>debug deposited_value =&gt; _10;<br align="left"/>debug allowed_borrow_value =&gt; _11;<br align="left"/>debug unhealthy_borrow_value =&gt; _12;<br align="left"/>debug num_of_obsolete_reserves =&gt; _13;<br align="left"/>debug prices_state =&gt; _14;<br align="left"/>debug borrowing_disabled =&gt; _15;<br align="left"/>debug collaterals_count =&gt; _16;<br align="left"/>debug elevation_group_and_borrowed_amount =&gt; _17;<br align="left"/>debug elevation_group =&gt; _24;<br align="left"/>debug borrowed_amount =&gt; _25;<br align="left"/>debug iter =&gt; _45;<br align="left"/>debug index =&gt; _53;<br align="left"/>debug deposit =&gt; _54;<br align="left"/>debug deposit_reserve =&gt; _55;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug deposit_reserve_info_key =&gt; _79;<br align="left"/>debug deposit_reserve =&gt; _81;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug elevation_group =&gt; _131;<br align="left"/>debug debt_amount =&gt; _132;<br align="left"/>debug elevation_group_index =&gt; _133;<br align="left"/>debug market_value_f =&gt; _202;<br align="left"/>debug coll_ltv_pct =&gt; _210;<br align="left"/>debug coll_liquidation_threshold_pct =&gt; _211;<br align="left"/>debug elevation_group =&gt; _300;<br align="left"/>>;
    bb0__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_345 = const false<br/>StorageLive(_8)<br/>_8 = const _<br/>StorageLive(_9)<br/>_9 = const _<br/>StorageLive(_10)<br/>_10 = const _<br/>StorageLive(_11)<br/>_11 = const _<br/>StorageLive(_12)<br/>_12 = const _<br/>StorageLive(_13)<br/>_13 = const 0_u8<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::all()</td></tr></table>>];
    bb1__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = const false<br/>StorageLive(_16)<br/>_16 = const 0_u8<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _5<br/>StorageLive(_20)<br/>_20 = _7<br/>_18 = (move _19, move _20)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>_23 = discriminant((_18.0: std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;))<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb2__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_21 = discriminant((_18.1: std::option::Option&lt;u64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb3__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_333 = const _<br/>_35 = &amp;(*_333)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_const(move _33)</td></tr></table>>];
    bb4__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_22 = discriminant((_18.1: std::option::Option&lt;u64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb5__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = (((_18.0: std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;) as Some).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_25)<br/>_25 = (((_18.1: std::option::Option&lt;u64&gt;) as Some).0: u64)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_24)<br/>StorageLive(_28)<br/>_28 = _25<br/>_26 = (move _27, move _28)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>_17 = std::option::Option::&lt;(&amp;state::lending_market::ElevationGroup, u64)&gt;::Some(move _26)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_17 = std::option::Option::&lt;(&amp;state::lending_market::ElevationGroup, u64)&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = panic_fmt(move _32)</td></tr></table>>];
    bb8__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;mut ((*_1).4: [state::obligation::ObligationCollateral; 8])<br/>_42 = move _43 as &amp;mut [state::obligation::ObligationCollateral] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = core::slice::&lt;impl [obligation::ObligationCollateral]&gt;::iter_mut(move _42)</td></tr></table>>];
    bb9__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt; as Iterator&gt;::enumerate(move _41)</td></tr></table>>];
    bb10__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_44)<br/>_44 = {closure@programs\klend\src\lending_market\lending_operations.rs:1005:17: 1005:31}<br/></td></tr><tr><td align="left">_39 = &lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt;&gt; as Iterator&gt;::filter::&lt;{closure@programs\klend\src\lending_market\lending_operations.rs:1005:17: 1005:31}&gt;(move _40, move _44)</td></tr></table>>];
    bb11__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;Filter&lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt;&gt;, {closure@programs\klend\src\lending_market\lending_operations.rs:1005:17: 1005:31}&gt; as IntoIterator&gt;::into_iter(move _39)</td></tr></table>>];
    bb12__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_45)<br/>_45 = move _38<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;mut _45<br/>_49 = &amp;mut (*_50)<br/></td></tr><tr><td align="left">_48 = &lt;Filter&lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt;&gt;, {closure@programs\klend\src\lending_market\lending_operations.rs:1005:17: 1005:31}&gt; as Iterator&gt;::next(move _49)</td></tr></table>>];
    bb14__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb15__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = (((_48 as Some).0: (usize, &amp;mut state::obligation::ObligationCollateral)).0: usize)<br/>StorageLive(_54)<br/>_54 = move (((_48 as Some).0: (usize, &amp;mut state::obligation::ObligationCollateral)).1: &amp;mut state::obligation::ObligationCollateral)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;mut _6<br/></td></tr><tr><td align="left">_58 = &lt;impl Iterator&lt;Item = T&gt; as Iterator&gt;::next(move _59)</td></tr></table>>];
    bb16__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_37 = const ()<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = &amp;_4<br/>StorageLive(_297)<br/>_344 = const _<br/>_297 = &amp;(*_344)<br/></td></tr><tr><td align="left">_295 = &lt;state::types::MaxReservesAsCollateralCheck as PartialEq&gt;::eq(move _296, move _297)</td></tr></table>>];
    bb18__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_345 = const true<br/>StorageDead(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_341 = const _<br/>_63 = &amp;(*_341)<br/></td></tr><tr><td align="left">_62 = LendingError::name(move _63)</td></tr></table>>];
    bb19__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_65 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _66)</td></tr></table>>];
    bb20__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_340 = const _<br/>_68 = &amp;(*_340)<br/></td></tr><tr><td align="left">_67 = &lt;LendingError as ToString&gt;::to_string(move _68)</td></tr></table>>];
    bb21__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1009_u32 }<br/>_71 = anchor_lang::error::ErrorOrigin::Source(move _72)<br/>StorageDead(_72)<br/>_70 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _71)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>_73 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_61 = anchor_lang::error::AnchorError { error_name: move _62, error_code_number: move _65, error_msg: move _67, error_origin: move _70, compared_values: move _73 }<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _61)</td></tr></table>>];
    bb22__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_345 = const false<br/></td></tr><tr><td align="left">_57 = std::option::Option::&lt;T&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _58, move _60)</td></tr></table>>];
    bb23__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_345 = const false<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;T, anchor_lang::error::Error&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb24__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_74 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb25__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((_56 as Continue).0: T)<br/>_55 = move _78<br/>StorageDead(_78)<br/>_346 = discriminant(_56)<br/>StorageDead(_56)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_55<br/></td></tr><tr><td align="left">_79 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_pubkey(move _80)</td></tr></table>>];
    bb26__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = move ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_77)<br/>_77 = move _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb27__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>_356 = discriminant(_56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_55<br/></td></tr><tr><td align="left">_84 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_mut(move _85)</td></tr></table>>];
    bb29__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_86)<br/>_86 = {closure@programs\klend\src\lending_market\lending_operations.rs:1015:22: 1015:25}<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\lending_market\lending_operations.rs:1015:22: 1015:25}&gt;(move _84, move _86)</td></tr></table>>];
    bb30__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb31__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_87 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb32__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_82 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_81 = move _91<br/>StorageDead(_91)<br/>_348 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_5<br/></td></tr><tr><td align="left">_93 = std::option::Option::&lt;&amp;state::lending_market::ElevationGroup&gt;::is_none(move _94)</td></tr></table>>];
    bb33__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_90)<br/>_90 = move _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb34__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>_354 = discriminant(_82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb36__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_81<br/></td></tr><tr><td align="left">_97 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb37__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = (((*_97).9: state::reserve::ReserveConfig).23: u8)<br/>_95 = Gt(move _96, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb38__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>_15 = const true<br/>_92 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_92 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_81<br/></td></tr><tr><td align="left">_104 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _105)</td></tr></table>>];
    bb43__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_103 = &amp;((*_104).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_102 = reserve::ReserveConfig::status(move _103)</td></tr></table>>];
    bb44__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_101 = &amp;_102<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>_339 = const _<br/>_106 = &amp;(*_339)<br/></td></tr><tr><td align="left">_100 = &lt;reserve::ReserveStatus as PartialEq&gt;::eq(move _101, move _106)</td></tr></table>>];
    bb45__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb46__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>_108 = CheckedAdd(_13, const 1_u8)<br/></td></tr><tr><td align="left">assert(!move (_108.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _13, const 1_u8)</td></tr></table>>];
    bb47__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_13 = move (_108.0: u8)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_54)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;_81<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb50__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/>StorageLive(_117)<br/>_117 = _79<br/>StorageLive(_118)<br/>_118 = _53<br/>StorageLive(_119)<br/>_119 = _3<br/></td></tr><tr><td align="left">_111 = check_obligation_collateral_deposit_reserve(move _112, move _113, move _117, move _118, move _119)</td></tr></table>>];
    bb51__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb52__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_120 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb53__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_110 as Continue).0: ())<br/>_109 = _124<br/>StorageDead(_124)<br/>_350 = discriminant(_110)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = ((*_54).1: u64)<br/>_126 = Gt(move _127, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb54__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = move ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_123)<br/>_123 = move _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb55__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_352 = discriminant(_110)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_128 = CheckedAdd(_16, const 1_u8)<br/></td></tr><tr><td align="left">assert(!move (_128.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _16, const 1_u8)</td></tr></table>>];
    bb57__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_16 = move (_128.0: u8)<br/>_125 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_125 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_129)<br/>_130 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb60__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = (((_17 as Some).0: (&amp;state::lending_market::ElevationGroup, u64)).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_132)<br/>_132 = (((_17 as Some).0: (&amp;state::lending_market::ElevationGroup, u64)).1: u64)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;(*_131)<br/></td></tr><tr><td align="left">_133 = state::lending_market::ElevationGroup::get_index(move _134)</td></tr></table>>];
    bb61__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;_81<br/></td></tr><tr><td align="left">_139 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb62__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_138 = &amp;(((*_139).9: state::reserve::ReserveConfig).22: [u8; 20])<br/>_137 = move _138 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;((*_131).1: u8)<br/>_141 = &amp;(*_142)<br/></td></tr><tr><td align="left">_136 = core::slice::&lt;impl [u8]&gt;::contains(move _137, move _141)</td></tr></table>>];
    bb63__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb64__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>_135 = const ()<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_79<br/>StorageLive(_161)<br/>_161 = &amp;((*_131).7: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_159 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _160, move _161)</td></tr></table>>];
    bb65__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_338 = const _<br/>_147 = &amp;(*_338)<br/></td></tr><tr><td align="left">_146 = LendingError::name(move _147)</td></tr></table>>];
    bb66__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = LendingError::InconsistentElevationGroup<br/></td></tr><tr><td align="left">_149 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _150)</td></tr></table>>];
    bb67__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_337 = const _<br/>_152 = &amp;(*_337)<br/></td></tr><tr><td align="left">_151 = &lt;LendingError as ToString&gt;::to_string(move _152)</td></tr></table>>];
    bb68__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1042_u32 }<br/>_155 = anchor_lang::error::ErrorOrigin::Source(move _156)<br/>StorageDead(_156)<br/>_154 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _155)<br/>StorageDead(_155)<br/>StorageLive(_157)<br/>_157 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_145 = anchor_lang::error::AnchorError { error_name: move _146, error_code_number: move _149, error_msg: move _151, error_origin: move _154, compared_values: move _157 }<br/>StorageDead(_157)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _145)</td></tr></table>>];
    bb69__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt;::Err(move _144)<br/>StorageDead(_144)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb71__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_336 = const _<br/>_167 = &amp;(*_336)<br/></td></tr><tr><td align="left">_166 = LendingError::name(move _167)</td></tr></table>>];
    bb72__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = LendingError::ElevationGroupDebtReserveAsCollateral<br/></td></tr><tr><td align="left">_169 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _170)</td></tr></table>>];
    bb73__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_335 = const _<br/>_172 = &amp;(*_335)<br/></td></tr><tr><td align="left">_171 = &lt;LendingError as ToString&gt;::to_string(move _172)</td></tr></table>>];
    bb74__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1050_u32 }<br/>_175 = anchor_lang::error::ErrorOrigin::Source(move _176)<br/>StorageDead(_176)<br/>_174 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _175)<br/>StorageDead(_175)<br/>StorageLive(_177)<br/>_177 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_165 = anchor_lang::error::AnchorError { error_name: move _166, error_code_number: move _169, error_msg: move _171, error_origin: move _174, compared_values: move _177 }<br/>StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">_164 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _165)</td></tr></table>>];
    bb75__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = _79<br/>StorageLive(_180)<br/>_180 = ((*_131).7: anchor_lang::prelude::Pubkey)<br/>_178 = (move _179, move _180)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_163 = anchor_lang::error::Error::with_pubkeys(move _164, move _178)</td></tr></table>>];
    bb76__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_164)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt;::Err(move _163)<br/>StorageDead(_163)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>_158 = const ()<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;_81<br/></td></tr><tr><td align="left">_183 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _184)</td></tr></table>>];
    bb78__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageLive(_185)<br/>_185 = _133<br/>_186 = Len(((*_183).12: [u64; 32]))<br/>_187 = Lt(_185, _186)<br/></td></tr><tr><td align="left">assert(move _187, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _186, _185)</td></tr></table>>];
    bb79__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_182 = ((*_183).12: [u64; 32])[_185]<br/>StorageLive(_188)<br/>_188 = ((*_54).3: u64)<br/></td></tr><tr><td align="left">_181 = core::num::&lt;impl u64&gt;::saturating_sub(move _182, move _188)</td></tr></table>>];
    bb80__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_182)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;mut _81<br/></td></tr><tr><td align="left">_189 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _190)</td></tr></table>>];
    bb81__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_191)<br/>_191 = _133<br/>_192 = Len(((*_189).12: [u64; 32]))<br/>_193 = Lt(_191, _192)<br/></td></tr><tr><td align="left">assert(move _193, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _192, _191)</td></tr></table>>];
    bb82__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">((*_189).12: [u64; 32])[_191] = move _181<br/>StorageDead(_181)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageLive(_194)<br/>_194 = _132<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;mut _81<br/></td></tr><tr><td align="left">_195 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _196)</td></tr></table>>];
    bb83__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageLive(_197)<br/>_197 = _133<br/>_198 = Len(((*_195).12: [u64; 32]))<br/>_199 = Lt(_197, _198)<br/></td></tr><tr><td align="left">assert(move _199, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _198, _197)</td></tr></table>>];
    bb84__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_200 = CheckedAdd(((*_195).12: [u64; 32])[_197], _194)<br/></td></tr><tr><td align="left">assert(!move (_200.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, ((*_195).12: [u64; 32])[_197], move _194)</td></tr></table>>];
    bb85__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">((*_195).12: [u64; 32])[_197] = move (_200.0: u64)<br/>StorageDead(_194)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageLive(_201)<br/>_201 = _132<br/>((*_54).3: u64) = move _201<br/>StorageDead(_201)<br/>_129 = const ()<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_129 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = &amp;_81<br/>_205 = &amp;(*_206)<br/></td></tr><tr><td align="left">_204 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _205)</td></tr></table>>];
    bb88__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_203 = &amp;(*_204)<br/>StorageDead(_205)<br/>StorageLive(_207)<br/>_207 = &amp;(*_54)<br/></td></tr><tr><td align="left">_202 = calculate_obligation_collateral_market_value(move _203, move _207)</td></tr></table>>];
    bb89__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_203)<br/>StorageDead(_206)<br/>StorageDead(_204)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = _202<br/></td></tr><tr><td align="left">_208 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _209)</td></tr></table>>];
    bb90__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>((*_54).2: u128) = move _208<br/>StorageDead(_208)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;_81<br/>_215 = &amp;(*_216)<br/></td></tr><tr><td align="left">_214 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _215)</td></tr></table>>];
    bb91__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_213 = &amp;(*_214)<br/>StorageDead(_215)<br/>StorageLive(_217)<br/>_217 = _5<br/></td></tr><tr><td align="left">_212 = get_max_ltv_and_liquidation_threshold(move _213, move _217)</td></tr></table>>];
    bb92__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_213)<br/>StorageLive(_210)<br/>_210 = (_212.0: u8)<br/>StorageLive(_211)<br/>_211 = (_212.1: u8)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = &amp;_202<br/>StorageLive(_221)<br/>_221 = &amp;((*_2).21: u64)<br/></td></tr><tr><td align="left">_219 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;u64&gt;&gt;::ge(move _220, move _221)</td></tr></table>>];
    bb93__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb94__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = _211<br/>_222 = Gt(move _223, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _222)</td></tr></table>>];
    bb95__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = _8<br/>StorageLive(_226)<br/>_226 = _211<br/></td></tr><tr><td align="left">_224 = &lt;u8 as Ord&gt;::min(move _225, move _226)</td></tr></table>>];
    bb96__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>_8 = move _224<br/>StorageDead(_224)<br/>_218 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_218 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = _9<br/>StorageLive(_229)<br/>_229 = _210<br/></td></tr><tr><td align="left">_227 = &lt;u8 as Ord&gt;::min(move _228, move _229)</td></tr></table>>];
    bb101__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/>_9 = move _227<br/>StorageDead(_227)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = _10<br/>StorageLive(_232)<br/>_232 = _202<br/></td></tr><tr><td align="left">_230 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _231, move _232)</td></tr></table>>];
    bb102__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>_10 = move _230<br/>StorageDead(_230)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_234 = &amp;mut _11<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = _202<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = _210<br/></td></tr><tr><td align="left">_237 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u8&gt;(move _238)</td></tr></table>>];
    bb103__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/></td></tr><tr><td align="left">_235 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _236, move _237)</td></tr></table>>];
    bb104__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_233 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _234, move _235)</td></tr></table>>];
    bb105__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;mut _12<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = _202<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = _211<br/></td></tr><tr><td align="left">_243 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u8&gt;(move _244)</td></tr></table>>];
    bb106__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/></td></tr><tr><td align="left">_241 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _242, move _243)</td></tr></table>>];
    bb107__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">_239 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _240, move _241)</td></tr></table>>];
    bb108__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_81<br/></td></tr><tr><td align="left">_246 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb109__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>_245 = (((*_246).9: state::reserve::ReserveConfig).1: u8)<br/>StorageLive(_248)<br/>_248 = _53<br/>_249 = Len(((*_1).12: [u8; 8]))<br/>_250 = Lt(_248, _249)<br/></td></tr><tr><td align="left">assert(move _250, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _249, _248)</td></tr></table>>];
    bb110__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">((*_1).12: [u8; 8])[_248] = move _245<br/>StorageDead(_245)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = &amp;mut _14<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = &amp;_81<br/></td></tr><tr><td align="left">_255 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _256)</td></tr></table>>];
    bb111__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_254 = &amp;((*_255).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_253 = last_update::LastUpdate::get_price_status(move _254)</td></tr></table>>];
    bb112__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/></td></tr><tr><td align="left">_251 = &lt;last_update::PriceStatusFlags as BitAndAssign&gt;::bitand_assign(move _252, move _253)</td></tr></table>>];
    bb113__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/>StorageDead(_255)<br/>StorageDead(_251)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_334 = const _<br/>_262 = &amp;(*_334)<br/>_261 = &amp;(*_262)<br/>_260 = move _261 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_261)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_81<br/></td></tr><tr><td align="left">_274 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb114__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>_273 = &amp;(((*_274).9: state::reserve::ReserveConfig).19: state::token_info::TokenInfo)<br/></td></tr><tr><td align="left">_272 = token_info::TokenInfo::symbol(move _273)</td></tr></table>>];
    bb115__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>_271 = &amp;_272<br/>_270 = &amp;_271<br/>_269 = &amp;(*_270)<br/></td></tr><tr><td align="left">_268 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;&amp;str&gt;(move _269)</td></tr></table>>];
    bb116__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_81<br/></td></tr><tr><td align="left">_285 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _286)</td></tr></table>>];
    bb117__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_284 = &amp;(*_285)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_283 = reserve::Reserve::collateral_exchange_rate(move _284)</td></tr></table>>];
    bb118__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_282 = &amp;_283<br/>StorageDead(_284)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = ((*_54).1: u64)<br/></td></tr><tr><td align="left">_287 = &lt;u64 as Into&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::into(move _288)</td></tr></table>>];
    bb119__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/></td></tr><tr><td align="left">_281 = reserve::CollateralExchangeRate::fraction_collateral_to_liquidity(move _282, move _287)</td></tr></table>>];
    bb120__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">_280 = &amp;_281<br/>StorageDead(_287)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">_279 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _280)</td></tr></table>>];
    bb121__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>_278 = &amp;_279<br/>_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _277)</td></tr></table>>];
    bb122__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_293 = &amp;_202<br/></td></tr><tr><td align="left">_292 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _293)</td></tr></table>>];
    bb123__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>_291 = &amp;_292<br/>_290 = &amp;(*_291)<br/></td></tr><tr><td align="left">_289 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _290)</td></tr></table>>];
    bb124__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_267 = [move _268, move _276, move _289]<br/>StorageDead(_289)<br/>StorageDead(_276)<br/>StorageDead(_268)<br/>_266 = &amp;_267<br/>_265 = &amp;(*_266)<br/>_264 = move _265 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_259 = Arguments::&lt;'_&gt;::new_v1(move _260, move _264)</td></tr></table>>];
    bb125__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_258 = _print(move _259)</td></tr></table>>];
    bb126__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageDead(_285)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_262)<br/>StorageDead(_258)<br/>_257 = const ()<br/>StorageDead(_257)<br/>_47 = const ()<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb127__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb128__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>_46 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb130__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/>_299 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _299)</td></tr></table>>];
    bb131__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_300)<br/>_300 = ((_5 as Some).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = ((*_300).5: u8)<br/>StorageLive(_304)<br/>_304 = _16<br/>_302 = Lt(move _303, move _304)<br/></td></tr><tr><td align="left">switchInt(move _302)</td></tr></table>>];
    bb132__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_303)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_343 = const _<br/>_310 = &amp;(*_343)<br/></td></tr><tr><td align="left">_309 = LendingError::name(move _310)</td></tr></table>>];
    bb133__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = LendingError::ObligationCollateralExceedsElevationGroupLimit<br/></td></tr><tr><td align="left">_312 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _313)</td></tr></table>>];
    bb134__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_342 = const _<br/>_315 = &amp;(*_342)<br/></td></tr><tr><td align="left">_314 = &lt;LendingError as ToString&gt;::to_string(move _315)</td></tr></table>>];
    bb135__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1105_u32 }<br/>_318 = anchor_lang::error::ErrorOrigin::Source(move _319)<br/>StorageDead(_319)<br/>_317 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _318)<br/>StorageDead(_318)<br/>StorageLive(_320)<br/>_320 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_308 = anchor_lang::error::AnchorError { error_name: move _309, error_code_number: move _312, error_msg: move _314, error_origin: move _317, compared_values: move _320 }<br/>StorageDead(_320)<br/>StorageDead(_317)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_307 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _308)</td></tr></table>>];
    bb136__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_322 = ((*_300).5: u8)<br/>StorageLive(_323)<br/>_323 = _16<br/>_321 = (move _322, move _323)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/></td></tr><tr><td align="left">_306 = anchor_lang::error::Error::with_values::&lt;u8, u8&gt;(move _307, move _321)</td></tr></table>>];
    bb137__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_307)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt;::Err(move _306)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_303)<br/>_301 = const ()<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>_294 = const ()<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_294 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/>_294 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = _8<br/>StorageLive(_326)<br/>_326 = _9<br/>StorageLive(_327)<br/>_327 = _13<br/>StorageLive(_328)<br/>_328 = _10<br/>StorageLive(_329)<br/>_329 = _11<br/>StorageLive(_330)<br/>_330 = _12<br/>StorageLive(_331)<br/>_331 = _14<br/>StorageLive(_332)<br/>_332 = _15<br/>_324 = state::types::RefreshObligationDepositsResult { lowest_deposit_liquidation_ltv_threshold_pct: move _325, lowest_deposit_max_ltv_pct: move _326, num_of_obsolete_reserves: move _327, deposited_value_f: move _328, allowed_borrow_value_f: move _329, unhealthy_borrow_value_f: move _330, prices_state: move _331, borrowing_disabled: move _332 }<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationDepositsResult, anchor_lang::error::Error&gt;::Ok(move _324)<br/>StorageDead(_324)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb142__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb144__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb145__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb147__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">return</td></tr></table>>];
    bb148__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left">drop(_309)</td></tr></table>>];
    bb149__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left">drop(_166)</td></tr></table>>];
    bb150__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left">drop(_146)</td></tr></table>>];
    bb151__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb152__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb153__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb154__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">154 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb155__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">155 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb156__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">156 (cleanup)</td></tr><tr><td align="left" balign="left">_358 = discriminant(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">157 (cleanup)</td></tr><tr><td align="left" balign="left">_359 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">158 (cleanup)</td></tr><tr><td align="left" balign="left">_360 = discriminant(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">159 (cleanup)</td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb160__0_1303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">160 (cleanup)</td></tr><tr><td align="left">switchInt(_345)</td></tr></table>>];
    bb0__0_1303 -> bb1__0_1303 [label="return"];
    bb0__0_1303 -> bb154__0_1303 [label="unwind"];
    bb1__0_1303 -> bb2__0_1303 [label="0"];
    bb1__0_1303 -> bb4__0_1303 [label="1"];
    bb1__0_1303 -> bb3__0_1303 [label="otherwise"];
    bb2__0_1303 -> bb6__0_1303 [label="0"];
    bb2__0_1303 -> bb3__0_1303 [label="otherwise"];
    bb3__0_1303 -> bb7__0_1303 [label="return"];
    bb3__0_1303 -> bb154__0_1303 [label="unwind"];
    bb4__0_1303 -> bb5__0_1303 [label="1"];
    bb4__0_1303 -> bb3__0_1303 [label="otherwise"];
    bb5__0_1303 -> bb8__0_1303 [label=""];
    bb6__0_1303 -> bb8__0_1303 [label=""];
    bb7__0_1303 -> bb154__0_1303 [label="unwind"];
    bb8__0_1303 -> bb9__0_1303 [label="return"];
    bb8__0_1303 -> bb154__0_1303 [label="unwind"];
    bb9__0_1303 -> bb10__0_1303 [label="return"];
    bb9__0_1303 -> bb154__0_1303 [label="unwind"];
    bb10__0_1303 -> bb11__0_1303 [label="return"];
    bb10__0_1303 -> bb154__0_1303 [label="unwind"];
    bb11__0_1303 -> bb12__0_1303 [label="return"];
    bb11__0_1303 -> bb154__0_1303 [label="unwind"];
    bb12__0_1303 -> bb13__0_1303 [label=""];
    bb13__0_1303 -> bb14__0_1303 [label="return"];
    bb13__0_1303 -> bb154__0_1303 [label="unwind"];
    bb14__0_1303 -> bb17__0_1303 [label="0"];
    bb14__0_1303 -> bb15__0_1303 [label="1"];
    bb14__0_1303 -> bb16__0_1303 [label="otherwise"];
    bb15__0_1303 -> bb18__0_1303 [label="return"];
    bb15__0_1303 -> bb154__0_1303 [label="unwind"];
    bb17__0_1303 -> bb129__0_1303 [label="return"];
    bb17__0_1303 -> bb154__0_1303 [label="unwind"];
    bb18__0_1303 -> bb19__0_1303 [label="return"];
    bb18__0_1303 -> bb160__0_1303 [label="unwind"];
    bb19__0_1303 -> bb20__0_1303 [label="return"];
    bb19__0_1303 -> bb153__0_1303 [label="unwind"];
    bb20__0_1303 -> bb21__0_1303 [label="return"];
    bb20__0_1303 -> bb153__0_1303 [label="unwind"];
    bb21__0_1303 -> bb22__0_1303 [label="return"];
    bb21__0_1303 -> bb160__0_1303 [label="unwind"];
    bb22__0_1303 -> bb23__0_1303 [label="return"];
    bb22__0_1303 -> bb160__0_1303 [label="unwind"];
    bb23__0_1303 -> bb24__0_1303 [label="return"];
    bb23__0_1303 -> bb154__0_1303 [label="unwind"];
    bb24__0_1303 -> bb25__0_1303 [label="0"];
    bb24__0_1303 -> bb26__0_1303 [label="1"];
    bb24__0_1303 -> bb16__0_1303 [label="otherwise"];
    bb25__0_1303 -> bb28__0_1303 [label="return"];
    bb25__0_1303 -> bb152__0_1303 [label="unwind"];
    bb26__0_1303 -> bb27__0_1303 [label="return"];
    bb26__0_1303 -> bb158__0_1303 [label="unwind"];
    bb27__0_1303 -> bb145__0_1303 [label=""];
    bb28__0_1303 -> bb29__0_1303 [label="return"];
    bb28__0_1303 -> bb152__0_1303 [label="unwind"];
    bb29__0_1303 -> bb30__0_1303 [label="return"];
    bb29__0_1303 -> bb152__0_1303 [label="unwind"];
    bb30__0_1303 -> bb31__0_1303 [label="return"];
    bb30__0_1303 -> bb152__0_1303 [label="unwind"];
    bb31__0_1303 -> bb32__0_1303 [label="0"];
    bb31__0_1303 -> bb33__0_1303 [label="1"];
    bb31__0_1303 -> bb16__0_1303 [label="otherwise"];
    bb32__0_1303 -> bb35__0_1303 [label="return"];
    bb32__0_1303 -> bb151__0_1303 [label="unwind"];
    bb33__0_1303 -> bb34__0_1303 [label="return"];
    bb33__0_1303 -> bb157__0_1303 [label="unwind"];
    bb34__0_1303 -> bb144__0_1303 [label=""];
    bb35__0_1303 -> bb40__0_1303 [label="0"];
    bb35__0_1303 -> bb36__0_1303 [label="otherwise"];
    bb36__0_1303 -> bb37__0_1303 [label="return"];
    bb36__0_1303 -> bb151__0_1303 [label="unwind"];
    bb37__0_1303 -> bb39__0_1303 [label="0"];
    bb37__0_1303 -> bb38__0_1303 [label="otherwise"];
    bb38__0_1303 -> bb42__0_1303 [label=""];
    bb39__0_1303 -> bb41__0_1303 [label=""];
    bb40__0_1303 -> bb41__0_1303 [label=""];
    bb41__0_1303 -> bb42__0_1303 [label=""];
    bb42__0_1303 -> bb43__0_1303 [label="return"];
    bb42__0_1303 -> bb151__0_1303 [label="unwind"];
    bb43__0_1303 -> bb44__0_1303 [label="return"];
    bb43__0_1303 -> bb151__0_1303 [label="unwind"];
    bb44__0_1303 -> bb45__0_1303 [label="return"];
    bb44__0_1303 -> bb151__0_1303 [label="unwind"];
    bb45__0_1303 -> bb48__0_1303 [label="0"];
    bb45__0_1303 -> bb46__0_1303 [label="otherwise"];
    bb46__0_1303 -> bb47__0_1303 [label="success"];
    bb46__0_1303 -> bb151__0_1303 [label="unwind"];
    bb47__0_1303 -> bb49__0_1303 [label=""];
    bb48__0_1303 -> bb49__0_1303 [label=""];
    bb49__0_1303 -> bb50__0_1303 [label="return"];
    bb49__0_1303 -> bb151__0_1303 [label="unwind"];
    bb50__0_1303 -> bb51__0_1303 [label="return"];
    bb50__0_1303 -> bb151__0_1303 [label="unwind"];
    bb51__0_1303 -> bb52__0_1303 [label="return"];
    bb51__0_1303 -> bb151__0_1303 [label="unwind"];
    bb52__0_1303 -> bb53__0_1303 [label="0"];
    bb52__0_1303 -> bb54__0_1303 [label="1"];
    bb52__0_1303 -> bb16__0_1303 [label="otherwise"];
    bb53__0_1303 -> bb58__0_1303 [label="0"];
    bb53__0_1303 -> bb56__0_1303 [label="otherwise"];
    bb54__0_1303 -> bb55__0_1303 [label="return"];
    bb54__0_1303 -> bb156__0_1303 [label="unwind"];
    bb55__0_1303 -> bb143__0_1303 [label=""];
    bb56__0_1303 -> bb57__0_1303 [label="success"];
    bb56__0_1303 -> bb151__0_1303 [label="unwind"];
    bb57__0_1303 -> bb59__0_1303 [label=""];
    bb58__0_1303 -> bb59__0_1303 [label=""];
    bb59__0_1303 -> bb60__0_1303 [label="1"];
    bb59__0_1303 -> bb86__0_1303 [label="otherwise"];
    bb60__0_1303 -> bb61__0_1303 [label="return"];
    bb60__0_1303 -> bb151__0_1303 [label="unwind"];
    bb61__0_1303 -> bb62__0_1303 [label="return"];
    bb61__0_1303 -> bb151__0_1303 [label="unwind"];
    bb62__0_1303 -> bb63__0_1303 [label="return"];
    bb62__0_1303 -> bb151__0_1303 [label="unwind"];
    bb63__0_1303 -> bb65__0_1303 [label="0"];
    bb63__0_1303 -> bb64__0_1303 [label="otherwise"];
    bb64__0_1303 -> bb70__0_1303 [label="return"];
    bb64__0_1303 -> bb151__0_1303 [label="unwind"];
    bb65__0_1303 -> bb66__0_1303 [label="return"];
    bb65__0_1303 -> bb151__0_1303 [label="unwind"];
    bb66__0_1303 -> bb67__0_1303 [label="return"];
    bb66__0_1303 -> bb150__0_1303 [label="unwind"];
    bb67__0_1303 -> bb68__0_1303 [label="return"];
    bb67__0_1303 -> bb150__0_1303 [label="unwind"];
    bb68__0_1303 -> bb69__0_1303 [label="return"];
    bb68__0_1303 -> bb151__0_1303 [label="unwind"];
    bb69__0_1303 -> bb142__0_1303 [label=""];
    bb70__0_1303 -> bb77__0_1303 [label="0"];
    bb70__0_1303 -> bb71__0_1303 [label="otherwise"];
    bb71__0_1303 -> bb72__0_1303 [label="return"];
    bb71__0_1303 -> bb151__0_1303 [label="unwind"];
    bb72__0_1303 -> bb73__0_1303 [label="return"];
    bb72__0_1303 -> bb149__0_1303 [label="unwind"];
    bb73__0_1303 -> bb74__0_1303 [label="return"];
    bb73__0_1303 -> bb149__0_1303 [label="unwind"];
    bb74__0_1303 -> bb75__0_1303 [label="return"];
    bb74__0_1303 -> bb151__0_1303 [label="unwind"];
    bb75__0_1303 -> bb76__0_1303 [label="return"];
    bb75__0_1303 -> bb151__0_1303 [label="unwind"];
    bb76__0_1303 -> bb142__0_1303 [label=""];
    bb77__0_1303 -> bb78__0_1303 [label="return"];
    bb77__0_1303 -> bb151__0_1303 [label="unwind"];
    bb78__0_1303 -> bb79__0_1303 [label="success"];
    bb78__0_1303 -> bb151__0_1303 [label="unwind"];
    bb79__0_1303 -> bb80__0_1303 [label="return"];
    bb79__0_1303 -> bb151__0_1303 [label="unwind"];
    bb80__0_1303 -> bb81__0_1303 [label="return"];
    bb80__0_1303 -> bb151__0_1303 [label="unwind"];
    bb81__0_1303 -> bb82__0_1303 [label="success"];
    bb81__0_1303 -> bb151__0_1303 [label="unwind"];
    bb82__0_1303 -> bb83__0_1303 [label="return"];
    bb82__0_1303 -> bb151__0_1303 [label="unwind"];
    bb83__0_1303 -> bb84__0_1303 [label="success"];
    bb83__0_1303 -> bb151__0_1303 [label="unwind"];
    bb84__0_1303 -> bb85__0_1303 [label="success"];
    bb84__0_1303 -> bb151__0_1303 [label="unwind"];
    bb85__0_1303 -> bb87__0_1303 [label=""];
    bb86__0_1303 -> bb87__0_1303 [label=""];
    bb87__0_1303 -> bb88__0_1303 [label="return"];
    bb87__0_1303 -> bb151__0_1303 [label="unwind"];
    bb88__0_1303 -> bb89__0_1303 [label="return"];
    bb88__0_1303 -> bb151__0_1303 [label="unwind"];
    bb89__0_1303 -> bb90__0_1303 [label="return"];
    bb89__0_1303 -> bb151__0_1303 [label="unwind"];
    bb90__0_1303 -> bb91__0_1303 [label="return"];
    bb90__0_1303 -> bb151__0_1303 [label="unwind"];
    bb91__0_1303 -> bb92__0_1303 [label="return"];
    bb91__0_1303 -> bb151__0_1303 [label="unwind"];
    bb92__0_1303 -> bb93__0_1303 [label="return"];
    bb92__0_1303 -> bb151__0_1303 [label="unwind"];
    bb93__0_1303 -> bb98__0_1303 [label="0"];
    bb93__0_1303 -> bb94__0_1303 [label="otherwise"];
    bb94__0_1303 -> bb97__0_1303 [label="0"];
    bb94__0_1303 -> bb95__0_1303 [label="otherwise"];
    bb95__0_1303 -> bb96__0_1303 [label="return"];
    bb95__0_1303 -> bb151__0_1303 [label="unwind"];
    bb96__0_1303 -> bb100__0_1303 [label=""];
    bb97__0_1303 -> bb99__0_1303 [label=""];
    bb98__0_1303 -> bb99__0_1303 [label=""];
    bb99__0_1303 -> bb100__0_1303 [label=""];
    bb100__0_1303 -> bb101__0_1303 [label="return"];
    bb100__0_1303 -> bb151__0_1303 [label="unwind"];
    bb101__0_1303 -> bb102__0_1303 [label="return"];
    bb101__0_1303 -> bb151__0_1303 [label="unwind"];
    bb102__0_1303 -> bb103__0_1303 [label="return"];
    bb102__0_1303 -> bb151__0_1303 [label="unwind"];
    bb103__0_1303 -> bb104__0_1303 [label="return"];
    bb103__0_1303 -> bb151__0_1303 [label="unwind"];
    bb104__0_1303 -> bb105__0_1303 [label="return"];
    bb104__0_1303 -> bb151__0_1303 [label="unwind"];
    bb105__0_1303 -> bb106__0_1303 [label="return"];
    bb105__0_1303 -> bb151__0_1303 [label="unwind"];
    bb106__0_1303 -> bb107__0_1303 [label="return"];
    bb106__0_1303 -> bb151__0_1303 [label="unwind"];
    bb107__0_1303 -> bb108__0_1303 [label="return"];
    bb107__0_1303 -> bb151__0_1303 [label="unwind"];
    bb108__0_1303 -> bb109__0_1303 [label="return"];
    bb108__0_1303 -> bb151__0_1303 [label="unwind"];
    bb109__0_1303 -> bb110__0_1303 [label="success"];
    bb109__0_1303 -> bb151__0_1303 [label="unwind"];
    bb110__0_1303 -> bb111__0_1303 [label="return"];
    bb110__0_1303 -> bb151__0_1303 [label="unwind"];
    bb111__0_1303 -> bb112__0_1303 [label="return"];
    bb111__0_1303 -> bb151__0_1303 [label="unwind"];
    bb112__0_1303 -> bb113__0_1303 [label="return"];
    bb112__0_1303 -> bb151__0_1303 [label="unwind"];
    bb113__0_1303 -> bb114__0_1303 [label="return"];
    bb113__0_1303 -> bb151__0_1303 [label="unwind"];
    bb114__0_1303 -> bb115__0_1303 [label="return"];
    bb114__0_1303 -> bb151__0_1303 [label="unwind"];
    bb115__0_1303 -> bb116__0_1303 [label="return"];
    bb115__0_1303 -> bb151__0_1303 [label="unwind"];
    bb116__0_1303 -> bb117__0_1303 [label="return"];
    bb116__0_1303 -> bb151__0_1303 [label="unwind"];
    bb117__0_1303 -> bb118__0_1303 [label="return"];
    bb117__0_1303 -> bb151__0_1303 [label="unwind"];
    bb118__0_1303 -> bb119__0_1303 [label="return"];
    bb118__0_1303 -> bb151__0_1303 [label="unwind"];
    bb119__0_1303 -> bb120__0_1303 [label="return"];
    bb119__0_1303 -> bb151__0_1303 [label="unwind"];
    bb120__0_1303 -> bb121__0_1303 [label="return"];
    bb120__0_1303 -> bb151__0_1303 [label="unwind"];
    bb121__0_1303 -> bb122__0_1303 [label="return"];
    bb121__0_1303 -> bb151__0_1303 [label="unwind"];
    bb122__0_1303 -> bb123__0_1303 [label="return"];
    bb122__0_1303 -> bb151__0_1303 [label="unwind"];
    bb123__0_1303 -> bb124__0_1303 [label="return"];
    bb123__0_1303 -> bb151__0_1303 [label="unwind"];
    bb124__0_1303 -> bb125__0_1303 [label="return"];
    bb124__0_1303 -> bb151__0_1303 [label="unwind"];
    bb125__0_1303 -> bb126__0_1303 [label="return"];
    bb125__0_1303 -> bb151__0_1303 [label="unwind"];
    bb126__0_1303 -> bb127__0_1303 [label="return"];
    bb126__0_1303 -> bb152__0_1303 [label="unwind"];
    bb127__0_1303 -> bb128__0_1303 [label="return"];
    bb127__0_1303 -> bb154__0_1303 [label="unwind"];
    bb128__0_1303 -> bb13__0_1303 [label=""];
    bb129__0_1303 -> bb140__0_1303 [label="0"];
    bb129__0_1303 -> bb130__0_1303 [label="otherwise"];
    bb130__0_1303 -> bb131__0_1303 [label="1"];
    bb130__0_1303 -> bb139__0_1303 [label="otherwise"];
    bb131__0_1303 -> bb138__0_1303 [label="0"];
    bb131__0_1303 -> bb132__0_1303 [label="otherwise"];
    bb132__0_1303 -> bb133__0_1303 [label="return"];
    bb132__0_1303 -> bb154__0_1303 [label="unwind"];
    bb133__0_1303 -> bb134__0_1303 [label="return"];
    bb133__0_1303 -> bb148__0_1303 [label="unwind"];
    bb134__0_1303 -> bb135__0_1303 [label="return"];
    bb134__0_1303 -> bb148__0_1303 [label="unwind"];
    bb135__0_1303 -> bb136__0_1303 [label="return"];
    bb135__0_1303 -> bb154__0_1303 [label="unwind"];
    bb136__0_1303 -> bb137__0_1303 [label="return"];
    bb136__0_1303 -> bb154__0_1303 [label="unwind"];
    bb137__0_1303 -> bb146__0_1303 [label=""];
    bb138__0_1303 -> bb141__0_1303 [label=""];
    bb139__0_1303 -> bb141__0_1303 [label=""];
    bb140__0_1303 -> bb141__0_1303 [label=""];
    bb141__0_1303 -> bb147__0_1303 [label="return"];
    bb141__0_1303 -> bb155__0_1303 [label="unwind"];
    bb142__0_1303 -> bb143__0_1303 [label=""];
    bb143__0_1303 -> bb144__0_1303 [label="return"];
    bb143__0_1303 -> bb152__0_1303 [label="unwind"];
    bb144__0_1303 -> bb145__0_1303 [label="return"];
    bb144__0_1303 -> bb154__0_1303 [label="unwind"];
    bb145__0_1303 -> bb146__0_1303 [label=""];
    bb146__0_1303 -> bb147__0_1303 [label="return"];
    bb146__0_1303 -> bb155__0_1303 [label="unwind"];
    bb148__0_1303 -> bb154__0_1303 [label="return"];
    bb149__0_1303 -> bb151__0_1303 [label="return"];
    bb150__0_1303 -> bb151__0_1303 [label="return"];
    bb151__0_1303 -> bb152__0_1303 [label="return"];
    bb152__0_1303 -> bb154__0_1303 [label="return"];
    bb153__0_1303 -> bb160__0_1303 [label="return"];
    bb154__0_1303 -> bb155__0_1303 [label="return"];
    bb156__0_1303 -> bb151__0_1303 [label=""];
    bb157__0_1303 -> bb152__0_1303 [label=""];
    bb158__0_1303 -> bb154__0_1303 [label=""];
    bb159__0_1303 -> bb154__0_1303 [label="return"];
    bb160__0_1303 -> bb154__0_1303 [label="0"];
    bb160__0_1303 -> bb159__0_1303 [label="otherwise"];
}
