// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:874:1: 874:28>::from_supply_and_liquidity` after PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:874:1: 874:28>::from_supply_and_liquidity(_1: u64, _2: FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>) -> reserve::CollateralExchangeRate {
    debug collateral_supply => _1;
    debug liquidity => _2;
    let mut _0: state::reserve::CollateralExchangeRate;
    let mut _3: u128;
    let mut _4: u64;
    let mut _5: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _1;
        _3 = <u64 as Into<u128>>::into(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        _5 = _2;
        _0 = reserve::CollateralExchangeRate { collateral_supply: move _3, liquidity: move _5 };
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
