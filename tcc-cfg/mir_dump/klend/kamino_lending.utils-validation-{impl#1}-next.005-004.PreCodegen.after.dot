digraph Mir_0_2846 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;LengthCheckingZipIterator&lt;L, R&gt; as Iterator&gt;::next(_1: &amp;ReErased mut utils::validation::LengthCheckingZipIterator&lt;L/#0, R/#1&gt;) -&gt; std::option::Option&lt;std::result::Result&lt;(Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) }), Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })), utils::validation::LengthMismatchError&gt;&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: !;<br align="left"/>let mut _5: (std::option::Option&lt;Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;, std::option::Option&lt;Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;);<br align="left"/>let mut _6: std::option::Option&lt;Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;;<br align="left"/>let mut _7: &amp;ReErased mut L/#0;<br align="left"/>let mut _8: std::option::Option&lt;Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;;<br align="left"/>let mut _9: &amp;ReErased mut R/#1;<br align="left"/>let mut _10: isize;<br align="left"/>let mut _11: isize;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) });<br align="left"/>let _14: Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) });<br align="left"/>let mut _15: std::result::Result&lt;(Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) }), Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })), utils::validation::LengthMismatchError&gt;;<br align="left"/>let mut _16: (Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) }), Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) }));<br align="left"/>let mut _17: Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) });<br align="left"/>let mut _18: Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) });<br align="left"/>let _19: (std::option::Option&lt;Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;, std::option::Option&lt;Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;);<br align="left"/>let mut _20: std::result::Result&lt;(Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) }), Alias(Projection, AliasTy { args: [R/#1], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })), utils::validation::LengthMismatchError&gt;;<br align="left"/>let mut _21: utils::validation::LengthMismatchError;<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: isize;<br align="left"/>let mut _29: isize;<br align="left"/>let mut _30: isize;<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug left =&gt; _13;<br align="left"/>debug right =&gt; _14;<br align="left"/>debug _different =&gt; _19;<br align="left"/>>;
    bb0__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_22 = const false<br/>_25 = const false<br/>_26 = const false<br/>_23 = const false<br/>_24 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).2: bool)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = std::option::Option::&lt;std::result::Result&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;&gt;::None<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;mut ((*_1).0: L)<br/></td></tr><tr><td align="left">_6 = &lt;L as Iterator&gt;::next(move _7)</td></tr></table>>];
    bb3__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut ((*_1).1: R)<br/></td></tr><tr><td align="left">_8 = &lt;R as Iterator&gt;::next(move _9)</td></tr></table>>];
    bb4__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_22 = const true<br/>_23 = const true<br/>_24 = const true<br/>_25 = const true<br/>_26 = const true<br/>_5 = (move _6, move _8)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>_12 = discriminant((_5.0: std::option::Option&lt;&lt;L as std::iter::Iterator&gt;::Item&gt;))<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb5__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_10 = discriminant((_5.1: std::option::Option&lt;&lt;R as std::iter::Iterator&gt;::Item&gt;))<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb6__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_22 = const false<br/>_23 = const false<br/>_24 = const false<br/>_25 = const false<br/>_26 = const false<br/>_19 = move _5<br/>((*_1).2: bool) = const true<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = LengthMismatchError<br/>_20 = std::result::Result::&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;::Err(move _21)<br/>StorageDead(_21)<br/>_0 = std::option::Option::&lt;std::result::Result&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;&gt;::Some(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb7__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_11 = discriminant((_5.1: std::option::Option&lt;&lt;R as std::iter::Iterator&gt;::Item&gt;))<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb8__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_0 = std::option::Option::&lt;std::result::Result&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move (((_5.0: std::option::Option&lt;&lt;L as std::iter::Iterator&gt;::Item&gt;) as Some).0: &lt;L as std::iter::Iterator&gt;::Item)<br/>StorageLive(_14)<br/>_14 = move (((_5.1: std::option::Option&lt;&lt;R as std::iter::Iterator&gt;::Item&gt;) as Some).0: &lt;R as std::iter::Iterator&gt;::Item)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = move _13<br/>StorageLive(_18)<br/>_18 = move _14<br/>_16 = (move _17, move _18)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>_15 = std::result::Result::&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;::Ok(move _16)<br/>StorageDead(_16)<br/>_0 = std::option::Option::&lt;std::result::Result&lt;(&lt;L as Iterator&gt;::Item, &lt;R as Iterator&gt;::Item), LengthMismatchError&gt;&gt;::Some(move _15)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb13__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb14__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_23 = const false<br/>_22 = const false<br/>_22 = const false<br/>_23 = const false<br/>_24 = const false<br/>_25 = const false<br/>_26 = const false<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_29 = discriminant((_5.1: std::option::Option&lt;&lt;R as std::iter::Iterator&gt;::Item&gt;))<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_25 = const false<br/></td></tr><tr><td align="left">switchInt(_23)</td></tr></table>>];
    bb17__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_31 = discriminant((_5.0: std::option::Option&lt;&lt;L as std::iter::Iterator&gt;::Item&gt;))<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">switchInt(_25)</td></tr></table>>];
    bb0__0_2846 -> bb2__0_2846 [label="0"];
    bb0__0_2846 -> bb1__0_2846 [label="otherwise"];
    bb1__0_2846 -> bb11__0_2846 [label=""];
    bb2__0_2846 -> bb3__0_2846 [label="return"];
    bb3__0_2846 -> bb4__0_2846 [label="return"];
    bb3__0_2846 -> bb12__0_2846 [label="unwind"];
    bb4__0_2846 -> bb5__0_2846 [label="0"];
    bb4__0_2846 -> bb7__0_2846 [label="1"];
    bb4__0_2846 -> bb6__0_2846 [label="otherwise"];
    bb5__0_2846 -> bb8__0_2846 [label="0"];
    bb5__0_2846 -> bb6__0_2846 [label="otherwise"];
    bb6__0_2846 -> bb10__0_2846 [label="return"];
    bb6__0_2846 -> bb13__0_2846 [label="unwind"];
    bb7__0_2846 -> bb9__0_2846 [label="1"];
    bb7__0_2846 -> bb6__0_2846 [label="otherwise"];
    bb8__0_2846 -> bb18__0_2846 [label=""];
    bb9__0_2846 -> bb18__0_2846 [label=""];
    bb10__0_2846 -> bb18__0_2846 [label=""];
    bb12__0_2846 -> bb13__0_2846 [label="return"];
    bb14__0_2846 -> bb11__0_2846 [label=""];
    bb15__0_2846 -> bb14__0_2846 [label=""];
    bb16__0_2846 -> bb14__0_2846 [label="0"];
    bb16__0_2846 -> bb15__0_2846 [label="otherwise"];
    bb17__0_2846 -> bb16__0_2846 [label=""];
    bb18__0_2846 -> bb16__0_2846 [label="0"];
    bb18__0_2846 -> bb17__0_2846 [label="otherwise"];
}
