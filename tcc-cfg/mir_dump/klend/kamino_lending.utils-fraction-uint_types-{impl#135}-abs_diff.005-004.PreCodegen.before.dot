digraph Mir_0_11918 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::abs_diff(_1: utils::fraction::uint_types::U128, _2: utils::fraction::uint_types::U128) -&gt; utils::fraction::uint_types::U128<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _5: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _6: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _7: utils::fraction::uint_types::U128;<br align="left"/>let mut _8: utils::fraction::uint_types::U128;<br align="left"/>let mut _9: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _10: utils::fraction::uint_types::U128;<br align="left"/>let mut _11: utils::fraction::uint_types::U128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>>;
    bb0__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;_1<br/>StorageLive(_5)<br/>_5 = &amp;_2<br/></td></tr><tr><td align="left">_3 = &lt;uint_types::U128 as PartialOrd&gt;::gt(move _4, move _5)</td></tr></table>>];
    bb1__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = uint_types::U128::overflowing_sub(move _7, move _8)</td></tr></table>>];
    bb3__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>_0 = (_6.0: utils::fraction::uint_types::U128)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = _1<br/></td></tr><tr><td align="left">_9 = uint_types::U128::overflowing_sub(move _10, move _11)</td></tr></table>>];
    bb5__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_0 = (_9.0: utils::fraction::uint_types::U128)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_11918 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11918 -> bb1__0_11918 [label="return"];
    bb1__0_11918 -> bb4__0_11918 [label="0"];
    bb1__0_11918 -> bb2__0_11918 [label="otherwise"];
    bb2__0_11918 -> bb3__0_11918 [label="return"];
    bb3__0_11918 -> bb6__0_11918 [label=""];
    bb4__0_11918 -> bb5__0_11918 [label="return"];
    bb5__0_11918 -> bb6__0_11918 [label=""];
}
