digraph Mir_0_304 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_init_obligation_farms_for_reserve::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _4: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _13: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _14: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _19: state::reserve::ReserveStatus;<br align="left"/>let mut _20: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _21: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _22: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _23: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _24: state::reserve::ReserveStatus;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: anchor_lang::error::Error;<br align="left"/>let mut _27: anchor_lang::error::AnchorError;<br align="left"/>let mut _28: std::string::String;<br align="left"/>let mut _29: &amp;ReErased LendingError;<br align="left"/>let _30: LendingError;<br align="left"/>let mut _31: u32;<br align="left"/>let mut _32: LendingError;<br align="left"/>let mut _33: std::string::String;<br align="left"/>let mut _34: &amp;ReErased LendingError;<br align="left"/>let _35: LendingError;<br align="left"/>let mut _36: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _37: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _38: anchor_lang::error::Source;<br align="left"/>let mut _39: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _40: ();<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _44: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: anchor_lang::error::Error;<br align="left"/>let mut _48: anchor_lang::error::AnchorError;<br align="left"/>let mut _49: std::string::String;<br align="left"/>let mut _50: &amp;ReErased LendingError;<br align="left"/>let _51: LendingError;<br align="left"/>let mut _52: u32;<br align="left"/>let mut _53: LendingError;<br align="left"/>let mut _54: std::string::String;<br align="left"/>let mut _55: &amp;ReErased LendingError;<br align="left"/>let _56: LendingError;<br align="left"/>let mut _57: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _58: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _59: anchor_lang::error::Source;<br align="left"/>let mut _60: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _61: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _63: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _64: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _65: state::reserve::ReserveFarmKind;<br align="left"/>let mut _66: std::result::Result&lt;state::reserve::ReserveFarmKind, num_enum::TryFromPrimitiveError&lt;state::reserve::ReserveFarmKind&gt;&gt;;<br align="left"/>let mut _67: u8;<br align="left"/>let _68: ();<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _72: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _73: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: anchor_lang::error::Error;<br align="left"/>let mut _76: anchor_lang::error::AnchorError;<br align="left"/>let mut _77: std::string::String;<br align="left"/>let mut _78: &amp;ReErased LendingError;<br align="left"/>let _79: LendingError;<br align="left"/>let mut _80: u32;<br align="left"/>let mut _81: LendingError;<br align="left"/>let mut _82: std::string::String;<br align="left"/>let mut _83: &amp;ReErased LendingError;<br align="left"/>let _84: LendingError;<br align="left"/>let mut _85: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _86: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _87: anchor_lang::error::Source;<br align="left"/>let mut _88: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _89: ();<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _91: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: &amp;ReErased anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;&gt;;<br align="left"/>let _93: &amp;ReErased anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;&gt;;<br align="left"/>let mut _94: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _95: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _100: ();<br align="left"/>let mut _101: ();<br align="left"/>let mut _102: &amp;ReErased LendingError;<br align="left"/>let mut _103: &amp;ReErased LendingError;<br align="left"/>let mut _104: &amp;ReErased LendingError;<br align="left"/>let mut _105: &amp;ReErased LendingError;<br align="left"/>let mut _106: &amp;ReErased LendingError;<br align="left"/>let mut _107: &amp;ReErased LendingError;<br align="left"/>let mut _108: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let mut _109: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug mode =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug obligation =&gt; _13;<br align="left"/>debug farm =&gt; _61;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>>;
    bb0__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_109 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_7 = &amp;((*_109).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load(move _7)</td></tr></table>>];
    bb1__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;Ref&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::Ref&lt;'_, state::reserve::Reserve&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_3 = &amp;_4<br/>_113 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_110 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_15 = &amp;((*_110).2: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _15)</td></tr></table>>];
    bb4__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_119 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = &amp;(_14.0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_3)<br/></td></tr><tr><td align="left">_21 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _22)</td></tr></table>>];
    bb8__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_20 = &amp;((*_21).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_19 = reserve::ReserveConfig::status(move _20)</td></tr></table>>];
    bb9__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_18 = &amp;_19<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_108 = const _<br/>_23 = &amp;(*_108)<br/></td></tr><tr><td align="left">_17 = &lt;reserve::ReserveStatus as PartialEq&gt;::ne(move _18, move _23)</td></tr></table>>];
    bb10__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb11__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;(*_3)<br/></td></tr><tr><td align="left">_43 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb12__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_107 = const _<br/>_29 = &amp;(*_107)<br/></td></tr><tr><td align="left">_28 = LendingError::name(move _29)</td></tr></table>>];
    bb13__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = LendingError::ReserveObsolete<br/></td></tr><tr><td align="left">_31 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _32)</td></tr></table>>];
    bb14__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_106 = const _<br/>_34 = &amp;(*_106)<br/></td></tr><tr><td align="left">_33 = &lt;LendingError as ToString&gt;::to_string(move _34)</td></tr></table>>];
    bb15__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_init_obligation_farms_for_reserve.rs&quot;, line: const 15_u32 }<br/>_37 = anchor_lang::error::ErrorOrigin::Source(move _38)<br/>StorageDead(_38)<br/>_36 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _37)<br/>StorageDead(_37)<br/>StorageLive(_39)<br/>_39 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_27 = anchor_lang::error::AnchorError { error_name: move _28, error_code_number: move _31, error_msg: move _33, error_origin: move _36, compared_values: move _39 }<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _27)</td></tr></table>>];
    bb16__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _26)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).0: u64)<br/>StorageLive(_45)<br/>_45 = const _ as u64 (IntToInt)<br/>_41 = Eq(move _42, move _45)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_43)<br/>_40 = const ()<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_3)<br/></td></tr><tr><td align="left">_63 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb19__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_43)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_105 = const _<br/>_50 = &amp;(*_105)<br/></td></tr><tr><td align="left">_49 = LendingError::name(move _50)</td></tr></table>>];
    bb20__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = LendingError::ReserveDeprecated<br/></td></tr><tr><td align="left">_52 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _53)</td></tr></table>>];
    bb21__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_104 = const _<br/>_55 = &amp;(*_104)<br/></td></tr><tr><td align="left">_54 = &lt;LendingError as ToString&gt;::to_string(move _55)</td></tr></table>>];
    bb22__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_init_obligation_farms_for_reserve.rs&quot;, line: const 20_u32 }<br/>_58 = anchor_lang::error::ErrorOrigin::Source(move _59)<br/>StorageDead(_59)<br/>_57 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _58)<br/>StorageDead(_58)<br/>StorageLive(_60)<br/>_60 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_48 = anchor_lang::error::AnchorError { error_name: move _49, error_code_number: move _52, error_msg: move _54, error_origin: move _57, compared_values: move _60 }<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _48)</td></tr></table>>];
    bb23__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _47)<br/>StorageDead(_47)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_62 = &amp;(*_63)<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _2<br/></td></tr><tr><td align="left">_66 = &lt;u8 as TryInto&lt;reserve::ReserveFarmKind&gt;&gt;::try_into(move _67)</td></tr></table>>];
    bb25__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = std::result::Result::&lt;reserve::ReserveFarmKind, TryFromPrimitiveError&lt;reserve::ReserveFarmKind&gt;&gt;::unwrap(move _66)</td></tr></table>>];
    bb26__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_61 = reserve::Reserve::get_farm(move _62, move _65)</td></tr></table>>];
    bb27__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_63)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_61<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_111 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_73 = &amp;((*_111).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_72 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _73)</td></tr></table>>];
    bb28__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_71 = &amp;_72<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_69 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _70, move _71)</td></tr></table>>];
    bb29__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb30__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_72)<br/>_68 = const ()<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_1<br/>_92 = &amp;(*_93)<br/>StorageLive(_94)<br/>_112 = deref_copy (*_13)<br/>_94 = &amp;(*_112)<br/>StorageLive(_95)<br/>_95 = _61<br/></td></tr><tr><td align="left">_91 = cpi_initialize_farmer_delegated(move _92, move _94, move _95)</td></tr></table>>];
    bb31__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_103 = const _<br/>_78 = &amp;(*_103)<br/></td></tr><tr><td align="left">_77 = LendingError::name(move _78)</td></tr></table>>];
    bb32__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_80 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _81)</td></tr></table>>];
    bb33__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_102 = const _<br/>_83 = &amp;(*_102)<br/></td></tr><tr><td align="left">_82 = &lt;LendingError as ToString&gt;::to_string(move _83)</td></tr></table>>];
    bb34__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_init_obligation_farms_for_reserve.rs&quot;, line: const 26_u32 }<br/>_86 = anchor_lang::error::ErrorOrigin::Source(move _87)<br/>StorageDead(_87)<br/>_85 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _86)<br/>StorageDead(_86)<br/>StorageLive(_88)<br/>_88 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_76 = anchor_lang::error::AnchorError { error_name: move _77, error_code_number: move _80, error_msg: move _82, error_origin: move _85, compared_values: move _88 }<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _76)</td></tr></table>>];
    bb35__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _75)<br/>StorageDead(_75)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb37__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_96 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb38__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_90 as Continue).0: ())<br/>_89 = _100<br/>StorageDead(_100)<br/>_115 = discriminant(_90)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_101)<br/>_101 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _101)<br/>StorageDead(_101)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb39__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = move ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_99)<br/>_99 = move _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb40__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>_117 = discriminant(_90)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb42__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb45__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb46__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">return</td></tr></table>>];
    bb48__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb49__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb50__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb51__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb52__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb53__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb54__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left" balign="left">_121 = discriminant(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left" balign="left">_122 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_304 -> bb1__0_304 [label="return"];
    bb1__0_304 -> bb2__0_304 [label="return"];
    bb1__0_304 -> bb53__0_304 [label="unwind"];
    bb2__0_304 -> bb3__0_304 [label="0"];
    bb2__0_304 -> bb5__0_304 [label="1"];
    bb2__0_304 -> bb4__0_304 [label="otherwise"];
    bb3__0_304 -> bb7__0_304 [label="return"];
    bb3__0_304 -> bb52__0_304 [label="unwind"];
    bb5__0_304 -> bb6__0_304 [label="return"];
    bb5__0_304 -> bb55__0_304 [label="unwind"];
    bb6__0_304 -> bb46__0_304 [label=""];
    bb7__0_304 -> bb8__0_304 [label="return"];
    bb7__0_304 -> bb51__0_304 [label="unwind"];
    bb8__0_304 -> bb9__0_304 [label="return"];
    bb8__0_304 -> bb51__0_304 [label="unwind"];
    bb9__0_304 -> bb10__0_304 [label="return"];
    bb9__0_304 -> bb51__0_304 [label="unwind"];
    bb10__0_304 -> bb12__0_304 [label="0"];
    bb10__0_304 -> bb11__0_304 [label="otherwise"];
    bb11__0_304 -> bb17__0_304 [label="return"];
    bb11__0_304 -> bb51__0_304 [label="unwind"];
    bb12__0_304 -> bb13__0_304 [label="return"];
    bb12__0_304 -> bb51__0_304 [label="unwind"];
    bb13__0_304 -> bb14__0_304 [label="return"];
    bb13__0_304 -> bb50__0_304 [label="unwind"];
    bb14__0_304 -> bb15__0_304 [label="return"];
    bb14__0_304 -> bb50__0_304 [label="unwind"];
    bb15__0_304 -> bb16__0_304 [label="return"];
    bb15__0_304 -> bb51__0_304 [label="unwind"];
    bb16__0_304 -> bb44__0_304 [label=""];
    bb17__0_304 -> bb19__0_304 [label="0"];
    bb17__0_304 -> bb18__0_304 [label="otherwise"];
    bb18__0_304 -> bb24__0_304 [label="return"];
    bb18__0_304 -> bb51__0_304 [label="unwind"];
    bb19__0_304 -> bb20__0_304 [label="return"];
    bb19__0_304 -> bb51__0_304 [label="unwind"];
    bb20__0_304 -> bb21__0_304 [label="return"];
    bb20__0_304 -> bb49__0_304 [label="unwind"];
    bb21__0_304 -> bb22__0_304 [label="return"];
    bb21__0_304 -> bb49__0_304 [label="unwind"];
    bb22__0_304 -> bb23__0_304 [label="return"];
    bb22__0_304 -> bb51__0_304 [label="unwind"];
    bb23__0_304 -> bb44__0_304 [label=""];
    bb24__0_304 -> bb25__0_304 [label="return"];
    bb24__0_304 -> bb51__0_304 [label="unwind"];
    bb25__0_304 -> bb26__0_304 [label="return"];
    bb25__0_304 -> bb51__0_304 [label="unwind"];
    bb26__0_304 -> bb27__0_304 [label="return"];
    bb26__0_304 -> bb51__0_304 [label="unwind"];
    bb27__0_304 -> bb28__0_304 [label="return"];
    bb27__0_304 -> bb51__0_304 [label="unwind"];
    bb28__0_304 -> bb29__0_304 [label="return"];
    bb28__0_304 -> bb51__0_304 [label="unwind"];
    bb29__0_304 -> bb31__0_304 [label="0"];
    bb29__0_304 -> bb30__0_304 [label="otherwise"];
    bb30__0_304 -> bb36__0_304 [label="return"];
    bb30__0_304 -> bb51__0_304 [label="unwind"];
    bb31__0_304 -> bb32__0_304 [label="return"];
    bb31__0_304 -> bb51__0_304 [label="unwind"];
    bb32__0_304 -> bb33__0_304 [label="return"];
    bb32__0_304 -> bb48__0_304 [label="unwind"];
    bb33__0_304 -> bb34__0_304 [label="return"];
    bb33__0_304 -> bb48__0_304 [label="unwind"];
    bb34__0_304 -> bb35__0_304 [label="return"];
    bb34__0_304 -> bb51__0_304 [label="unwind"];
    bb35__0_304 -> bb43__0_304 [label=""];
    bb36__0_304 -> bb37__0_304 [label="return"];
    bb36__0_304 -> bb51__0_304 [label="unwind"];
    bb37__0_304 -> bb38__0_304 [label="0"];
    bb37__0_304 -> bb39__0_304 [label="1"];
    bb37__0_304 -> bb4__0_304 [label="otherwise"];
    bb38__0_304 -> bb41__0_304 [label="return"];
    bb38__0_304 -> bb52__0_304 [label="unwind"];
    bb39__0_304 -> bb40__0_304 [label="return"];
    bb39__0_304 -> bb54__0_304 [label="unwind"];
    bb40__0_304 -> bb43__0_304 [label=""];
    bb41__0_304 -> bb42__0_304 [label="return"];
    bb41__0_304 -> bb53__0_304 [label="unwind"];
    bb42__0_304 -> bb47__0_304 [label=""];
    bb43__0_304 -> bb44__0_304 [label=""];
    bb44__0_304 -> bb45__0_304 [label="return"];
    bb44__0_304 -> bb52__0_304 [label="unwind"];
    bb45__0_304 -> bb46__0_304 [label="return"];
    bb45__0_304 -> bb53__0_304 [label="unwind"];
    bb46__0_304 -> bb47__0_304 [label=""];
    bb48__0_304 -> bb51__0_304 [label="return"];
    bb49__0_304 -> bb51__0_304 [label="return"];
    bb50__0_304 -> bb51__0_304 [label="return"];
    bb51__0_304 -> bb52__0_304 [label="return"];
    bb52__0_304 -> bb53__0_304 [label="return"];
    bb54__0_304 -> bb51__0_304 [label=""];
    bb55__0_304 -> bb53__0_304 [label=""];
}
