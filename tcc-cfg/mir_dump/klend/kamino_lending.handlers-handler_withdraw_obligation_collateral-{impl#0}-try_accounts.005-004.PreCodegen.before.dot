digraph Mir_0_6014 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'info&gt; as anchor_lang::Accounts&lt;'info, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:6015 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _21: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:6016 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _36: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: Closure(DefId(0:6017 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _51: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let mut _58: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _59: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _60: Closure(DefId(0:6018 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _65: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _66: anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [u8];<br align="left"/>let mut _73: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _74: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _75: Closure(DefId(0:6019 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _81: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _83: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _86: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _87: &amp;ReErased [u8];<br align="left"/>let mut _88: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _89: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _90: Closure(DefId(0:6020 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _95: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _96: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _98: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _101: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _102: &amp;ReErased [u8];<br align="left"/>let mut _103: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _104: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _105: Closure(DefId(0:6021 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _110: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _111: anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;&gt;;<br align="left"/>let mut _113: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _116: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _117: &amp;ReErased [u8];<br align="left"/>let mut _118: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _119: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _120: Closure(DefId(0:6022 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _125: anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let _126: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _128: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _131: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _132: &amp;ReErased [u8];<br align="left"/>let mut _133: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateralBumps;<br align="left"/>let mut _134: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _135: Closure(DefId(0:6023 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#8}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _140: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _141: ();<br align="left"/>let mut _142: bool;<br align="left"/>let mut _143: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _145: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _146: !;<br align="left"/>let mut _147: anchor_lang::error::Error;<br align="left"/>let mut _148: anchor_lang::error::Error;<br align="left"/>let mut _149: anchor_lang::error::ErrorCode;<br align="left"/>let _150: ();<br align="left"/>let _151: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _152: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _153: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _154: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _156: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _157: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _162: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _163: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _164: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _165: bool;<br align="left"/>let mut _166: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _167: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: anchor_lang::error::Error;<br align="left"/>let mut _170: anchor_lang::error::Error;<br align="left"/>let mut _171: anchor_lang::error::Error;<br align="left"/>let mut _172: anchor_lang::error::ErrorCode;<br align="left"/>let mut _173: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _174: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _175: anchor_lang::prelude::Pubkey;<br align="left"/>let _176: ();<br align="left"/>let _177: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _178: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _179: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _180: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _182: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _183: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _184: isize;<br align="left"/>let _185: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _186: !;<br align="left"/>let mut _187: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _188: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _191: bool;<br align="left"/>let mut _192: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _193: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: anchor_lang::error::Error;<br align="left"/>let mut _196: anchor_lang::error::Error;<br align="left"/>let mut _197: anchor_lang::error::Error;<br align="left"/>let mut _198: anchor_lang::error::ErrorCode;<br align="left"/>let mut _199: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _200: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _201: anchor_lang::prelude::Pubkey;<br align="left"/>let _202: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _204: std::result::Result&lt;anchor_lang::prelude::Pubkey, anchor_lang::error::Error&gt;;<br align="left"/>let mut _205: std::result::Result&lt;anchor_lang::prelude::Pubkey, solana_program::pubkey::PubkeyError&gt;;<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _207: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _208: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _209: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _210: &amp;ReErased [u8];<br align="left"/>let _211: &amp;ReErased [u8];<br align="left"/>let mut _212: &amp;ReErased [u8];<br align="left"/>let _213: &amp;ReErased [u8];<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _216: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _217: &amp;ReErased [u8];<br align="left"/>let _218: &amp;ReErased [u8];<br align="left"/>let _219: &amp;ReErased [u8];<br align="left"/>let mut _220: &amp;ReErased [u8; 1_usize];<br align="left"/>let _221: [u8; 1_usize];<br align="left"/>let mut _222: u8;<br align="left"/>let mut _223: u64;<br align="left"/>let mut _224: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _225: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _226: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _227: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _228: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _234: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _235: std::ops::RangeFull;<br align="left"/>let mut _236: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _237: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _238: Closure(DefId(0:6024 ~ kamino_lending[6389]::handlers::handler_withdraw_obligation_collateral::{impl#0}::try_accounts::{closure#9}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((solana_program::pubkey::PubkeyError,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _243: anchor_lang::prelude::Pubkey;<br align="left"/>let _244: ();<br align="left"/>let mut _245: bool;<br align="left"/>let mut _246: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _247: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _248: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _249: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: anchor_lang::error::Error;<br align="left"/>let mut _252: anchor_lang::error::Error;<br align="left"/>let mut _253: anchor_lang::error::Error;<br align="left"/>let mut _254: anchor_lang::error::ErrorCode;<br align="left"/>let mut _255: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _256: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _257: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _258: anchor_lang::prelude::Pubkey;<br align="left"/>let _259: ();<br align="left"/>let mut _260: bool;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _262: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _263: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: anchor_lang::error::Error;<br align="left"/>let mut _266: anchor_lang::error::Error;<br align="left"/>let mut _267: anchor_lang::error::ErrorCode;<br align="left"/>let _268: ();<br align="left"/>let _269: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _270: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _271: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _272: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _274: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _275: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _276: isize;<br align="left"/>let _277: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _278: !;<br align="left"/>let mut _279: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _280: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _281: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _282: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _283: bool;<br align="left"/>let mut _284: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _285: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _286: !;<br align="left"/>let mut _287: anchor_lang::error::Error;<br align="left"/>let mut _288: anchor_lang::error::Error;<br align="left"/>let mut _289: anchor_lang::error::Error;<br align="left"/>let mut _290: anchor_lang::error::ErrorCode;<br align="left"/>let mut _291: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _292: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _293: anchor_lang::prelude::Pubkey;<br align="left"/>let _294: ();<br align="left"/>let mut _295: bool;<br align="left"/>let mut _296: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _297: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _298: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _299: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: anchor_lang::error::Error;<br align="left"/>let mut _302: anchor_lang::error::Error;<br align="left"/>let mut _303: anchor_lang::error::ErrorCode;<br align="left"/>let _304: ();<br align="left"/>let _305: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _306: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _307: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _308: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _309: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _310: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _311: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _312: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _313: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _314: isize;<br align="left"/>let _315: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _316: !;<br align="left"/>let mut _317: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _318: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _319: bool;<br align="left"/>let mut _320: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _321: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _322: !;<br align="left"/>let mut _323: anchor_lang::error::Error;<br align="left"/>let mut _324: anchor_lang::error::Error;<br align="left"/>let mut _325: anchor_lang::error::Error;<br align="left"/>let mut _326: anchor_lang::error::ErrorCode;<br align="left"/>let mut _327: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _328: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _329: anchor_lang::prelude::Pubkey;<br align="left"/>let _330: ();<br align="left"/>let mut _331: bool;<br align="left"/>let mut _332: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _333: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _334: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _335: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _336: !;<br align="left"/>let mut _337: anchor_lang::error::Error;<br align="left"/>let mut _338: anchor_lang::error::Error;<br align="left"/>let mut _339: anchor_lang::error::ErrorCode;<br align="left"/>let _340: ();<br align="left"/>let _341: ();<br align="left"/>let mut _342: bool;<br align="left"/>let mut _343: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _344: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _345: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _346: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _347: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _348: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _349: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _350: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _351: !;<br align="left"/>let mut _352: anchor_lang::error::Error;<br align="left"/>let mut _353: anchor_lang::error::ErrorCode;<br align="left"/>let mut _354: bool;<br align="left"/>let mut _355: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _356: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _357: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _358: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _359: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _360: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _361: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _362: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _363: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _364: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _365: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _366: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _367: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _368: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _369: isize;<br align="left"/>let _370: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _371: !;<br align="left"/>let mut _372: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _373: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _374: !;<br align="left"/>let mut _375: anchor_lang::error::Error;<br align="left"/>let mut _376: anchor_lang::error::ErrorCode;<br align="left"/>let _377: ();<br align="left"/>let _378: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _379: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _380: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _381: bool;<br align="left"/>let mut _382: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _383: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _384: !;<br align="left"/>let mut _385: anchor_lang::error::Error;<br align="left"/>let mut _386: anchor_lang::error::Error;<br align="left"/>let mut _387: anchor_lang::error::Error;<br align="left"/>let mut _388: anchor_lang::error::ErrorCode;<br align="left"/>let mut _389: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _390: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _391: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _392: handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;ReErased&gt;;<br align="left"/>let mut _393: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _394: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _395: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _396: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _397: anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _398: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _399: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _400: anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let mut _401: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _402: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _403: bool;<br align="left"/>let mut _404: bool;<br align="left"/>let mut _405: bool;<br align="left"/>let mut _406: bool;<br align="left"/>let mut _407: bool;<br align="left"/>let mut _408: bool;<br align="left"/>let mut _409: bool;<br align="left"/>let mut _410: bool;<br align="left"/>let mut _411: bool;<br align="left"/>let mut _412: bool;<br align="left"/>let mut _413: bool;<br align="left"/>let mut _414: bool;<br align="left"/>let mut _415: bool;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: isize;<br align="left"/>let mut _421: isize;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>let mut _429: isize;<br align="left"/>let mut _430: isize;<br align="left"/>let mut _431: isize;<br align="left"/>let mut _432: isize;<br align="left"/>let mut _433: isize;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>let mut _454: isize;<br align="left"/>let mut _455: isize;<br align="left"/>let mut _456: isize;<br align="left"/>let mut _457: isize;<br align="left"/>let mut _458: isize;<br align="left"/>let mut _459: isize;<br align="left"/>let mut _460: isize;<br align="left"/>let mut _461: isize;<br align="left"/>let mut _462: isize;<br align="left"/>let mut _463: isize;<br align="left"/>let mut _464: isize;<br align="left"/>let mut _465: isize;<br align="left"/>let mut _466: isize;<br align="left"/>let mut _467: isize;<br align="left"/>let mut _468: isize;<br align="left"/>let mut _469: isize;<br align="left"/>let mut _470: isize;<br align="left"/>let mut _471: isize;<br align="left"/>let mut _472: isize;<br align="left"/>let mut _473: isize;<br align="left"/>let mut _474: isize;<br align="left"/>let mut _475: isize;<br align="left"/>let mut _476: isize;<br align="left"/>let mut _477: isize;<br align="left"/>let mut _478: isize;<br align="left"/>let mut _479: isize;<br align="left"/>let mut _480: isize;<br align="left"/>let mut _481: isize;<br align="left"/>let mut _482: isize;<br align="left"/>let mut _483: isize;<br align="left"/>let mut _484: isize;<br align="left"/>let mut _485: isize;<br align="left"/>let mut _486: isize;<br align="left"/>let mut _487: isize;<br align="left"/>let mut _488: isize;<br align="left"/>let mut _489: isize;<br align="left"/>let mut _490: isize;<br align="left"/>let mut _491: isize;<br align="left"/>let mut _492: isize;<br align="left"/>let mut _493: isize;<br align="left"/>let mut _494: isize;<br align="left"/>let mut _495: isize;<br align="left"/>let mut _496: isize;<br align="left"/>let mut _497: isize;<br align="left"/>let mut _498: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _499: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _500: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug owner =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug obligation =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug lending_market =&gt; _36;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug lending_market_authority =&gt; _51;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug withdraw_reserve =&gt; _66;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug reserve_source_collateral =&gt; _81;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug user_destination_collateral =&gt; _96;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug token_program =&gt; _111;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug instruction_sysvar_account =&gt; _126;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug my_key =&gt; _151;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug target_key =&gt; _163;<br align="left"/>debug my_key =&gt; _177;<br align="left"/>debug residual =&gt; _185;<br align="left"/>debug val =&gt; _188;<br align="left"/>debug target_key =&gt; _189;<br align="left"/>debug __pda_address =&gt; _202;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug my_key =&gt; _269;<br align="left"/>debug residual =&gt; _277;<br align="left"/>debug val =&gt; _280;<br align="left"/>debug target_key =&gt; _281;<br align="left"/>debug actual =&gt; _305;<br align="left"/>debug expected =&gt; _307;<br align="left"/>debug residual =&gt; _315;<br align="left"/>debug val =&gt; _318;<br align="left"/>debug residual =&gt; _370;<br align="left"/>debug val =&gt; _373;<br align="left"/>debug actual =&gt; _378;<br align="left"/>debug expected =&gt; _380;<br align="left"/>>;
    bb0__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_411 = const false<br/>_415 = const false<br/>_414 = const false<br/>_413 = const false<br/>_412 = const false<br/>_404 = const false<br/>_403 = const false<br/>_410 = const false<br/>_409 = const false<br/>_408 = const false<br/>_407 = const false<br/>_406 = const false<br/>_405 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_416 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_480 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_418 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_3)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_4)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _40, move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb12__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_478 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_45)<br/>_45 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _39, move _45)</td></tr></table>>];
    bb15__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb16__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_46 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_37 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_36 = move _50<br/>StorageDead(_50)<br/>_420 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_2)<br/>StorageLive(_57)<br/>_57 = &amp;(*_3)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_4)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_54 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _55, move _56, move _57, move _58, move _59)</td></tr></table>>];
    bb18__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_476 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_60)<br/>_60 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _54, move _60)</td></tr></table>>];
    bb21__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_61 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_52 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_51 = move _65<br/>StorageDead(_65)<br/>_422 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_1)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_2)<br/>StorageLive(_72)<br/>_72 = &amp;(*_3)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_4)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_69 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _70, move _71, move _72, move _73, move _74)</td></tr></table>>];
    bb24__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_474 = discriminant(_52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_75)<br/>_75 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _69, move _75)</td></tr></table>>];
    bb27__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb28__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_76 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb29__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_67 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_66 = move _80<br/>StorageDead(_80)<br/>_424 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_1)<br/>StorageLive(_86)<br/>_86 = &amp;mut (*_2)<br/>StorageLive(_87)<br/>_87 = &amp;(*_3)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_4)<br/>StorageLive(_89)<br/>_89 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_84 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _85, move _86, move _87, move _88, move _89)</td></tr></table>>];
    bb30__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb31__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_472 = discriminant(_67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_90)<br/>_90 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _84, move _90)</td></tr></table>>];
    bb33__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb34__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_91 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb35__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_82 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_81 = move _95<br/>StorageDead(_95)<br/>_426 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;(*_1)<br/>StorageLive(_101)<br/>_101 = &amp;mut (*_2)<br/>StorageLive(_102)<br/>_102 = &amp;(*_3)<br/>StorageLive(_103)<br/>_103 = &amp;mut (*_4)<br/>StorageLive(_104)<br/>_104 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_99 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _100, move _101, move _102, move _103, move _104)</td></tr></table>>];
    bb36__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_94)<br/>_94 = move _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb37__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>_470 = discriminant(_82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_105)<br/>_105 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_98 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _99, move _105)</td></tr></table>>];
    bb39__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb40__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_106 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb41__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = move ((_97 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_96 = move _110<br/>StorageDead(_110)<br/>_428 = discriminant(_97)<br/>StorageDead(_97)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;(*_1)<br/>StorageLive(_116)<br/>_116 = &amp;mut (*_2)<br/>StorageLive(_117)<br/>_117 = &amp;(*_3)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_4)<br/>StorageLive(_119)<br/>_119 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::Program&lt;'_, Token&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _115, move _116, move _117, move _118, move _119)</td></tr></table>>];
    bb42__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_109)<br/>_109 = move _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb43__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>_468 = discriminant(_97)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_120)<br/>_120 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_113 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, Token&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _114, move _120)</td></tr></table>>];
    bb45__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, Token&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb46__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_121 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb47__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_112 as Continue).0: anchor_lang::prelude::Program&lt;'_, anchor_spl::token::Token&gt;)<br/>_111 = move _125<br/>StorageDead(_125)<br/>_430 = discriminant(_112)<br/>StorageDead(_112)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_1)<br/>StorageLive(_131)<br/>_131 = &amp;mut (*_2)<br/>StorageLive(_132)<br/>_132 = &amp;(*_3)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_4)<br/>StorageLive(_134)<br/>_134 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, WithdrawObligationCollateralBumps&gt;&gt;::try_accounts(move _130, move _131, move _132, move _133, move _134)</td></tr></table>>];
    bb48__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = move ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_124)<br/>_124 = move _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb49__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_466 = discriminant(_112)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_135)<br/>_135 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_128 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _129, move _135)</td></tr></table>>];
    bb51__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb52__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_136 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb53__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = move ((_127 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_126 = move _140<br/>StorageDead(_140)<br/>_432 = discriminant(_127)<br/>StorageDead(_127)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;_21<br/>_144 = &amp;(*_145)<br/></td></tr><tr><td align="left">_143 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _144)</td></tr></table>>];
    bb54__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = move ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_139)<br/>_139 = move _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb55__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>_464 = discriminant(_127)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_142 = ((*_143).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _142)</td></tr></table>>];
    bb57__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_143)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = ConstraintMut<br/></td></tr><tr><td align="left">_148 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _149)</td></tr></table>>];
    bb58__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _148, const &quot;obligation&quot;)</td></tr></table>>];
    bb59__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _147)<br/>StorageDead(_147)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_143)<br/>_141 = const ()<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;_21<br/></td></tr><tr><td align="left">_156 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _157)</td></tr></table>>];
    bb61__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb62__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_414 = const true<br/>_415 = const true<br/>StorageDead(_156)<br/>_158 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb63__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = move ((_155 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_154 = move _162<br/>StorageDead(_162)<br/>_153 = &amp;_154<br/></td></tr><tr><td align="left">_152 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb64__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = move ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_161)<br/>_161 = move _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb65__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_153)<br/>_462 = discriminant(_155)<br/>_414 = const false<br/>_415 = const false<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = ((*_152).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb67__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;_151<br/>StorageLive(_167)<br/>_167 = &amp;_163<br/></td></tr><tr><td align="left">_165 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _166, move _167)</td></tr></table>>];
    bb68__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb69__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_166)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = ConstraintHasOne<br/></td></tr><tr><td align="left">_171 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _172)</td></tr></table>>];
    bb70__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _171, const &quot;obligation&quot;)</td></tr></table>>];
    bb71__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = _151<br/>StorageLive(_175)<br/>_175 = _163<br/>_173 = (move _174, move _175)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_169 = anchor_lang::error::Error::with_pubkeys(move _170, move _173)</td></tr></table>>];
    bb72__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_170)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _169)<br/>StorageDead(_169)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_166)<br/>_150 = const ()<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;_21<br/></td></tr><tr><td align="left">_182 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _183)</td></tr></table>>];
    bb74__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb75__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_412 = const true<br/>_413 = const true<br/>StorageDead(_182)<br/>_184 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _184)</td></tr></table>>];
    bb76__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = move ((_181 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_180 = move _188<br/>StorageDead(_188)<br/>_179 = &amp;_180<br/></td></tr><tr><td align="left">_178 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _179)</td></tr></table>>];
    bb77__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = move ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_187)<br/>_187 = move _185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _187)</td></tr></table>>];
    bb78__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_179)<br/>_460 = discriminant(_181)<br/>_412 = const false<br/>_413 = const false<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>_177 = ((*_178).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_180)</td></tr></table>>];
    bb80__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;_177<br/>StorageLive(_193)<br/>_193 = &amp;_189<br/></td></tr><tr><td align="left">_191 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _192, move _193)</td></tr></table>>];
    bb81__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left">switchInt(move _191)</td></tr></table>>];
    bb82__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = ConstraintHasOne<br/></td></tr><tr><td align="left">_197 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _198)</td></tr></table>>];
    bb83__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _197, const &quot;obligation&quot;)</td></tr></table>>];
    bb84__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = _177<br/>StorageLive(_201)<br/>_201 = _189<br/>_199 = (move _200, move _201)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_195 = anchor_lang::error::Error::with_pubkeys(move _196, move _199)</td></tr></table>>];
    bb85__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_196)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _195)<br/>StorageDead(_195)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>_176 = const ()<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = const _<br/>_210 = &amp;(*_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;_36<br/></td></tr><tr><td align="left">_215 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _216)</td></tr></table>>];
    bb87__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_214 = &amp;_215<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">_213 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _214)</td></tr></table>>];
    bb88__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_212 = &amp;(*_213)<br/>StorageDead(_214)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = &amp;_36<br/></td></tr><tr><td align="left">_228 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _229)</td></tr></table>>];
    bb89__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">_227 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _228)</td></tr></table>>];
    bb90__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_403 = const true<br/>_404 = const true<br/>StorageDead(_228)<br/>_230 = discriminant(_227)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb91__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = move ((_227 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_226 = move _234<br/>StorageDead(_234)<br/>_225 = &amp;_226<br/></td></tr><tr><td align="left">_224 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb92__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = move ((_227 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_233)<br/>_233 = move _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb93__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_225)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_223 = ((*_224).1: u64)<br/>_222 = move _223 as u8 (IntToInt)<br/>StorageDead(_223)<br/>_221 = [move _222]<br/>_220 = &amp;_221<br/>StorageDead(_222)<br/>StorageLive(_235)<br/>_235 = RangeFull<br/></td></tr><tr><td align="left">_219 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _220, move _235)</td></tr></table>>];
    bb95__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_220)<br/>_218 = &amp;(*_219)<br/>_217 = &amp;(*_218)<br/>_209 = [move _210, move _212, move _217]<br/>StorageDead(_217)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/>_206 = move _207 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;_1<br/>_402 = deref_copy (*_237)<br/>_236 = &amp;(*_402)<br/></td></tr><tr><td align="left">_205 = anchor_lang::prelude::Pubkey::create_program_address(move _206, move _236)</td></tr></table>>];
    bb96__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_206)<br/>StorageLive(_238)<br/>_238 = {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}<br/></td></tr><tr><td align="left">_204 = std::result::Result::&lt;anchor_lang::prelude::Pubkey, PubkeyError&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_withdraw_obligation_collateral.rs:99:10: 99:18}&gt;(move _205, move _238)</td></tr></table>>];
    bb97__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;anchor_lang::prelude::Pubkey, anchor_lang::error::Error&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb98__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_239 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb99__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_203 as Continue).0: anchor_lang::prelude::Pubkey)<br/>_202 = _243<br/>StorageDead(_243)<br/>_438 = discriminant(_203)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb100__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = move ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_242)<br/>_242 = move _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb101__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>_456 = discriminant(_203)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb102__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_246 = &amp;_247<br/>StorageDead(_248)<br/>StorageLive(_249)<br/>_249 = &amp;_202<br/></td></tr><tr><td align="left">_245 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _246, move _249)</td></tr></table>>];
    bb103__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb104__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_254 = ConstraintSeeds<br/></td></tr><tr><td align="left">_253 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _254)</td></tr></table>>];
    bb105__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/></td></tr><tr><td align="left">_252 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _253, const &quot;lending_market_authority&quot;)</td></tr></table>>];
    bb106__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_411 = const true<br/>StorageDead(_253)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;_51<br/></td></tr><tr><td align="left">_256 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _257)</td></tr></table>>];
    bb107__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageLive(_258)<br/>_258 = _202<br/>_255 = (move _256, move _258)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>_411 = const false<br/></td></tr><tr><td align="left">_251 = anchor_lang::error::Error::with_pubkeys(move _252, move _255)</td></tr></table>>];
    bb108__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_411 = const false<br/>StorageDead(_252)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _251)<br/>StorageDead(_251)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>_244 = const ()<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;_66<br/>_262 = &amp;(*_263)<br/></td></tr><tr><td align="left">_261 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _262)</td></tr></table>>];
    bb110__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_260 = ((*_261).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _260)</td></tr></table>>];
    bb111__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = ConstraintMut<br/></td></tr><tr><td align="left">_266 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _267)</td></tr></table>>];
    bb112__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/></td></tr><tr><td align="left">_265 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _266, const &quot;withdraw_reserve&quot;)</td></tr></table>>];
    bb113__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _265)<br/>StorageDead(_265)<br/>StorageDead(_260)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>_259 = const ()<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_66<br/></td></tr><tr><td align="left">_274 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load(move _275)</td></tr></table>>];
    bb115__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">_273 = &lt;std::result::Result&lt;Ref&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _274)</td></tr></table>>];
    bb116__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_409 = const true<br/>_410 = const true<br/>StorageDead(_274)<br/>_276 = discriminant(_273)<br/></td></tr><tr><td align="left">switchInt(move _276)</td></tr></table>>];
    bb117__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = move ((_273 as Continue).0: std::cell::Ref&lt;'_, state::reserve::Reserve&gt;)<br/>_272 = move _280<br/>StorageDead(_280)<br/>_271 = &amp;_272<br/></td></tr><tr><td align="left">_270 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _271)</td></tr></table>>];
    bb118__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>_277 = move ((_273 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_279)<br/>_279 = move _277<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _279)</td></tr></table>>];
    bb119__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_271)<br/>_454 = discriminant(_273)<br/>_409 = const false<br/>_410 = const false<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_269 = ((*_270).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_272)</td></tr></table>>];
    bb121__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;_269<br/>StorageLive(_285)<br/>_285 = &amp;_281<br/></td></tr><tr><td align="left">_283 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _284, move _285)</td></tr></table>>];
    bb122__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb123__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_284)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = ConstraintHasOne<br/></td></tr><tr><td align="left">_289 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _290)</td></tr></table>>];
    bb124__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _289, const &quot;withdraw_reserve&quot;)</td></tr></table>>];
    bb125__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = _269<br/>StorageLive(_293)<br/>_293 = _281<br/>_291 = (move _292, move _293)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">_287 = anchor_lang::error::Error::with_pubkeys(move _288, move _291)</td></tr></table>>];
    bb126__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_288)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _287)<br/>StorageDead(_287)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_284)<br/>_268 = const ()<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>_299 = &amp;_81<br/></td></tr><tr><td align="left">_298 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _299)</td></tr></table>>];
    bb128__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_297 = &amp;(*_298)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">_296 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _297)</td></tr></table>>];
    bb129__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>_295 = ((*_296).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb130__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = ConstraintMut<br/></td></tr><tr><td align="left">_302 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _303)</td></tr></table>>];
    bb131__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/></td></tr><tr><td align="left">_301 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _302, const &quot;reserve_source_collateral&quot;)</td></tr></table>>];
    bb132__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _301)<br/>StorageDead(_301)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>_294 = const ()<br/>StorageDead(_295)<br/>StorageDead(_294)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>_498 = (((_81.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_306 = &amp;(*_498)<br/></td></tr><tr><td align="left">_305 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _306)</td></tr></table>>];
    bb134__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = &amp;_66<br/></td></tr><tr><td align="left">_312 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load(move _313)</td></tr></table>>];
    bb135__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/></td></tr><tr><td align="left">_311 = &lt;std::result::Result&lt;Ref&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _312)</td></tr></table>>];
    bb136__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">_407 = const true<br/>_408 = const true<br/>StorageDead(_312)<br/>_314 = discriminant(_311)<br/></td></tr><tr><td align="left">switchInt(move _314)</td></tr></table>>];
    bb137__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_318)<br/>_318 = move ((_311 as Continue).0: std::cell::Ref&lt;'_, state::reserve::Reserve&gt;)<br/>_310 = move _318<br/>StorageDead(_318)<br/>_309 = &amp;_310<br/></td></tr><tr><td align="left">_308 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _309)</td></tr></table>>];
    bb138__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = move ((_311 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_317)<br/>_317 = move _315<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _317)</td></tr></table>>];
    bb139__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_315)<br/>StorageDead(_309)<br/>_452 = discriminant(_311)<br/>_407 = const false<br/>_408 = const false<br/>StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>_307 = (((*_308).7: state::reserve::ReserveCollateral).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_310)</td></tr></table>>];
    bb141__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb142__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_326 = ConstraintAddress<br/></td></tr><tr><td align="left">_325 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _326)</td></tr></table>>];
    bb143__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/></td></tr><tr><td align="left">_324 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _325, const &quot;reserve_source_collateral&quot;)</td></tr></table>>];
    bb144__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>_328 = _305<br/>StorageLive(_329)<br/>_329 = _307<br/>_327 = (move _328, move _329)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_323 = anchor_lang::error::Error::with_pubkeys(move _324, move _327)</td></tr></table>>];
    bb145__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_324)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _323)<br/>StorageDead(_323)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>_304 = const ()<br/>StorageDead(_319)<br/>StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = &amp;_96<br/></td></tr><tr><td align="left">_334 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _335)</td></tr></table>>];
    bb147__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_333 = &amp;(*_334)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_332 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _333)</td></tr></table>>];
    bb148__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_331 = ((*_332).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _331)</td></tr></table>>];
    bb149__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_332)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = ConstraintMut<br/></td></tr><tr><td align="left">_338 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _339)</td></tr></table>>];
    bb150__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/></td></tr><tr><td align="left">_337 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _338, const &quot;user_destination_collateral&quot;)</td></tr></table>>];
    bb151__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _337)<br/>StorageDead(_337)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_332)<br/>_330 = const ()<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>_499 = (((_96.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_347 = &amp;(*_499)<br/></td></tr><tr><td align="left">_346 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _347)</td></tr></table>>];
    bb153__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_345 = &amp;(*_346)<br/></td></tr><tr><td align="left">_344 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _345)</td></tr></table>>];
    bb154__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_345)<br/>_343 = &amp;((*_344).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>_350 = &amp;_6<br/></td></tr><tr><td align="left">_349 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _350)</td></tr></table>>];
    bb155__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">_348 = &amp;_349<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">_342 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _343, move _348)</td></tr></table>>];
    bb156__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left">switchInt(move _342)</td></tr></table>>];
    bb157__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = ConstraintTokenOwner<br/></td></tr><tr><td align="left">_352 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _353)</td></tr></table>>];
    bb158__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _352)<br/>StorageDead(_352)<br/>StorageDead(_342)<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>_341 = const ()<br/>StorageDead(_342)<br/>StorageDead(_341)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_500 = (((_96.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_359 = &amp;(*_500)<br/></td></tr><tr><td align="left">_358 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _359)</td></tr></table>>];
    bb160__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">_357 = &amp;(*_358)<br/></td></tr><tr><td align="left">_356 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _357)</td></tr></table>>];
    bb161__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_357)<br/>_355 = &amp;((*_356).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;_66<br/></td></tr><tr><td align="left">_367 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load(move _368)</td></tr></table>>];
    bb162__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = &lt;std::result::Result&lt;Ref&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _367)</td></tr></table>>];
    bb163__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">_405 = const true<br/>_406 = const true<br/>StorageDead(_367)<br/>_369 = discriminant(_366)<br/></td></tr><tr><td align="left">switchInt(move _369)</td></tr></table>>];
    bb164__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = move ((_366 as Continue).0: std::cell::Ref&lt;'_, state::reserve::Reserve&gt;)<br/>_365 = move _373<br/>StorageDead(_373)<br/>_364 = &amp;_365<br/></td></tr><tr><td align="left">_363 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _364)</td></tr></table>>];
    bb165__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>_370 = move ((_366 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_372)<br/>_372 = move _370<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _372)</td></tr></table>>];
    bb166__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>_450 = discriminant(_366)<br/>_405 = const false<br/>_406 = const false<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>_362 = &amp;(((*_363).7: state::reserve::ReserveCollateral).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_361 = &lt;anchor_lang::prelude::Pubkey as anchor_lang::Key&gt;::key(move _362)</td></tr></table>>];
    bb168__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">_360 = &amp;_361<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_354 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _355, move _360)</td></tr></table>>];
    bb169__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb170__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left">drop(_365)</td></tr></table>>];
    bb171__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _375)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left">drop(_365)</td></tr></table>>];
    bb173__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageLive(_380)<br/></td></tr><tr><td align="left">_380 = &lt;Instructions as SysvarId&gt;::id()</td></tr></table>>];
    bb174__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_381)<br/>StorageLive(_382)<br/>_382 = &amp;_378<br/>StorageLive(_383)<br/>_383 = &amp;_380<br/></td></tr><tr><td align="left">_381 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _382, move _383)</td></tr></table>>];
    bb175__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left">switchInt(move _381)</td></tr></table>>];
    bb176__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_382)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = ConstraintAddress<br/></td></tr><tr><td align="left">_387 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _388)</td></tr></table>>];
    bb177__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/></td></tr><tr><td align="left">_386 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _387, const &quot;instruction_sysvar_account&quot;)</td></tr></table>>];
    bb178__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_390 = _378<br/>StorageLive(_391)<br/>_391 = _380<br/>_389 = (move _390, move _391)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">_385 = anchor_lang::error::Error::with_pubkeys(move _386, move _389)</td></tr></table>>];
    bb179__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_386)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _385)<br/>StorageDead(_385)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_382)<br/>_377 = const ()<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = move _6<br/>StorageLive(_394)<br/>_394 = move _21<br/>StorageLive(_395)<br/>_395 = move _36<br/>StorageLive(_396)<br/>_396 = move _51<br/>StorageLive(_397)<br/>_397 = move _66<br/>StorageLive(_398)<br/>_398 = move _81<br/>StorageLive(_399)<br/>_399 = move _96<br/>StorageLive(_400)<br/>_400 = move _111<br/>StorageLive(_401)<br/>_401 = move _126<br/>_392 = handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral::&lt;'_&gt; { owner: move _393, obligation: move _394, lending_market: move _395, lending_market_authority: move _396, withdraw_reserve: move _397, reserve_source_collateral: move _398, user_destination_collateral: move _399, token_program: move _400, instruction_sysvar_account: move _401 }<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_397)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>_0 = std::result::Result::&lt;handlers::handler_withdraw_obligation_collateral::WithdrawObligationCollateral&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _392)<br/>StorageDead(_392)<br/>StorageDead(_202)<br/>StorageDead(_126)<br/>StorageDead(_111)<br/>StorageDead(_96)<br/>StorageDead(_81)<br/>StorageDead(_66)<br/>StorageDead(_51)<br/>StorageDead(_36)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left">drop(_126)</td></tr></table>>];
    bb189__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb191__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb192__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb194__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left">return</td></tr></table>>];
    bb199__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left">drop(_365)</td></tr></table>>];
    bb200__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left">drop(_310)</td></tr></table>>];
    bb201__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left">drop(_272)</td></tr></table>>];
    bb202__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb203__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left">drop(_180)</td></tr></table>>];
    bb204__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb205__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left">drop(_126)</td></tr></table>>];
    bb206__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb207__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">207 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb208__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb209__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb210__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">_434 = discriminant(_155)<br/>_414 = const false<br/>_415 = const false<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;_36<br/></td></tr><tr><td align="left">_163 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _164)</td></tr></table>>];
    bb211__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">_436 = discriminant(_181)<br/>_412 = const false<br/>_413 = const false<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;_6<br/></td></tr><tr><td align="left">_189 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _190)</td></tr></table>>];
    bb212__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">_440 = discriminant(_227)<br/>_403 = const false<br/>_404 = const false<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_203)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;_51<br/></td></tr><tr><td align="left">_247 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _248)</td></tr></table>>];
    bb213__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_442 = discriminant(_273)<br/>_409 = const false<br/>_410 = const false<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = &amp;_36<br/></td></tr><tr><td align="left">_281 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _282)</td></tr></table>>];
    bb214__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_444 = discriminant(_311)<br/>_407 = const false<br/>_408 = const false<br/>StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_308)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = &amp;_305<br/>StorageLive(_321)<br/>_321 = &amp;_307<br/></td></tr><tr><td align="left">_319 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _320, move _321)</td></tr></table>>];
    bb215__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">_446 = discriminant(_366)<br/>_405 = const false<br/>_406 = const false<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_376 = ConstraintTokenMint<br/></td></tr><tr><td align="left">_375 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _376)</td></tr></table>>];
    bb216__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">_448 = discriminant(_366)<br/>_405 = const false<br/>_406 = const false<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>_340 = const ()<br/>StorageDead(_354)<br/>StorageDead(_340)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>_379 = &amp;_126<br/></td></tr><tr><td align="left">_378 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _379)</td></tr></table>>];
    bb217__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">_458 = discriminant(_227)<br/>_403 = const false<br/>_404 = const false<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_482 = discriminant(_366)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">219 (cleanup)</td></tr><tr><td align="left" balign="left">_483 = discriminant(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">220 (cleanup)</td></tr><tr><td align="left" balign="left">_484 = discriminant(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">221 (cleanup)</td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb222__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">222 (cleanup)</td></tr><tr><td align="left">switchInt(_411)</td></tr></table>>];
    bb223__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">223 (cleanup)</td></tr><tr><td align="left" balign="left">_485 = discriminant(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">224 (cleanup)</td></tr><tr><td align="left" balign="left">_486 = discriminant(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">225 (cleanup)</td></tr><tr><td align="left" balign="left">_487 = discriminant(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">226 (cleanup)</td></tr><tr><td align="left" balign="left">_488 = discriminant(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">227 (cleanup)</td></tr><tr><td align="left" balign="left">_489 = discriminant(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">228 (cleanup)</td></tr><tr><td align="left" balign="left">_490 = discriminant(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">229 (cleanup)</td></tr><tr><td align="left" balign="left">_491 = discriminant(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">230 (cleanup)</td></tr><tr><td align="left" balign="left">_492 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">231 (cleanup)</td></tr><tr><td align="left" balign="left">_493 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">232 (cleanup)</td></tr><tr><td align="left" balign="left">_494 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">233 (cleanup)</td></tr><tr><td align="left" balign="left">_495 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">234 (cleanup)</td></tr><tr><td align="left" balign="left">_496 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_6014 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">235 (cleanup)</td></tr><tr><td align="left" balign="left">_497 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_6014 -> bb1__0_6014 [label="return"];
    bb1__0_6014 -> bb2__0_6014 [label="return"];
    bb1__0_6014 -> bb209__0_6014 [label="unwind"];
    bb2__0_6014 -> bb3__0_6014 [label="return"];
    bb2__0_6014 -> bb209__0_6014 [label="unwind"];
    bb3__0_6014 -> bb4__0_6014 [label="0"];
    bb3__0_6014 -> bb6__0_6014 [label="1"];
    bb3__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb4__0_6014 -> bb8__0_6014 [label="return"];
    bb6__0_6014 -> bb7__0_6014 [label="return"];
    bb6__0_6014 -> bb235__0_6014 [label="unwind"];
    bb7__0_6014 -> bb197__0_6014 [label=""];
    bb8__0_6014 -> bb9__0_6014 [label="return"];
    bb8__0_6014 -> bb209__0_6014 [label="unwind"];
    bb9__0_6014 -> bb10__0_6014 [label="return"];
    bb9__0_6014 -> bb209__0_6014 [label="unwind"];
    bb10__0_6014 -> bb11__0_6014 [label="0"];
    bb10__0_6014 -> bb12__0_6014 [label="1"];
    bb10__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb11__0_6014 -> bb14__0_6014 [label="return"];
    bb12__0_6014 -> bb13__0_6014 [label="return"];
    bb12__0_6014 -> bb234__0_6014 [label="unwind"];
    bb13__0_6014 -> bb196__0_6014 [label=""];
    bb14__0_6014 -> bb15__0_6014 [label="return"];
    bb14__0_6014 -> bb209__0_6014 [label="unwind"];
    bb15__0_6014 -> bb16__0_6014 [label="return"];
    bb15__0_6014 -> bb209__0_6014 [label="unwind"];
    bb16__0_6014 -> bb17__0_6014 [label="0"];
    bb16__0_6014 -> bb18__0_6014 [label="1"];
    bb16__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb17__0_6014 -> bb20__0_6014 [label="return"];
    bb18__0_6014 -> bb19__0_6014 [label="return"];
    bb18__0_6014 -> bb233__0_6014 [label="unwind"];
    bb19__0_6014 -> bb195__0_6014 [label=""];
    bb20__0_6014 -> bb21__0_6014 [label="return"];
    bb20__0_6014 -> bb209__0_6014 [label="unwind"];
    bb21__0_6014 -> bb22__0_6014 [label="return"];
    bb21__0_6014 -> bb209__0_6014 [label="unwind"];
    bb22__0_6014 -> bb23__0_6014 [label="0"];
    bb22__0_6014 -> bb24__0_6014 [label="1"];
    bb22__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb23__0_6014 -> bb26__0_6014 [label="return"];
    bb23__0_6014 -> bb208__0_6014 [label="unwind"];
    bb24__0_6014 -> bb25__0_6014 [label="return"];
    bb24__0_6014 -> bb232__0_6014 [label="unwind"];
    bb25__0_6014 -> bb194__0_6014 [label=""];
    bb26__0_6014 -> bb27__0_6014 [label="return"];
    bb26__0_6014 -> bb208__0_6014 [label="unwind"];
    bb27__0_6014 -> bb28__0_6014 [label="return"];
    bb27__0_6014 -> bb208__0_6014 [label="unwind"];
    bb28__0_6014 -> bb29__0_6014 [label="0"];
    bb28__0_6014 -> bb30__0_6014 [label="1"];
    bb28__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb29__0_6014 -> bb32__0_6014 [label="return"];
    bb29__0_6014 -> bb208__0_6014 [label="unwind"];
    bb30__0_6014 -> bb31__0_6014 [label="return"];
    bb30__0_6014 -> bb231__0_6014 [label="unwind"];
    bb31__0_6014 -> bb193__0_6014 [label=""];
    bb32__0_6014 -> bb33__0_6014 [label="return"];
    bb32__0_6014 -> bb208__0_6014 [label="unwind"];
    bb33__0_6014 -> bb34__0_6014 [label="return"];
    bb33__0_6014 -> bb208__0_6014 [label="unwind"];
    bb34__0_6014 -> bb35__0_6014 [label="0"];
    bb34__0_6014 -> bb36__0_6014 [label="1"];
    bb34__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb35__0_6014 -> bb38__0_6014 [label="return"];
    bb35__0_6014 -> bb207__0_6014 [label="unwind"];
    bb36__0_6014 -> bb37__0_6014 [label="return"];
    bb36__0_6014 -> bb230__0_6014 [label="unwind"];
    bb37__0_6014 -> bb192__0_6014 [label=""];
    bb38__0_6014 -> bb39__0_6014 [label="return"];
    bb38__0_6014 -> bb207__0_6014 [label="unwind"];
    bb39__0_6014 -> bb40__0_6014 [label="return"];
    bb39__0_6014 -> bb207__0_6014 [label="unwind"];
    bb40__0_6014 -> bb41__0_6014 [label="0"];
    bb40__0_6014 -> bb42__0_6014 [label="1"];
    bb40__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb41__0_6014 -> bb44__0_6014 [label="return"];
    bb41__0_6014 -> bb206__0_6014 [label="unwind"];
    bb42__0_6014 -> bb43__0_6014 [label="return"];
    bb42__0_6014 -> bb229__0_6014 [label="unwind"];
    bb43__0_6014 -> bb191__0_6014 [label=""];
    bb44__0_6014 -> bb45__0_6014 [label="return"];
    bb44__0_6014 -> bb206__0_6014 [label="unwind"];
    bb45__0_6014 -> bb46__0_6014 [label="return"];
    bb45__0_6014 -> bb206__0_6014 [label="unwind"];
    bb46__0_6014 -> bb47__0_6014 [label="0"];
    bb46__0_6014 -> bb48__0_6014 [label="1"];
    bb46__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb47__0_6014 -> bb50__0_6014 [label="return"];
    bb47__0_6014 -> bb206__0_6014 [label="unwind"];
    bb48__0_6014 -> bb49__0_6014 [label="return"];
    bb48__0_6014 -> bb228__0_6014 [label="unwind"];
    bb49__0_6014 -> bb190__0_6014 [label=""];
    bb50__0_6014 -> bb51__0_6014 [label="return"];
    bb50__0_6014 -> bb206__0_6014 [label="unwind"];
    bb51__0_6014 -> bb52__0_6014 [label="return"];
    bb51__0_6014 -> bb206__0_6014 [label="unwind"];
    bb52__0_6014 -> bb53__0_6014 [label="0"];
    bb52__0_6014 -> bb54__0_6014 [label="1"];
    bb52__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb53__0_6014 -> bb56__0_6014 [label="return"];
    bb53__0_6014 -> bb205__0_6014 [label="unwind"];
    bb54__0_6014 -> bb55__0_6014 [label="return"];
    bb54__0_6014 -> bb227__0_6014 [label="unwind"];
    bb55__0_6014 -> bb189__0_6014 [label=""];
    bb56__0_6014 -> bb57__0_6014 [label="0"];
    bb56__0_6014 -> bb60__0_6014 [label="otherwise"];
    bb57__0_6014 -> bb58__0_6014 [label="return"];
    bb57__0_6014 -> bb205__0_6014 [label="unwind"];
    bb58__0_6014 -> bb59__0_6014 [label="return"];
    bb58__0_6014 -> bb205__0_6014 [label="unwind"];
    bb59__0_6014 -> bb188__0_6014 [label=""];
    bb60__0_6014 -> bb61__0_6014 [label="return"];
    bb60__0_6014 -> bb205__0_6014 [label="unwind"];
    bb61__0_6014 -> bb62__0_6014 [label="return"];
    bb61__0_6014 -> bb205__0_6014 [label="unwind"];
    bb62__0_6014 -> bb63__0_6014 [label="0"];
    bb62__0_6014 -> bb64__0_6014 [label="1"];
    bb62__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb63__0_6014 -> bb66__0_6014 [label="return"];
    bb63__0_6014 -> bb204__0_6014 [label="unwind"];
    bb64__0_6014 -> bb65__0_6014 [label="return"];
    bb64__0_6014 -> bb226__0_6014 [label="unwind"];
    bb65__0_6014 -> bb187__0_6014 [label=""];
    bb66__0_6014 -> bb210__0_6014 [label="return"];
    bb66__0_6014 -> bb226__0_6014 [label="unwind"];
    bb67__0_6014 -> bb68__0_6014 [label="return"];
    bb67__0_6014 -> bb205__0_6014 [label="unwind"];
    bb68__0_6014 -> bb73__0_6014 [label="0"];
    bb68__0_6014 -> bb69__0_6014 [label="otherwise"];
    bb69__0_6014 -> bb70__0_6014 [label="return"];
    bb69__0_6014 -> bb205__0_6014 [label="unwind"];
    bb70__0_6014 -> bb71__0_6014 [label="return"];
    bb70__0_6014 -> bb205__0_6014 [label="unwind"];
    bb71__0_6014 -> bb72__0_6014 [label="return"];
    bb71__0_6014 -> bb205__0_6014 [label="unwind"];
    bb72__0_6014 -> bb187__0_6014 [label=""];
    bb73__0_6014 -> bb74__0_6014 [label="return"];
    bb73__0_6014 -> bb205__0_6014 [label="unwind"];
    bb74__0_6014 -> bb75__0_6014 [label="return"];
    bb74__0_6014 -> bb205__0_6014 [label="unwind"];
    bb75__0_6014 -> bb76__0_6014 [label="0"];
    bb75__0_6014 -> bb77__0_6014 [label="1"];
    bb75__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb76__0_6014 -> bb79__0_6014 [label="return"];
    bb76__0_6014 -> bb203__0_6014 [label="unwind"];
    bb77__0_6014 -> bb78__0_6014 [label="return"];
    bb77__0_6014 -> bb225__0_6014 [label="unwind"];
    bb78__0_6014 -> bb186__0_6014 [label=""];
    bb79__0_6014 -> bb211__0_6014 [label="return"];
    bb79__0_6014 -> bb225__0_6014 [label="unwind"];
    bb80__0_6014 -> bb81__0_6014 [label="return"];
    bb80__0_6014 -> bb205__0_6014 [label="unwind"];
    bb81__0_6014 -> bb86__0_6014 [label="0"];
    bb81__0_6014 -> bb82__0_6014 [label="otherwise"];
    bb82__0_6014 -> bb83__0_6014 [label="return"];
    bb82__0_6014 -> bb205__0_6014 [label="unwind"];
    bb83__0_6014 -> bb84__0_6014 [label="return"];
    bb83__0_6014 -> bb205__0_6014 [label="unwind"];
    bb84__0_6014 -> bb85__0_6014 [label="return"];
    bb84__0_6014 -> bb205__0_6014 [label="unwind"];
    bb85__0_6014 -> bb186__0_6014 [label=""];
    bb86__0_6014 -> bb87__0_6014 [label="return"];
    bb86__0_6014 -> bb205__0_6014 [label="unwind"];
    bb87__0_6014 -> bb88__0_6014 [label="return"];
    bb87__0_6014 -> bb205__0_6014 [label="unwind"];
    bb88__0_6014 -> bb89__0_6014 [label="return"];
    bb88__0_6014 -> bb205__0_6014 [label="unwind"];
    bb89__0_6014 -> bb90__0_6014 [label="return"];
    bb89__0_6014 -> bb205__0_6014 [label="unwind"];
    bb90__0_6014 -> bb91__0_6014 [label="0"];
    bb90__0_6014 -> bb92__0_6014 [label="1"];
    bb90__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb91__0_6014 -> bb94__0_6014 [label="return"];
    bb91__0_6014 -> bb202__0_6014 [label="unwind"];
    bb92__0_6014 -> bb93__0_6014 [label="return"];
    bb92__0_6014 -> bb224__0_6014 [label="unwind"];
    bb93__0_6014 -> bb217__0_6014 [label=""];
    bb94__0_6014 -> bb95__0_6014 [label="return"];
    bb94__0_6014 -> bb202__0_6014 [label="unwind"];
    bb95__0_6014 -> bb96__0_6014 [label="return"];
    bb95__0_6014 -> bb202__0_6014 [label="unwind"];
    bb96__0_6014 -> bb97__0_6014 [label="return"];
    bb96__0_6014 -> bb202__0_6014 [label="unwind"];
    bb97__0_6014 -> bb98__0_6014 [label="return"];
    bb97__0_6014 -> bb202__0_6014 [label="unwind"];
    bb98__0_6014 -> bb99__0_6014 [label="0"];
    bb98__0_6014 -> bb100__0_6014 [label="1"];
    bb98__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb99__0_6014 -> bb212__0_6014 [label="return"];
    bb99__0_6014 -> bb224__0_6014 [label="unwind"];
    bb100__0_6014 -> bb101__0_6014 [label="return"];
    bb100__0_6014 -> bb223__0_6014 [label="unwind"];
    bb101__0_6014 -> bb217__0_6014 [label="return"];
    bb101__0_6014 -> bb224__0_6014 [label="unwind"];
    bb102__0_6014 -> bb103__0_6014 [label="return"];
    bb102__0_6014 -> bb205__0_6014 [label="unwind"];
    bb103__0_6014 -> bb109__0_6014 [label="0"];
    bb103__0_6014 -> bb104__0_6014 [label="otherwise"];
    bb104__0_6014 -> bb105__0_6014 [label="return"];
    bb104__0_6014 -> bb205__0_6014 [label="unwind"];
    bb105__0_6014 -> bb106__0_6014 [label="return"];
    bb105__0_6014 -> bb205__0_6014 [label="unwind"];
    bb106__0_6014 -> bb107__0_6014 [label="return"];
    bb106__0_6014 -> bb222__0_6014 [label="unwind"];
    bb107__0_6014 -> bb108__0_6014 [label="return"];
    bb107__0_6014 -> bb222__0_6014 [label="unwind"];
    bb108__0_6014 -> bb185__0_6014 [label=""];
    bb109__0_6014 -> bb110__0_6014 [label="return"];
    bb109__0_6014 -> bb205__0_6014 [label="unwind"];
    bb110__0_6014 -> bb111__0_6014 [label="0"];
    bb110__0_6014 -> bb114__0_6014 [label="otherwise"];
    bb111__0_6014 -> bb112__0_6014 [label="return"];
    bb111__0_6014 -> bb205__0_6014 [label="unwind"];
    bb112__0_6014 -> bb113__0_6014 [label="return"];
    bb112__0_6014 -> bb205__0_6014 [label="unwind"];
    bb113__0_6014 -> bb185__0_6014 [label=""];
    bb114__0_6014 -> bb115__0_6014 [label="return"];
    bb114__0_6014 -> bb205__0_6014 [label="unwind"];
    bb115__0_6014 -> bb116__0_6014 [label="return"];
    bb115__0_6014 -> bb205__0_6014 [label="unwind"];
    bb116__0_6014 -> bb117__0_6014 [label="0"];
    bb116__0_6014 -> bb118__0_6014 [label="1"];
    bb116__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb117__0_6014 -> bb120__0_6014 [label="return"];
    bb117__0_6014 -> bb201__0_6014 [label="unwind"];
    bb118__0_6014 -> bb119__0_6014 [label="return"];
    bb118__0_6014 -> bb220__0_6014 [label="unwind"];
    bb119__0_6014 -> bb184__0_6014 [label=""];
    bb120__0_6014 -> bb213__0_6014 [label="return"];
    bb120__0_6014 -> bb220__0_6014 [label="unwind"];
    bb121__0_6014 -> bb122__0_6014 [label="return"];
    bb121__0_6014 -> bb205__0_6014 [label="unwind"];
    bb122__0_6014 -> bb127__0_6014 [label="0"];
    bb122__0_6014 -> bb123__0_6014 [label="otherwise"];
    bb123__0_6014 -> bb124__0_6014 [label="return"];
    bb123__0_6014 -> bb205__0_6014 [label="unwind"];
    bb124__0_6014 -> bb125__0_6014 [label="return"];
    bb124__0_6014 -> bb205__0_6014 [label="unwind"];
    bb125__0_6014 -> bb126__0_6014 [label="return"];
    bb125__0_6014 -> bb205__0_6014 [label="unwind"];
    bb126__0_6014 -> bb184__0_6014 [label=""];
    bb127__0_6014 -> bb128__0_6014 [label="return"];
    bb127__0_6014 -> bb205__0_6014 [label="unwind"];
    bb128__0_6014 -> bb129__0_6014 [label="return"];
    bb128__0_6014 -> bb205__0_6014 [label="unwind"];
    bb129__0_6014 -> bb130__0_6014 [label="0"];
    bb129__0_6014 -> bb133__0_6014 [label="otherwise"];
    bb130__0_6014 -> bb131__0_6014 [label="return"];
    bb130__0_6014 -> bb205__0_6014 [label="unwind"];
    bb131__0_6014 -> bb132__0_6014 [label="return"];
    bb131__0_6014 -> bb205__0_6014 [label="unwind"];
    bb132__0_6014 -> bb185__0_6014 [label=""];
    bb133__0_6014 -> bb134__0_6014 [label="return"];
    bb133__0_6014 -> bb205__0_6014 [label="unwind"];
    bb134__0_6014 -> bb135__0_6014 [label="return"];
    bb134__0_6014 -> bb205__0_6014 [label="unwind"];
    bb135__0_6014 -> bb136__0_6014 [label="return"];
    bb135__0_6014 -> bb205__0_6014 [label="unwind"];
    bb136__0_6014 -> bb137__0_6014 [label="0"];
    bb136__0_6014 -> bb138__0_6014 [label="1"];
    bb136__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb137__0_6014 -> bb140__0_6014 [label="return"];
    bb137__0_6014 -> bb200__0_6014 [label="unwind"];
    bb138__0_6014 -> bb139__0_6014 [label="return"];
    bb138__0_6014 -> bb219__0_6014 [label="unwind"];
    bb139__0_6014 -> bb183__0_6014 [label=""];
    bb140__0_6014 -> bb214__0_6014 [label="return"];
    bb140__0_6014 -> bb219__0_6014 [label="unwind"];
    bb141__0_6014 -> bb146__0_6014 [label="0"];
    bb141__0_6014 -> bb142__0_6014 [label="otherwise"];
    bb142__0_6014 -> bb143__0_6014 [label="return"];
    bb142__0_6014 -> bb205__0_6014 [label="unwind"];
    bb143__0_6014 -> bb144__0_6014 [label="return"];
    bb143__0_6014 -> bb205__0_6014 [label="unwind"];
    bb144__0_6014 -> bb145__0_6014 [label="return"];
    bb144__0_6014 -> bb205__0_6014 [label="unwind"];
    bb145__0_6014 -> bb183__0_6014 [label=""];
    bb146__0_6014 -> bb147__0_6014 [label="return"];
    bb146__0_6014 -> bb205__0_6014 [label="unwind"];
    bb147__0_6014 -> bb148__0_6014 [label="return"];
    bb147__0_6014 -> bb205__0_6014 [label="unwind"];
    bb148__0_6014 -> bb149__0_6014 [label="0"];
    bb148__0_6014 -> bb152__0_6014 [label="otherwise"];
    bb149__0_6014 -> bb150__0_6014 [label="return"];
    bb149__0_6014 -> bb205__0_6014 [label="unwind"];
    bb150__0_6014 -> bb151__0_6014 [label="return"];
    bb150__0_6014 -> bb205__0_6014 [label="unwind"];
    bb151__0_6014 -> bb185__0_6014 [label=""];
    bb152__0_6014 -> bb153__0_6014 [label="return"];
    bb152__0_6014 -> bb205__0_6014 [label="unwind"];
    bb153__0_6014 -> bb154__0_6014 [label="return"];
    bb153__0_6014 -> bb205__0_6014 [label="unwind"];
    bb154__0_6014 -> bb155__0_6014 [label="return"];
    bb154__0_6014 -> bb205__0_6014 [label="unwind"];
    bb155__0_6014 -> bb156__0_6014 [label="return"];
    bb155__0_6014 -> bb205__0_6014 [label="unwind"];
    bb156__0_6014 -> bb159__0_6014 [label="0"];
    bb156__0_6014 -> bb157__0_6014 [label="otherwise"];
    bb157__0_6014 -> bb158__0_6014 [label="return"];
    bb157__0_6014 -> bb205__0_6014 [label="unwind"];
    bb158__0_6014 -> bb182__0_6014 [label=""];
    bb159__0_6014 -> bb160__0_6014 [label="return"];
    bb159__0_6014 -> bb205__0_6014 [label="unwind"];
    bb160__0_6014 -> bb161__0_6014 [label="return"];
    bb160__0_6014 -> bb205__0_6014 [label="unwind"];
    bb161__0_6014 -> bb162__0_6014 [label="return"];
    bb161__0_6014 -> bb205__0_6014 [label="unwind"];
    bb162__0_6014 -> bb163__0_6014 [label="return"];
    bb162__0_6014 -> bb205__0_6014 [label="unwind"];
    bb163__0_6014 -> bb164__0_6014 [label="0"];
    bb163__0_6014 -> bb165__0_6014 [label="1"];
    bb163__0_6014 -> bb5__0_6014 [label="otherwise"];
    bb164__0_6014 -> bb167__0_6014 [label="return"];
    bb164__0_6014 -> bb199__0_6014 [label="unwind"];
    bb165__0_6014 -> bb166__0_6014 [label="return"];
    bb165__0_6014 -> bb218__0_6014 [label="unwind"];
    bb166__0_6014 -> bb181__0_6014 [label=""];
    bb167__0_6014 -> bb168__0_6014 [label="return"];
    bb167__0_6014 -> bb199__0_6014 [label="unwind"];
    bb168__0_6014 -> bb169__0_6014 [label="return"];
    bb168__0_6014 -> bb199__0_6014 [label="unwind"];
    bb169__0_6014 -> bb172__0_6014 [label="0"];
    bb169__0_6014 -> bb170__0_6014 [label="otherwise"];
    bb170__0_6014 -> bb215__0_6014 [label="return"];
    bb170__0_6014 -> bb218__0_6014 [label="unwind"];
    bb171__0_6014 -> bb181__0_6014 [label=""];
    bb172__0_6014 -> bb216__0_6014 [label="return"];
    bb172__0_6014 -> bb218__0_6014 [label="unwind"];
    bb173__0_6014 -> bb174__0_6014 [label="return"];
    bb173__0_6014 -> bb205__0_6014 [label="unwind"];
    bb174__0_6014 -> bb175__0_6014 [label="return"];
    bb174__0_6014 -> bb205__0_6014 [label="unwind"];
    bb175__0_6014 -> bb180__0_6014 [label="0"];
    bb175__0_6014 -> bb176__0_6014 [label="otherwise"];
    bb176__0_6014 -> bb177__0_6014 [label="return"];
    bb176__0_6014 -> bb205__0_6014 [label="unwind"];
    bb177__0_6014 -> bb178__0_6014 [label="return"];
    bb177__0_6014 -> bb205__0_6014 [label="unwind"];
    bb178__0_6014 -> bb179__0_6014 [label="return"];
    bb178__0_6014 -> bb205__0_6014 [label="unwind"];
    bb179__0_6014 -> bb185__0_6014 [label=""];
    bb180__0_6014 -> bb198__0_6014 [label=""];
    bb181__0_6014 -> bb182__0_6014 [label=""];
    bb182__0_6014 -> bb185__0_6014 [label=""];
    bb183__0_6014 -> bb185__0_6014 [label=""];
    bb184__0_6014 -> bb185__0_6014 [label=""];
    bb185__0_6014 -> bb188__0_6014 [label=""];
    bb186__0_6014 -> bb188__0_6014 [label=""];
    bb187__0_6014 -> bb188__0_6014 [label=""];
    bb188__0_6014 -> bb189__0_6014 [label="return"];
    bb188__0_6014 -> bb206__0_6014 [label="unwind"];
    bb189__0_6014 -> bb190__0_6014 [label=""];
    bb190__0_6014 -> bb191__0_6014 [label="return"];
    bb190__0_6014 -> bb207__0_6014 [label="unwind"];
    bb191__0_6014 -> bb192__0_6014 [label="return"];
    bb191__0_6014 -> bb208__0_6014 [label="unwind"];
    bb192__0_6014 -> bb193__0_6014 [label=""];
    bb193__0_6014 -> bb194__0_6014 [label="return"];
    bb193__0_6014 -> bb209__0_6014 [label="unwind"];
    bb194__0_6014 -> bb195__0_6014 [label=""];
    bb195__0_6014 -> bb196__0_6014 [label=""];
    bb196__0_6014 -> bb197__0_6014 [label=""];
    bb197__0_6014 -> bb198__0_6014 [label=""];
    bb199__0_6014 -> bb218__0_6014 [label="return"];
    bb200__0_6014 -> bb219__0_6014 [label="return"];
    bb201__0_6014 -> bb220__0_6014 [label="return"];
    bb202__0_6014 -> bb224__0_6014 [label="return"];
    bb203__0_6014 -> bb225__0_6014 [label="return"];
    bb204__0_6014 -> bb226__0_6014 [label="return"];
    bb205__0_6014 -> bb206__0_6014 [label="return"];
    bb206__0_6014 -> bb207__0_6014 [label="return"];
    bb207__0_6014 -> bb208__0_6014 [label="return"];
    bb208__0_6014 -> bb209__0_6014 [label="return"];
    bb210__0_6014 -> bb67__0_6014 [label="return"];
    bb210__0_6014 -> bb205__0_6014 [label="unwind"];
    bb211__0_6014 -> bb80__0_6014 [label="return"];
    bb211__0_6014 -> bb205__0_6014 [label="unwind"];
    bb212__0_6014 -> bb102__0_6014 [label="return"];
    bb212__0_6014 -> bb205__0_6014 [label="unwind"];
    bb213__0_6014 -> bb121__0_6014 [label="return"];
    bb213__0_6014 -> bb205__0_6014 [label="unwind"];
    bb214__0_6014 -> bb141__0_6014 [label="return"];
    bb214__0_6014 -> bb205__0_6014 [label="unwind"];
    bb215__0_6014 -> bb171__0_6014 [label="return"];
    bb215__0_6014 -> bb205__0_6014 [label="unwind"];
    bb216__0_6014 -> bb173__0_6014 [label="return"];
    bb216__0_6014 -> bb205__0_6014 [label="unwind"];
    bb217__0_6014 -> bb185__0_6014 [label=""];
    bb218__0_6014 -> bb205__0_6014 [label=""];
    bb219__0_6014 -> bb205__0_6014 [label=""];
    bb220__0_6014 -> bb205__0_6014 [label=""];
    bb221__0_6014 -> bb205__0_6014 [label="return"];
    bb222__0_6014 -> bb205__0_6014 [label="0"];
    bb222__0_6014 -> bb221__0_6014 [label="otherwise"];
    bb223__0_6014 -> bb202__0_6014 [label=""];
    bb224__0_6014 -> bb205__0_6014 [label=""];
    bb225__0_6014 -> bb205__0_6014 [label=""];
    bb226__0_6014 -> bb205__0_6014 [label=""];
    bb227__0_6014 -> bb206__0_6014 [label=""];
    bb228__0_6014 -> bb206__0_6014 [label=""];
    bb229__0_6014 -> bb207__0_6014 [label=""];
    bb230__0_6014 -> bb208__0_6014 [label=""];
    bb231__0_6014 -> bb208__0_6014 [label=""];
    bb232__0_6014 -> bb209__0_6014 [label=""];
    bb233__0_6014 -> bb209__0_6014 [label=""];
    bb234__0_6014 -> bb209__0_6014 [label=""];
    bb235__0_6014 -> bb209__0_6014 [label=""];
}
