digraph Mir_0_2219 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn BorrowRateCurve::get_borrow_rate(_1: &amp;ReErased utils::borrow_rate_curve::BorrowRateCurve, _2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _3: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _6: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _7: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: &amp;ReErased std::string::String;<br align="left"/>let _12: &amp;ReErased std::string::String;<br align="left"/>let _13: std::string::String;<br align="left"/>let _14: std::string::String;<br align="left"/>let mut _15: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _17: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _18: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _19: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _20: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _21: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _23: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _24: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased u128;<br align="left"/>let _26: &amp;ReErased u128;<br align="left"/>let _27: u128;<br align="left"/>let mut _28: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _29: u32;<br align="left"/>let mut _30: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _31: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _32: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>let _33: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _34: (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint);<br align="left"/>let mut _35: std::option::Option&lt;(&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint)&gt;;<br align="left"/>let mut _36: &amp;ReErased mut std::iter::Map&lt;std::slice::Windows&lt;ReErased, utils::borrow_rate_curve::CurvePoint&gt;, Closure(DefId(0:2220 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#3}::get_borrow_rate::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased [utils::borrow_rate_curve::CurvePoint],)) -&gt; (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint), []), ()])&gt;;<br align="left"/>let mut _37: std::iter::Map&lt;std::slice::Windows&lt;ReErased, utils::borrow_rate_curve::CurvePoint&gt;, Closure(DefId(0:2220 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#3}::get_borrow_rate::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased [utils::borrow_rate_curve::CurvePoint],)) -&gt; (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint), []), ()])&gt;;<br align="left"/>let mut _38: std::slice::Windows&lt;ReErased, utils::borrow_rate_curve::CurvePoint&gt;;<br align="left"/>let mut _39: &amp;ReErased [utils::borrow_rate_curve::CurvePoint];<br align="left"/>let mut _40: &amp;ReErased [utils::borrow_rate_curve::CurvePoint; 11_usize];<br align="left"/>let mut _41: Closure(DefId(0:2220 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#3}::get_borrow_rate::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased [utils::borrow_rate_curve::CurvePoint],)) -&gt; (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint), []), ()]);<br align="left"/>let mut _42: Closure(DefId(0:2222 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#3}::get_borrow_rate::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint),)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased u32,)]);<br align="left"/>let mut _43: &amp;ReErased u32;<br align="left"/>let _44: ();<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: u32;<br align="left"/>let mut _47: u32;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: u32;<br align="left"/>let mut _53: u32;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _56: u32;<br align="left"/>let _57: utils::borrow_rate_curve::CurveSegment;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, utils::borrow_rate_curve::CurveSegment&gt;;<br align="left"/>let mut _59: std::result::Result&lt;utils::borrow_rate_curve::CurveSegment, anchor_lang::error::Error&gt;;<br align="left"/>let mut _60: utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _61: utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _66: utils::borrow_rate_curve::CurveSegment;<br align="left"/>let mut _67: &amp;ReErased utils::borrow_rate_curve::CurveSegment;<br align="left"/>let mut _68: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _70: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug utilization_rate =&gt; _2;<br align="left"/>debug utilization_rate =&gt; _3;<br align="left"/>debug res =&gt; _14;<br align="left"/>debug utilization_rate_bps =&gt; _29;<br align="left"/>debug start_pt =&gt; _32;<br align="left"/>debug end_pt =&gt; _33;<br align="left"/>debug segment =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>>;
    bb0__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_2<br/>StorageLive(_6)<br/>_70 = const _<br/>_6 = &amp;(*_70)<br/></td></tr><tr><td align="left">_4 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _5, move _6)</td></tr></table>>];
    bb1__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_69 = const _<br/>_18 = &amp;(*_69)<br/>_17 = &amp;(*_18)<br/>_16 = move _17 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _2<br/></td></tr><tr><td align="left">_27 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _28)</td></tr></table>>];
    bb3__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_24 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _25)</td></tr></table>>];
    bb4__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = [move _24]<br/>StorageDead(_24)<br/>_22 = &amp;_23<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_15 = Arguments::&lt;'_&gt;::new_v1(move _16, move _20)</td></tr></table>>];
    bb5__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = format(move _15)</td></tr></table>>];
    bb6__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>_13 = move _14<br/>StorageDead(_14)<br/>_12 = &amp;_13<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::string::String as Deref&gt;::deref(move _11)</td></tr></table>>];
    bb7__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_9 = &amp;(*_10)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb8__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb9__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>_3 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = _2<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_3<br/></td></tr><tr><td align="left">_30 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_bps::&lt;u32&gt;(move _31)</td></tr></table>>];
    bb12__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = std::option::Option::&lt;u32&gt;::unwrap(move _30)</td></tr></table>>];
    bb13__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;((*_1).0: [utils::borrow_rate_curve::CurvePoint; 11])<br/>_39 = move _40 as &amp;[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = core::slice::&lt;impl [CurvePoint]&gt;::windows(move _39, const 2_usize)</td></tr></table>>];
    bb14__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_41)<br/>_41 = {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}<br/></td></tr><tr><td align="left">_37 = &lt;Windows&lt;'_, CurvePoint&gt; as Iterator&gt;::map::&lt;(&amp;CurvePoint, &amp;CurvePoint), {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}&gt;(move _38, move _41)</td></tr></table>>];
    bb15__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_36 = &amp;mut _37<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_29<br/>_42 = {closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36} { utilization_rate_bps: move _43 }<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_35 = &lt;std::iter::Map&lt;Windows&lt;'_, CurvePoint&gt;, {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}&gt; as Iterator&gt;::find::&lt;{closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36}&gt;(move _36, move _42)</td></tr></table>>];
    bb16__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = std::option::Option::&lt;(&amp;CurvePoint, &amp;CurvePoint)&gt;::unwrap(move _35)</td></tr></table>>];
    bb17__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_32)<br/>_32 = (_34.0: &amp;utils::borrow_rate_curve::CurvePoint)<br/>StorageLive(_33)<br/>_33 = (_34.1: &amp;utils::borrow_rate_curve::CurvePoint)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _29<br/>StorageLive(_47)<br/>_47 = ((*_32).0: u32)<br/>_45 = Eq(move _46, move _47)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb18__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = ((*_32).1: u32)<br/></td></tr><tr><td align="left">_49 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_bps::&lt;u32&gt;(move _50)</td></tr></table>>];
    bb19__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Ok(move _49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _29<br/>StorageLive(_53)<br/>_53 = ((*_33).0: u32)<br/>_51 = Eq(move _52, move _53)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb21__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = ((*_33).1: u32)<br/></td></tr><tr><td align="left">_55 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_bps::&lt;u32&gt;(move _56)</td></tr></table>>];
    bb22__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Ok(move _55)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>_44 = const ()<br/>StorageDead(_51)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = (*_32)<br/>StorageLive(_61)<br/>_61 = (*_33)<br/></td></tr><tr><td align="left">_59 = CurveSegment::from_points(move _60, move _61)</td></tr></table>>];
    bb24__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;CurveSegment, anchor_lang::error::Error&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb25__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_62 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb26__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = move ((_58 as Continue).0: utils::borrow_rate_curve::CurveSegment)<br/>_57 = move _66<br/>StorageDead(_66)<br/>_71 = discriminant(_58)<br/>StorageDead(_58)<br/>StorageLive(_67)<br/>_67 = &amp;_57<br/>StorageLive(_68)<br/>_68 = _3<br/></td></tr><tr><td align="left">_0 = CurveSegment::get_borrow_rate(move _67, move _68)</td></tr></table>>];
    bb27__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb28__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = move ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_65)<br/>_65 = move _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb29__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>_73 = discriminant(_58)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_57)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">return</td></tr></table>>];
    bb34__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb35__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb36__0_2219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2219 -> bb1__0_2219 [label="return"];
    bb1__0_2219 -> bb10__0_2219 [label="0"];
    bb1__0_2219 -> bb2__0_2219 [label="otherwise"];
    bb2__0_2219 -> bb3__0_2219 [label="return"];
    bb3__0_2219 -> bb4__0_2219 [label="return"];
    bb4__0_2219 -> bb5__0_2219 [label="return"];
    bb5__0_2219 -> bb6__0_2219 [label="return"];
    bb6__0_2219 -> bb7__0_2219 [label="return"];
    bb6__0_2219 -> bb34__0_2219 [label="unwind"];
    bb7__0_2219 -> bb8__0_2219 [label="return"];
    bb7__0_2219 -> bb34__0_2219 [label="unwind"];
    bb8__0_2219 -> bb9__0_2219 [label="return"];
    bb8__0_2219 -> bb35__0_2219 [label="unwind"];
    bb9__0_2219 -> bb11__0_2219 [label=""];
    bb10__0_2219 -> bb11__0_2219 [label=""];
    bb11__0_2219 -> bb12__0_2219 [label="return"];
    bb12__0_2219 -> bb13__0_2219 [label="return"];
    bb13__0_2219 -> bb14__0_2219 [label="return"];
    bb14__0_2219 -> bb15__0_2219 [label="return"];
    bb15__0_2219 -> bb16__0_2219 [label="return"];
    bb16__0_2219 -> bb17__0_2219 [label="return"];
    bb17__0_2219 -> bb20__0_2219 [label="0"];
    bb17__0_2219 -> bb18__0_2219 [label="otherwise"];
    bb18__0_2219 -> bb19__0_2219 [label="return"];
    bb19__0_2219 -> bb31__0_2219 [label=""];
    bb20__0_2219 -> bb23__0_2219 [label="0"];
    bb20__0_2219 -> bb21__0_2219 [label="otherwise"];
    bb21__0_2219 -> bb22__0_2219 [label="return"];
    bb22__0_2219 -> bb31__0_2219 [label=""];
    bb23__0_2219 -> bb24__0_2219 [label="return"];
    bb24__0_2219 -> bb25__0_2219 [label="return"];
    bb24__0_2219 -> bb35__0_2219 [label="unwind"];
    bb25__0_2219 -> bb26__0_2219 [label="0"];
    bb25__0_2219 -> bb28__0_2219 [label="1"];
    bb25__0_2219 -> bb27__0_2219 [label="otherwise"];
    bb26__0_2219 -> bb30__0_2219 [label="return"];
    bb28__0_2219 -> bb29__0_2219 [label="return"];
    bb28__0_2219 -> bb36__0_2219 [label="unwind"];
    bb29__0_2219 -> bb32__0_2219 [label=""];
    bb30__0_2219 -> bb33__0_2219 [label=""];
    bb31__0_2219 -> bb32__0_2219 [label=""];
    bb32__0_2219 -> bb33__0_2219 [label=""];
    bb34__0_2219 -> bb35__0_2219 [label="return"];
    bb36__0_2219 -> bb35__0_2219 [label=""];
}
