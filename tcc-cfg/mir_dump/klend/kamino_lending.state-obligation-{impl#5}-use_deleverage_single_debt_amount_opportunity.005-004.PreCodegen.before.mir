// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:842:1: 842:21>::use_deleverage_single_debt_amount_opportunity` before PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:842:1: 842:21>::use_deleverage_single_debt_amount_opportunity(_1: &mut obligation::ObligationOrder, _2: u64) -> () {
    debug self => _1;
    debug debt_repay_amount => _2;
    let mut _0: ();
    let _3: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _4: &state::obligation::ObligationOrder;
    let mut _6: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _7: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _8: u64;
    let _9: ();
    let mut _10: bool;
    let mut _11: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _12: !;
    let _13: ();
    let _14: ();
    let mut _15: std::fmt::Arguments<'_>;
    let mut _16: &[&str];
    let mut _17: &[&str; 3];
    let _18: &[&str; 3];
    let _19: [&str; 3];
    let mut _20: &[core::fmt::rt::Argument<'_>];
    let mut _21: &[core::fmt::rt::Argument<'_>; 2];
    let _22: &[core::fmt::rt::Argument<'_>; 2];
    let _23: [core::fmt::rt::Argument<'_>; 2];
    let mut _24: core::fmt::rt::Argument<'_>;
    let mut _25: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _26: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _27: core::fmt::rt::Argument<'_>;
    let mut _28: &u64;
    let _29: &u64;
    let mut _30: state::obligation::ObligationOrder;
    let _31: ();
    let _32: ();
    let mut _33: std::fmt::Arguments<'_>;
    let mut _34: &[&str];
    let mut _35: &[&str; 4];
    let _36: &[&str; 4];
    let _37: [&str; 4];
    let mut _38: &[core::fmt::rt::Argument<'_>];
    let mut _39: &[core::fmt::rt::Argument<'_>; 3];
    let _40: &[core::fmt::rt::Argument<'_>; 3];
    let _41: [core::fmt::rt::Argument<'_>; 3];
    let mut _42: core::fmt::rt::Argument<'_>;
    let mut _43: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _44: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _45: core::fmt::rt::Argument<'_>;
    let mut _46: &u64;
    let _47: &u64;
    let mut _48: core::fmt::rt::Argument<'_>;
    let mut _49: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _50: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _51: u128;
    let mut _52: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    scope 1 {
        debug liquidatable_debt_amount => _3;
        let _5: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        scope 2 {
            debug updated_liquidatable_debt_amount => _5;
            let mut _53: &[&str; 3];
            let mut _54: &[&str; 4];
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = obligation::ObligationOrder::opportunity_parameter(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _3;
        StorageLive(_7);
        StorageLive(_8);
        _8 = _2;
        _7 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_num::<u64>(move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        _5 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::saturating_sub(move _6, move _7) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _5;
        _10 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::is_zero(move _11) -> [return: bb4, unwind continue];
    }

    bb4: {
        switchInt(move _10) -> [0: bb11, otherwise: bb5];
    }

    bb5: {
        StorageDead(_11);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _53 = const _;
        _18 = &(*_53);
        _17 = &(*_18);
        _16 = move _17 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_17);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &_3;
        _25 = &(*_26);
        _24 = core::fmt::rt::Argument::<'_>::new_display::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>(move _25) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &_2;
        _28 = &(*_29);
        _27 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _28) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_28);
        _23 = [move _24, move _27];
        StorageDead(_27);
        StorageDead(_24);
        _22 = &_23;
        _21 = &(*_22);
        _20 = move _21 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_21);
        _15 = Arguments::<'_>::new_v1(move _16, move _20) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_20);
        StorageDead(_16);
        _14 = _print(move _15) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_15);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_18);
        StorageDead(_14);
        _13 = const ();
        StorageDead(_13);
        StorageLive(_30);
        _30 = <obligation::ObligationOrder as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        (*_1) = move _30;
        StorageDead(_30);
        _0 = const ();
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_5);
        StorageDead(_3);
        goto -> bb18;
    }

    bb11: {
        StorageDead(_11);
        _9 = const ();
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _54 = const _;
        _36 = &(*_54);
        _35 = &(*_36);
        _34 = move _35 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_35);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = &_3;
        _43 = &(*_44);
        _42 = core::fmt::rt::Argument::<'_>::new_display::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>(move _43) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &_2;
        _46 = &(*_47);
        _45 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _46) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &_5;
        _49 = &(*_50);
        _48 = core::fmt::rt::Argument::<'_>::new_display::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>(move _49) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_49);
        _41 = [move _42, move _45, move _48];
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        _40 = &_41;
        _39 = &(*_40);
        _38 = move _39 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_39);
        _33 = Arguments::<'_>::new_v1(move _34, move _38) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_38);
        StorageDead(_34);
        _32 = _print(move _33) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_33);
        StorageDead(_50);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_36);
        StorageDead(_32);
        _31 = const ();
        StorageDead(_31);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _5;
        _51 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::to_bits(move _52) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_52);
        ((*_1).1: u128) = move _51;
        StorageDead(_51);
        _0 = const ();
        StorageDead(_5);
        StorageDead(_3);
        goto -> bb18;
    }

    bb18: {
        return;
    }
}
