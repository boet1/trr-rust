digraph Mir_0_11867 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::low_u64(_1: &amp;ReErased utils::fraction::uint_types::U128) -&gt; u64<br align="left"/>let _2: &amp;ReErased [u64; 2_usize];<br align="left"/>let _3: usize;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug arr =&gt; _2;<br align="left"/>>;
    bb0__0_11867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;((*_1).0: [u64; 2])<br/>StorageLive(_3)<br/>_3 = const 0_usize<br/>_4 = Len((*_2))<br/>_5 = Lt(_3, _4)<br/></td></tr><tr><td align="left">assert(move _5, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _4, _3)</td></tr></table>>];
    bb1__0_11867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = (*_2)[_3]<br/>StorageDead(_2)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11867 -> bb1__0_11867 [label="success"];
}
