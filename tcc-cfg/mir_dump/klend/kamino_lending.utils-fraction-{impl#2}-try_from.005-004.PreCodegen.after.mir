// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:224:1: 224:39>::try_from` after PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:224:1: 224:39>::try_from(_1: utils::fraction::BigFraction) -> std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, LendingError> {
    debug value => _1;
    let mut _0: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, LendingError>;
    let _2: u128;
    let mut _3: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, LendingError>, u128>;
    let mut _4: std::result::Result<u128, LendingError>;
    let mut _5: std::result::Result<u128, &str>;
    let mut _6: utils::fraction::uint_types::U256;
    let mut _7: {closure@programs\klend\src\utils\fraction.rs:231:22: 231:25};
    let mut _8: isize;
    let _9: std::result::Result<std::convert::Infallible, LendingError>;
    let mut _10: !;
    let mut _11: std::result::Result<std::convert::Infallible, LendingError>;
    let _12: u128;
    let mut _13: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _14: u128;
    scope 1 {
        debug repr_faction => _2;
    }
    scope 2 {
        debug residual => _9;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _12;
        scope 5 {
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (_1.0: utils::fraction::uint_types::U256);
        _5 = <uint_types::U256 as TryInto<u128>>::try_into(move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageLive(_7);
        _7 = {closure@programs\klend\src\utils\fraction.rs:231:22: 231:25};
        _4 = std::result::Result::<u128, &str>::map_err::<LendingError, {closure@programs\klend\src\utils\fraction.rs:231:22: 231:25}>(move _5, move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_5);
        _3 = <std::result::Result<u128, LendingError> as Try>::branch(move _4) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_4);
        _8 = discriminant(_3);
        switchInt(move _8) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_12);
        _12 = ((_3 as Continue).0: u128);
        _2 = _12;
        StorageDead(_12);
        StorageDead(_3);
        StorageLive(_13);
        StorageLive(_14);
        _14 = _2;
        _13 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_bits(move _14) -> [return: bb8, unwind continue];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_9);
        _9 = ((_3 as Break).0: std::result::Result<std::convert::Infallible, LendingError>);
        StorageLive(_11);
        _11 = _9;
        _0 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, LendingError> as FromResidual<std::result::Result<Infallible, LendingError>>>::from_residual(move _11) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_11);
        StorageDead(_9);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb9;
    }

    bb8: {
        StorageDead(_14);
        _0 = std::result::Result::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, LendingError>::Ok(move _13);
        StorageDead(_13);
        StorageDead(_2);
        goto -> bb9;
    }

    bb9: {
        return;
    }
}
