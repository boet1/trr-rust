// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:332:1: 334:19>::mul` before PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:332:1: 334:19>::mul(_1: utils::fraction::BigFraction, _2: T) -> utils::fraction::BigFraction {
    debug self => _1;
    debug rhs => _2;
    let mut _0: utils::fraction::BigFraction;
    let _3: utils::fraction::uint_types::U256;
    let mut _4: T;
    let mut _5: utils::fraction::uint_types::U256;
    let mut _6: utils::fraction::uint_types::U256;
    let mut _7: utils::fraction::uint_types::U256;
    scope 1 {
        debug rhs => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = move _2;
        _3 = <T as Into<uint_types::U256>>::into(move _4) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (_1.0: utils::fraction::uint_types::U256);
        StorageLive(_7);
        _7 = _3;
        _5 = <uint_types::U256 as std::ops::Mul>::mul(move _6, move _7) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_6);
        _0 = utils::fraction::BigFraction(move _5);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
