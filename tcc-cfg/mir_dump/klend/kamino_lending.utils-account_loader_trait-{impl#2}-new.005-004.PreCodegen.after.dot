digraph Mir_0_2127 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn account_loader_trait::FatAccountLoader::&lt;'info, T&gt;::new(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;<br align="left"/>let mut _2: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _4: std::marker::PhantomData&lt;&amp;ReErased T/#1&gt;;<br align="left"/>debug acc_info =&gt; _1;<br align="left"/>>;
    bb0__0_2127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;(*_1)<br/></td></tr><tr><td align="left">_2 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _3)</td></tr></table>>];
    bb1__0_2127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>_4 = PhantomData::&lt;&amp;T&gt;<br/>_0 = account_loader_trait::FatAccountLoader::&lt;'_, T&gt; { acc_info: move _2, phantom: move _4 }<br/>StorageDead(_4)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2127 -> bb1__0_2127 [label="return"];
}
