digraph Mir_0_1872 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::init(_1: &amp;ReErased mut state::reserve::Reserve, _2: state::reserve::InitReserveParams) -&gt; ()<br align="left"/>let mut _3: state::reserve::Reserve;<br align="left"/>let mut _4: state::last_update::LastUpdate;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: state::reserve::ReserveLiquidity;<br align="left"/>let mut _8: state::reserve::ReserveCollateral;<br align="left"/>let mut _9: state::reserve::ReserveConfig;<br align="left"/>let mut _10: std::boxed::Box&lt;state::reserve::ReserveLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _11: std::boxed::Box&lt;state::reserve::ReserveCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _12: std::boxed::Box&lt;state::reserve::ReserveConfig, std::alloc::Global&gt;;<br align="left"/>let mut _13: *const state::reserve::ReserveLiquidity;<br align="left"/>let mut _14: *const state::reserve::ReserveCollateral;<br align="left"/>let mut _15: *const state::reserve::ReserveConfig;<br align="left"/>let mut _16: *const ();<br align="left"/>let mut _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: usize;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: *const ();<br align="left"/>let mut _23: usize;<br align="left"/>let mut _24: usize;<br align="left"/>let mut _25: usize;<br align="left"/>let mut _26: usize;<br align="left"/>let mut _27: bool;<br align="left"/>let mut _28: *const ();<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: usize;<br align="left"/>let mut _31: usize;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>>;
    bb0__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/></td></tr><tr><td align="left">_3 = &lt;reserve::Reserve as Default&gt;::default()</td></tr></table>>];
    bb1__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">(*_1) = move _3<br/>StorageDead(_3)<br/>((*_1).0: u64) = const _ as u64 (IntToInt)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (_2.0: u64)<br/></td></tr><tr><td align="left">_4 = last_update::LastUpdate::new(move _5)</td></tr></table>>];
    bb2__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>((*_1).1: state::last_update::LastUpdate) = move _4<br/>StorageDead(_4)<br/>StorageLive(_6)<br/>_6 = (_2.1: anchor_lang::prelude::Pubkey)<br/>((*_1).2: anchor_lang::prelude::Pubkey) = move _6<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>_10 = deref_copy (_2.2: std::boxed::Box&lt;state::reserve::ReserveLiquidity&gt;)<br/>_13 = (((_10.0: std::ptr::Unique&lt;state::reserve::ReserveLiquidity&gt;).0: std::ptr::NonNull&lt;state::reserve::ReserveLiquidity&gt;).0: *const state::reserve::ReserveLiquidity)<br/>_28 = _13 as *const () (PtrToPtr)<br/>_29 = _28 as usize (Transmute)<br/>_30 = AlignOf(state::reserve::ReserveLiquidity)<br/>_31 = Sub(_30, const 1_usize)<br/>_32 = BitAnd(_29, _31)<br/>_33 = Eq(_32, const 0_usize)<br/></td></tr><tr><td align="left">assert(_33, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _30, _29)</td></tr></table>>];
    bb3__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">return</td></tr></table>>];
    bb4__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">4 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb5__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb6__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_9 = (*_15)<br/>((*_1).9: state::reserve::ReserveConfig) = move _9<br/>StorageDead(_9)<br/>_0 = const ()<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb7__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_8 = (*_14)<br/>((*_1).7: state::reserve::ReserveCollateral) = move _8<br/>StorageDead(_8)<br/>StorageLive(_9)<br/>_12 = deref_copy (_2.4: std::boxed::Box&lt;state::reserve::ReserveConfig&gt;)<br/>_15 = (((_12.0: std::ptr::Unique&lt;state::reserve::ReserveConfig&gt;).0: std::ptr::NonNull&lt;state::reserve::ReserveConfig&gt;).0: *const state::reserve::ReserveConfig)<br/>_16 = _15 as *const () (PtrToPtr)<br/>_17 = _16 as usize (Transmute)<br/>_18 = AlignOf(state::reserve::ReserveConfig)<br/>_19 = Sub(_18, const 1_usize)<br/>_20 = BitAnd(_17, _19)<br/>_21 = Eq(_20, const 0_usize)<br/></td></tr><tr><td align="left">assert(_21, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _18, _17)</td></tr></table>>];
    bb8__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_7 = (*_13)<br/>((*_1).5: state::reserve::ReserveLiquidity) = move _7<br/>StorageDead(_7)<br/>StorageLive(_8)<br/>_11 = deref_copy (_2.3: std::boxed::Box&lt;state::reserve::ReserveCollateral&gt;)<br/>_14 = (((_11.0: std::ptr::Unique&lt;state::reserve::ReserveCollateral&gt;).0: std::ptr::NonNull&lt;state::reserve::ReserveCollateral&gt;).0: *const state::reserve::ReserveCollateral)<br/>_22 = _14 as *const () (PtrToPtr)<br/>_23 = _22 as usize (Transmute)<br/>_24 = AlignOf(state::reserve::ReserveCollateral)<br/>_25 = Sub(_24, const 1_usize)<br/>_26 = BitAnd(_23, _25)<br/>_27 = Eq(_26, const 0_usize)<br/></td></tr><tr><td align="left">assert(_27, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _24, _23)</td></tr></table>>];
    bb0__0_1872 -> bb1__0_1872 [label="return"];
    bb0__0_1872 -> bb4__0_1872 [label="unwind"];
    bb1__0_1872 -> bb2__0_1872 [label="return"];
    bb1__0_1872 -> bb4__0_1872 [label="unwind"];
    bb2__0_1872 -> bb8__0_1872 [label="success"];
    bb4__0_1872 -> bb5__0_1872 [label="return"];
    bb6__0_1872 -> bb3__0_1872 [label="return"];
    bb6__0_1872 -> bb5__0_1872 [label="unwind"];
    bb7__0_1872 -> bb6__0_1872 [label="success"];
    bb8__0_1872 -> bb7__0_1872 [label="success"];
}
