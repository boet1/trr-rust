// MIR for `get_price_account::{closure#0}` before PreCodegen

fn get_price_account::{closure#0}(_1: {closure@programs\klend\src\utils\prices\scope.rs:72:23: 72:29}, _2: &&mut [u8]) -> &scope_types::OraclePrices {
    debug data => _2;
    let mut _0: &scope_types::OraclePrices;
    let _3: &scope_types::OraclePrices;
    let mut _4: &[u8];
    let _5: &[u8];
    let _6: &[u8];
    let mut _7: &[u8];
    let mut _8: std::ops::RangeFrom<usize>;
    let mut _9: &mut [u8];

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _9 = deref_copy (*_2);
        _7 = &(*_9);
        StorageLive(_8);
        _8 = RangeFrom::<usize> { start: const 8_usize };
        _6 = <[u8] as Index<RangeFrom<usize>>>::index(move _7, move _8) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_8);
        StorageDead(_7);
        _5 = &(*_6);
        _4 = &(*_5);
        _3 = bytemuck::from_bytes::<scope_types::OraclePrices>(move _4) -> [return: bb2, unwind continue];
    }

    bb2: {
        _0 = &(*_3);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
