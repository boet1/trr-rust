digraph Mir_0_11909 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::overflowing_pow(_1: utils::fraction::uint_types::U128, _2: utils::fraction::uint_types::U128) -&gt; (utils::fraction::uint_types::U128, bool)<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: utils::fraction::uint_types::U128;<br align="left"/>let _8: Closure(DefId(0:11910 ~ kamino_lending[6389]::utils::fraction::uint_types::{impl#135}::overflowing_pow::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) utils::fraction::uint_types::U128,)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let _9: utils::fraction::uint_types::U128;<br align="left"/>let mut _10: utils::fraction::uint_types::U128;<br align="left"/>let mut _11: utils::fraction::uint_types::U128;<br align="left"/>let mut _12: utils::fraction::uint_types::U128;<br align="left"/>let mut _13: bool;<br align="left"/>let _14: ();<br align="left"/>let mut _15: ();<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _18: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased Closure(DefId(0:11910 ~ kamino_lending[6389]::utils::fraction::uint_types::{impl#135}::overflowing_pow::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) utils::fraction::uint_types::U128,)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _21: (&amp;ReErased utils::fraction::uint_types::U128,);<br align="left"/>let mut _22: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let _23: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _24: utils::fraction::uint_types::U128;<br align="left"/>let _25: utils::fraction::uint_types::U128;<br align="left"/>let _26: bool;<br align="left"/>let mut _27: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _28: utils::fraction::uint_types::U128;<br align="left"/>let mut _29: utils::fraction::uint_types::U128;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: utils::fraction::uint_types::U128;<br align="left"/>let mut _32: utils::fraction::uint_types::U128;<br align="left"/>let mut _33: utils::fraction::uint_types::U128;<br align="left"/>let _34: utils::fraction::uint_types::U128;<br align="left"/>let _35: bool;<br align="left"/>let mut _36: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _37: utils::fraction::uint_types::U128;<br align="left"/>let mut _38: utils::fraction::uint_types::U128;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: utils::fraction::uint_types::U128;<br align="left"/>let _41: utils::fraction::uint_types::U128;<br align="left"/>let _42: bool;<br align="left"/>let mut _43: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _44: utils::fraction::uint_types::U128;<br align="left"/>let mut _45: utils::fraction::uint_types::U128;<br align="left"/>let mut _46: bool;<br align="left"/>let mut _47: utils::fraction::uint_types::U128;<br align="left"/>let mut _48: utils::fraction::uint_types::U128;<br align="left"/>let mut _49: utils::fraction::uint_types::U128;<br align="left"/>let mut _50: utils::fraction::uint_types::U128;<br align="left"/>let mut _51: !;<br align="left"/>let _52: ();<br align="left"/>let mut _53: !;<br align="left"/>let _54: utils::fraction::uint_types::U128;<br align="left"/>let _55: utils::fraction::uint_types::U128;<br align="left"/>let _56: bool;<br align="left"/>let mut _57: (utils::fraction::uint_types::U128, bool);<br align="left"/>let mut _58: utils::fraction::uint_types::U128;<br align="left"/>let mut _59: utils::fraction::uint_types::U128;<br align="left"/>let mut _60: bool;<br align="left"/>let mut _61: utils::fraction::uint_types::U128;<br align="left"/>let mut _62: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug expon =&gt; _2;<br align="left"/>debug is_even =&gt; _8;<br align="left"/>debug u_one =&gt; _9;<br align="left"/>debug y =&gt; _10;<br align="left"/>debug n =&gt; _11;<br align="left"/>debug x =&gt; _12;<br align="left"/>debug overflow =&gt; _13;<br align="left"/>debug overflow_x =&gt; _25;<br align="left"/>debug overflow_overflow =&gt; _26;<br align="left"/>debug overflow_x =&gt; _34;<br align="left"/>debug overflow_overflow =&gt; _35;<br align="left"/>debug overflow_x =&gt; _41;<br align="left"/>debug overflow_overflow =&gt; _42;<br align="left"/>debug res =&gt; _54;<br align="left"/>debug overflow_x =&gt; _55;<br align="left"/>debug overflow_overflow =&gt; _56;<br align="left"/>>;
    bb0__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_2<br/></td></tr><tr><td align="left">_4 = uint_types::U128::is_zero(move _5)</td></tr></table>>];
    bb1__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = uint_types::U128::one()</td></tr></table>>];
    bb3__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_0 = (move _7, const false)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_8)<br/>_8 = {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1020:19: 1020:30}<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = uint_types::U128::one()</td></tr></table>>];
    bb5__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = _9<br/>StorageLive(_11)<br/>_11 = _2<br/>StorageLive(_12)<br/>_12 = _1<br/>StorageLive(_13)<br/>_13 = const false<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;_11<br/>StorageLive(_18)<br/>_18 = &amp;_9<br/></td></tr><tr><td align="left">_16 = &lt;uint_types::U128 as PartialOrd&gt;::gt(move _17, move _18)</td></tr></table>>];
    bb7__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb8__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;_8<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;_11<br/>_22 = &amp;(*_23)<br/>_21 = (move _22,)<br/></td></tr><tr><td align="left">_19 = &lt;{closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1020:19: 1020:30} as Fn&lt;(&amp;uint_types::U128,)&gt;&gt;::call(move _20, move _21)</td></tr></table>>];
    bb9__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb10__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_24)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _12<br/>StorageLive(_29)<br/>_29 = _12<br/></td></tr><tr><td align="left">_27 = uint_types::U128::overflowing_mul(move _28, move _29)</td></tr></table>>];
    bb11__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_25)<br/>_25 = (_27.0: utils::fraction::uint_types::U128)<br/>StorageLive(_26)<br/>_26 = (_27.1: bool)<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>_30 = _26<br/>_13 = BitOr(_13, move _30)<br/>StorageDead(_30)<br/>_24 = _25<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>_12 = move _24<br/>StorageDead(_24)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _11<br/></td></tr><tr><td align="left">_31 = &lt;uint_types::U128 as Shr&lt;usize&gt;&gt;::shr(move _32, const 1_usize)</td></tr></table>>];
    bb12__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_11 = move _31<br/>StorageDead(_31)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _12<br/>StorageLive(_38)<br/>_38 = _10<br/></td></tr><tr><td align="left">_36 = uint_types::U128::overflowing_mul(move _37, move _38)</td></tr></table>>];
    bb14__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_34)<br/>_34 = (_36.0: utils::fraction::uint_types::U128)<br/>StorageLive(_35)<br/>_35 = (_36.1: bool)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>_39 = _35<br/>_13 = BitOr(_13, move _39)<br/>StorageDead(_39)<br/>_33 = _34<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>_10 = move _33<br/>StorageDead(_33)<br/>StorageLive(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _12<br/>StorageLive(_45)<br/>_45 = _12<br/></td></tr><tr><td align="left">_43 = uint_types::U128::overflowing_mul(move _44, move _45)</td></tr></table>>];
    bb15__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_41)<br/>_41 = (_43.0: utils::fraction::uint_types::U128)<br/>StorageLive(_42)<br/>_42 = (_43.1: bool)<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>_46 = _42<br/>_13 = BitOr(_13, move _46)<br/>StorageDead(_46)<br/>_40 = _41<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>_12 = move _40<br/>StorageDead(_40)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _11<br/>StorageLive(_50)<br/>_50 = _9<br/></td></tr><tr><td align="left">_48 = &lt;uint_types::U128 as Sub&gt;::sub(move _49, move _50)</td></tr></table>>];
    bb16__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;uint_types::U128 as Shr&lt;usize&gt;&gt;::shr(move _48, const 1_usize)</td></tr></table>>];
    bb17__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_11 = move _47<br/>StorageDead(_47)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_52)<br/>_14 = const ()<br/>StorageDead(_52)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageLive(_54)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _12<br/>StorageLive(_59)<br/>_59 = _10<br/></td></tr><tr><td align="left">_57 = uint_types::U128::overflowing_mul(move _58, move _59)</td></tr></table>>];
    bb20__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_55)<br/>_55 = (_57.0: utils::fraction::uint_types::U128)<br/>StorageLive(_56)<br/>_56 = (_57.1: bool)<br/>StorageDead(_57)<br/>StorageLive(_60)<br/>_60 = _56<br/>_13 = BitOr(_13, move _60)<br/>StorageDead(_60)<br/>_54 = _55<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_61)<br/>_61 = _54<br/>StorageLive(_62)<br/>_62 = _13<br/>_0 = (move _61, move _62)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_54)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_11909 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11909 -> bb1__0_11909 [label="return"];
    bb1__0_11909 -> bb4__0_11909 [label="0"];
    bb1__0_11909 -> bb2__0_11909 [label="otherwise"];
    bb2__0_11909 -> bb3__0_11909 [label="return"];
    bb3__0_11909 -> bb21__0_11909 [label=""];
    bb4__0_11909 -> bb5__0_11909 [label="return"];
    bb5__0_11909 -> bb6__0_11909 [label=""];
    bb6__0_11909 -> bb7__0_11909 [label="return"];
    bb7__0_11909 -> bb19__0_11909 [label="0"];
    bb7__0_11909 -> bb8__0_11909 [label="otherwise"];
    bb8__0_11909 -> bb9__0_11909 [label="return"];
    bb9__0_11909 -> bb13__0_11909 [label="0"];
    bb9__0_11909 -> bb10__0_11909 [label="otherwise"];
    bb10__0_11909 -> bb11__0_11909 [label="return"];
    bb11__0_11909 -> bb12__0_11909 [label="return"];
    bb12__0_11909 -> bb18__0_11909 [label=""];
    bb13__0_11909 -> bb14__0_11909 [label="return"];
    bb14__0_11909 -> bb15__0_11909 [label="return"];
    bb15__0_11909 -> bb16__0_11909 [label="return"];
    bb16__0_11909 -> bb17__0_11909 [label="return"];
    bb17__0_11909 -> bb18__0_11909 [label=""];
    bb18__0_11909 -> bb6__0_11909 [label=""];
    bb19__0_11909 -> bb20__0_11909 [label="return"];
    bb20__0_11909 -> bb21__0_11909 [label=""];
}
