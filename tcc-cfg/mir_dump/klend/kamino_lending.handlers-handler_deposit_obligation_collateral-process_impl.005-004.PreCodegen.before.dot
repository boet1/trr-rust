digraph Mir_0_112 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_deposit_obligation_collateral::process_impl(_1: &amp;ReErased handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;ReErased&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased state::nested_accounts::DepositObligationCollateralAccounts&lt;ReErased&gt;;<br align="left"/>let _7: &amp;ReErased state::nested_accounts::DepositObligationCollateralAccounts&lt;ReErased&gt;;<br align="left"/>let _8: state::nested_accounts::DepositObligationCollateralAccounts&lt;ReErased&gt;;<br align="left"/>let mut _9: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _11: anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _13: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _14: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _15: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _16: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _17: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _19: anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _25: ();<br align="left"/>let _26: anchor_lang::prelude::Clock;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _28: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _33: anchor_lang::prelude::Clock;<br align="left"/>let _34: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _35: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _43: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _44: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _45: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _47: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _53: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _54: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _55: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _57: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _63: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _64: ();<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _66: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _67: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _68: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _69: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _71: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _72: std::option::Option&lt;utils::prices::GetPriceResult&gt;;<br align="left"/>let mut _73: u16;<br align="left"/>let mut _74: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _75: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: ();<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _85: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _86: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _87: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _88: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _89: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _90: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _91: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _92: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _96: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _97: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _102: ();<br align="left"/>let _103: ();<br align="left"/>let mut _104: &amp;ReErased str;<br align="left"/>let _105: &amp;ReErased str;<br align="left"/>let mut _106: &amp;ReErased std::string::String;<br align="left"/>let _107: &amp;ReErased std::string::String;<br align="left"/>let _108: std::string::String;<br align="left"/>let _109: std::string::String;<br align="left"/>let mut _110: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _112: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _113: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _114: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _115: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _116: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _118: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _119: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased u64;<br align="left"/>let _121: &amp;ReErased u64;<br align="left"/>let _122: ();<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _124: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _125: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _127: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _129: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _131: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_spl::token::Token&gt;;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _138: ();<br align="left"/>let mut _139: ();<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _141: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _142: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _143: bool;<br align="left"/>let mut _144: bool;<br align="left"/>let mut _145: bool;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _187: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug accounts =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug clock =&gt; _26;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug lending_market =&gt; _34;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug deposit_reserve =&gt; _44;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug obligation =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug res =&gt; _109;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>>;
    bb0__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_145 = const false<br/>_144 = const false<br/>_143 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as Clone&gt;::clone(move _10)</td></tr></table>>];
    bb1__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;((*_1).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as Clone&gt;::clone(move _12)</td></tr></table>>];
    bb2__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;((*_1).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/></td></tr><tr><td align="left">_13 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as Clone&gt;::clone(move _14)</td></tr></table>>];
    bb3__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/></td></tr><tr><td align="left">_15 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as Clone&gt;::clone(move _16)</td></tr></table>>];
    bb4__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Clone&gt;::clone(move _18)</td></tr></table>>];
    bb5__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_1).6: anchor_lang::prelude::Program&lt;'_, anchor_spl::token::Token&gt;)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::Program&lt;'_, Token&gt; as Clone&gt;::clone(move _20)</td></tr></table>>];
    bb6__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_8 = nested_accounts::DepositObligationCollateralAccounts::&lt;'_&gt; { user_source_collateral: move _15, reserve_destination_collateral: move _13, deposit_reserve: move _11, obligation: move _9, obligation_owner: move _17, token_program: move _19 }<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>_7 = &amp;_8<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = deposit_obligation_collateral_checks(move _6)</td></tr></table>>];
    bb7__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb8__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_21 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_4 as Continue).0: ())<br/>_3 = _25<br/>StorageDead(_25)<br/>_146 = discriminant(_4)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb10__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_24)<br/>_24 = move _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_176 = discriminant(_4)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb13__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb14__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb15__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_29 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb16__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_27 as Continue).0: anchor_lang::prelude::Clock)<br/>_26 = move _33<br/>StorageDead(_33)<br/>_148 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;((*_1).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_37 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _38)</td></tr></table>>];
    bb17__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb18__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_174 = discriminant(_27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb20__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb21__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_36 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_35 = move _43<br/>StorageDead(_43)<br/>_34 = &amp;_35<br/>_150 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;((*_1).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_47 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load_mut(move _48)</td></tr></table>>];
    bb22__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_42)<br/>_42 = move _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb23__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>_172 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb25__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_49 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb26__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_46 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_45 = move _53<br/>StorageDead(_53)<br/>_44 = &amp;mut _45<br/>_152 = discriminant(_46)<br/>StorageDead(_46)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;((*_1).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_57 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_mut(move _58)</td></tr></table>>];
    bb27__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_52)<br/>_52 = move _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb28__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>_170 = discriminant(_46)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb30__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_59 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb31__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = move ((_56 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_55 = move _63<br/>StorageDead(_63)<br/>_54 = &amp;mut _55<br/>_154 = discriminant(_56)<br/>StorageDead(_56)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_44)<br/></td></tr><tr><td align="left">_68 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _69)</td></tr></table>>];
    bb32__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_62)<br/>_62 = move _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb33__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>_168 = discriminant(_56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_67 = &amp;mut (*_68)<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;_26<br/>_70 = &amp;(*_71)<br/>StorageLive(_72)<br/>_72 = std::option::Option::&lt;prices::GetPriceResult&gt;::None<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_34)<br/></td></tr><tr><td align="left">_74 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb35__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = ((*_74).5: u16)<br/></td></tr><tr><td align="left">_66 = lending_operations::refresh_reserve(move _67, move _70, move _72, move _73)</td></tr></table>>];
    bb36__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb37__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_76 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb38__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_65 as Continue).0: ())<br/>_64 = _80<br/>StorageDead(_80)<br/>_156 = discriminant(_65)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;(*_34)<br/></td></tr><tr><td align="left">_85 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb39__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb40__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_166 = discriminant(_65)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_84 = &amp;(*_85)<br/>StorageDead(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;mut (*_44)<br/></td></tr><tr><td align="left">_88 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _89)</td></tr></table>>];
    bb42__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_87 = &amp;mut (*_88)<br/>StorageDead(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;mut (*_54)<br/></td></tr><tr><td align="left">_91 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _92)</td></tr></table>>];
    bb43__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_90 = &amp;mut (*_91)<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>_93 = (_26.0: u64)<br/>StorageLive(_94)<br/>_94 = _2<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;((*_1).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_95 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Key&gt;::key(move _96)</td></tr></table>>];
    bb44__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageLive(_97)<br/>_97 = state::types::MaxReservesAsCollateralCheck::Perform<br/></td></tr><tr><td align="left">_83 = lending_operations::deposit_obligation_collateral(move _84, move _87, move _90, move _93, move _94, move _95, move _97)</td></tr></table>>];
    bb45__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb46__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_98 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb47__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_82 as Continue).0: ())<br/>_81 = _102<br/>StorageDead(_102)<br/>_158 = discriminant(_82)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_140 = const _<br/>_113 = &amp;(*_140)<br/>_112 = &amp;(*_113)<br/>_111 = move _112 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_112)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = &amp;_2<br/>_120 = &amp;(*_121)<br/></td></tr><tr><td align="left">_119 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _120)</td></tr></table>>];
    bb48__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_101)<br/>_101 = move _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb49__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>_164 = discriminant(_82)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = [move _119]<br/>StorageDead(_119)<br/>_117 = &amp;_118<br/>_116 = &amp;(*_117)<br/>_115 = move _116 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_110 = Arguments::&lt;'_&gt;::new_v1(move _111, move _115)</td></tr></table>>];
    bb51__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = format(move _110)</td></tr></table>>];
    bb52__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_113)<br/>_108 = move _109<br/>StorageDead(_109)<br/>_107 = &amp;_108<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::string::String as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb53__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_104 = &amp;(*_105)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_103 = solana_program::log::sol_log(move _104)</td></tr></table>>];
    bb54__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/></td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb55__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_141 = deref_copy ((*_1).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_186 = (((_141.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_126 = &amp;(*_186)<br/></td></tr><tr><td align="left">_125 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _126)</td></tr></table>>];
    bb56__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_145 = const true<br/>StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_142 = deref_copy ((*_1).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_187 = (((_142.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_128 = &amp;(*_187)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _128)</td></tr></table>>];
    bb57__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_144 = const true<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _130)</td></tr></table>>];
    bb58__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_143 = const true<br/>StorageDead(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;((*_1).6: anchor_lang::prelude::Program&lt;'_, anchor_spl::token::Token&gt;)<br/></td></tr><tr><td align="left">_131 = &lt;anchor_lang::prelude::Program&lt;'_, Token&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _132)</td></tr></table>>];
    bb59__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageLive(_133)<br/>_133 = _2<br/>_145 = const false<br/>_144 = const false<br/>_143 = const false<br/></td></tr><tr><td align="left">_124 = deposit_obligation_collateral_transfer(move _125, move _127, move _129, move _131, move _133)</td></tr></table>>];
    bb60__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>_143 = const false<br/>StorageDead(_129)<br/>_144 = const false<br/>StorageDead(_127)<br/>_145 = const false<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb61__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_134 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb62__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_123 as Continue).0: ())<br/>_122 = _138<br/>StorageDead(_138)<br/>_160 = discriminant(_123)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageLive(_139)<br/>_139 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _139)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb63__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = move ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_137)<br/>_137 = move _135<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb64__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>_162 = discriminant(_123)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb66__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb67__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb69__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb70__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb71__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb75__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb76__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb77__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb78__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb79__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb80__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb81__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb82__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb83__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_178 = discriminant(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb85__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">switchInt(_143)</td></tr></table>>];
    bb86__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_127)</td></tr></table>>];
    bb87__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">switchInt(_144)</td></tr></table>>];
    bb88__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb89__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">switchInt(_145)</td></tr></table>>];
    bb90__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left" balign="left">_179 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left" balign="left">_180 = discriminant(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left" balign="left">_181 = discriminant(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left" balign="left">_182 = discriminant(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left" balign="left">_183 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left" balign="left">_184 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_112 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left" balign="left">_185 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_112 -> bb1__0_112 [label="return"];
    bb1__0_112 -> bb2__0_112 [label="return"];
    bb2__0_112 -> bb3__0_112 [label="return"];
    bb3__0_112 -> bb4__0_112 [label="return"];
    bb3__0_112 -> bb81__0_112 [label="unwind"];
    bb4__0_112 -> bb5__0_112 [label="return"];
    bb4__0_112 -> bb80__0_112 [label="unwind"];
    bb5__0_112 -> bb6__0_112 [label="return"];
    bb5__0_112 -> bb80__0_112 [label="unwind"];
    bb6__0_112 -> bb7__0_112 [label="return"];
    bb6__0_112 -> bb79__0_112 [label="unwind"];
    bb7__0_112 -> bb8__0_112 [label="return"];
    bb7__0_112 -> bb79__0_112 [label="unwind"];
    bb8__0_112 -> bb9__0_112 [label="0"];
    bb8__0_112 -> bb11__0_112 [label="1"];
    bb8__0_112 -> bb10__0_112 [label="otherwise"];
    bb9__0_112 -> bb13__0_112 [label="return"];
    bb9__0_112 -> bb82__0_112 [label="unwind"];
    bb11__0_112 -> bb12__0_112 [label="return"];
    bb11__0_112 -> bb96__0_112 [label="unwind"];
    bb12__0_112 -> bb73__0_112 [label="return"];
    bb12__0_112 -> bb82__0_112 [label="unwind"];
    bb13__0_112 -> bb14__0_112 [label="return"];
    bb14__0_112 -> bb15__0_112 [label="return"];
    bb14__0_112 -> bb82__0_112 [label="unwind"];
    bb15__0_112 -> bb16__0_112 [label="0"];
    bb15__0_112 -> bb17__0_112 [label="1"];
    bb15__0_112 -> bb10__0_112 [label="otherwise"];
    bb16__0_112 -> bb19__0_112 [label="return"];
    bb17__0_112 -> bb18__0_112 [label="return"];
    bb17__0_112 -> bb95__0_112 [label="unwind"];
    bb18__0_112 -> bb72__0_112 [label=""];
    bb19__0_112 -> bb20__0_112 [label="return"];
    bb19__0_112 -> bb82__0_112 [label="unwind"];
    bb20__0_112 -> bb21__0_112 [label="0"];
    bb20__0_112 -> bb22__0_112 [label="1"];
    bb20__0_112 -> bb10__0_112 [label="otherwise"];
    bb21__0_112 -> bb24__0_112 [label="return"];
    bb21__0_112 -> bb78__0_112 [label="unwind"];
    bb22__0_112 -> bb23__0_112 [label="return"];
    bb22__0_112 -> bb94__0_112 [label="unwind"];
    bb23__0_112 -> bb71__0_112 [label=""];
    bb24__0_112 -> bb25__0_112 [label="return"];
    bb24__0_112 -> bb78__0_112 [label="unwind"];
    bb25__0_112 -> bb26__0_112 [label="0"];
    bb25__0_112 -> bb27__0_112 [label="1"];
    bb25__0_112 -> bb10__0_112 [label="otherwise"];
    bb26__0_112 -> bb29__0_112 [label="return"];
    bb26__0_112 -> bb77__0_112 [label="unwind"];
    bb27__0_112 -> bb28__0_112 [label="return"];
    bb27__0_112 -> bb93__0_112 [label="unwind"];
    bb28__0_112 -> bb70__0_112 [label=""];
    bb29__0_112 -> bb30__0_112 [label="return"];
    bb29__0_112 -> bb77__0_112 [label="unwind"];
    bb30__0_112 -> bb31__0_112 [label="0"];
    bb30__0_112 -> bb32__0_112 [label="1"];
    bb30__0_112 -> bb10__0_112 [label="otherwise"];
    bb31__0_112 -> bb34__0_112 [label="return"];
    bb31__0_112 -> bb76__0_112 [label="unwind"];
    bb32__0_112 -> bb33__0_112 [label="return"];
    bb32__0_112 -> bb92__0_112 [label="unwind"];
    bb33__0_112 -> bb69__0_112 [label=""];
    bb34__0_112 -> bb35__0_112 [label="return"];
    bb34__0_112 -> bb76__0_112 [label="unwind"];
    bb35__0_112 -> bb36__0_112 [label="return"];
    bb35__0_112 -> bb76__0_112 [label="unwind"];
    bb36__0_112 -> bb37__0_112 [label="return"];
    bb36__0_112 -> bb76__0_112 [label="unwind"];
    bb37__0_112 -> bb38__0_112 [label="0"];
    bb37__0_112 -> bb39__0_112 [label="1"];
    bb37__0_112 -> bb10__0_112 [label="otherwise"];
    bb38__0_112 -> bb41__0_112 [label="return"];
    bb38__0_112 -> bb76__0_112 [label="unwind"];
    bb39__0_112 -> bb40__0_112 [label="return"];
    bb39__0_112 -> bb91__0_112 [label="unwind"];
    bb40__0_112 -> bb68__0_112 [label=""];
    bb41__0_112 -> bb42__0_112 [label="return"];
    bb41__0_112 -> bb76__0_112 [label="unwind"];
    bb42__0_112 -> bb43__0_112 [label="return"];
    bb42__0_112 -> bb76__0_112 [label="unwind"];
    bb43__0_112 -> bb44__0_112 [label="return"];
    bb43__0_112 -> bb76__0_112 [label="unwind"];
    bb44__0_112 -> bb45__0_112 [label="return"];
    bb44__0_112 -> bb76__0_112 [label="unwind"];
    bb45__0_112 -> bb46__0_112 [label="return"];
    bb45__0_112 -> bb76__0_112 [label="unwind"];
    bb46__0_112 -> bb47__0_112 [label="0"];
    bb46__0_112 -> bb48__0_112 [label="1"];
    bb46__0_112 -> bb10__0_112 [label="otherwise"];
    bb47__0_112 -> bb50__0_112 [label="return"];
    bb47__0_112 -> bb76__0_112 [label="unwind"];
    bb48__0_112 -> bb49__0_112 [label="return"];
    bb48__0_112 -> bb90__0_112 [label="unwind"];
    bb49__0_112 -> bb68__0_112 [label=""];
    bb50__0_112 -> bb51__0_112 [label="return"];
    bb50__0_112 -> bb76__0_112 [label="unwind"];
    bb51__0_112 -> bb52__0_112 [label="return"];
    bb51__0_112 -> bb76__0_112 [label="unwind"];
    bb52__0_112 -> bb53__0_112 [label="return"];
    bb52__0_112 -> bb75__0_112 [label="unwind"];
    bb53__0_112 -> bb54__0_112 [label="return"];
    bb53__0_112 -> bb75__0_112 [label="unwind"];
    bb54__0_112 -> bb55__0_112 [label="return"];
    bb54__0_112 -> bb76__0_112 [label="unwind"];
    bb55__0_112 -> bb56__0_112 [label="return"];
    bb55__0_112 -> bb76__0_112 [label="unwind"];
    bb56__0_112 -> bb57__0_112 [label="return"];
    bb56__0_112 -> bb89__0_112 [label="unwind"];
    bb57__0_112 -> bb58__0_112 [label="return"];
    bb57__0_112 -> bb87__0_112 [label="unwind"];
    bb58__0_112 -> bb59__0_112 [label="return"];
    bb58__0_112 -> bb85__0_112 [label="unwind"];
    bb59__0_112 -> bb60__0_112 [label="return"];
    bb59__0_112 -> bb85__0_112 [label="unwind"];
    bb60__0_112 -> bb61__0_112 [label="return"];
    bb60__0_112 -> bb76__0_112 [label="unwind"];
    bb61__0_112 -> bb62__0_112 [label="0"];
    bb61__0_112 -> bb63__0_112 [label="1"];
    bb61__0_112 -> bb10__0_112 [label="otherwise"];
    bb62__0_112 -> bb65__0_112 [label="return"];
    bb62__0_112 -> bb77__0_112 [label="unwind"];
    bb63__0_112 -> bb64__0_112 [label="return"];
    bb63__0_112 -> bb83__0_112 [label="unwind"];
    bb64__0_112 -> bb68__0_112 [label=""];
    bb65__0_112 -> bb66__0_112 [label="return"];
    bb65__0_112 -> bb78__0_112 [label="unwind"];
    bb66__0_112 -> bb67__0_112 [label="return"];
    bb66__0_112 -> bb82__0_112 [label="unwind"];
    bb67__0_112 -> bb74__0_112 [label=""];
    bb68__0_112 -> bb69__0_112 [label="return"];
    bb68__0_112 -> bb77__0_112 [label="unwind"];
    bb69__0_112 -> bb70__0_112 [label="return"];
    bb69__0_112 -> bb78__0_112 [label="unwind"];
    bb70__0_112 -> bb71__0_112 [label="return"];
    bb70__0_112 -> bb82__0_112 [label="unwind"];
    bb71__0_112 -> bb72__0_112 [label=""];
    bb72__0_112 -> bb74__0_112 [label=""];
    bb73__0_112 -> bb74__0_112 [label=""];
    bb75__0_112 -> bb76__0_112 [label="return"];
    bb76__0_112 -> bb77__0_112 [label="return"];
    bb77__0_112 -> bb78__0_112 [label="return"];
    bb78__0_112 -> bb82__0_112 [label="return"];
    bb79__0_112 -> bb82__0_112 [label="return"];
    bb80__0_112 -> bb81__0_112 [label="return"];
    bb81__0_112 -> bb82__0_112 [label="return"];
    bb83__0_112 -> bb76__0_112 [label=""];
    bb84__0_112 -> bb87__0_112 [label="return"];
    bb85__0_112 -> bb87__0_112 [label="0"];
    bb85__0_112 -> bb84__0_112 [label="otherwise"];
    bb86__0_112 -> bb89__0_112 [label="return"];
    bb87__0_112 -> bb89__0_112 [label="0"];
    bb87__0_112 -> bb86__0_112 [label="otherwise"];
    bb88__0_112 -> bb76__0_112 [label="return"];
    bb89__0_112 -> bb76__0_112 [label="0"];
    bb89__0_112 -> bb88__0_112 [label="otherwise"];
    bb90__0_112 -> bb76__0_112 [label=""];
    bb91__0_112 -> bb76__0_112 [label=""];
    bb92__0_112 -> bb77__0_112 [label=""];
    bb93__0_112 -> bb78__0_112 [label=""];
    bb94__0_112 -> bb82__0_112 [label=""];
    bb95__0_112 -> bb82__0_112 [label=""];
    bb96__0_112 -> bb79__0_112 [label=""];
}
