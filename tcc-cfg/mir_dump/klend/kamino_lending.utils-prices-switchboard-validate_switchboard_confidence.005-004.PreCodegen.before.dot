digraph Mir_0_2635 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_switchboard_confidence(_1: u128, _2: u32, _3: u128, _4: u32, _5: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: &amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased;<br align="left"/>let _7: u32;<br align="left"/>let mut _8: (&amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased, u32);<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u32;<br align="left"/>let mut _11: u32;<br align="left"/>let mut _12: &amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased;<br align="left"/>let mut _13: &amp;ReErased FnDef(DefId(2:30162 ~ core[c321]::num::{impl#10}::checked_mul), [true]);<br align="left"/>let _14: &amp;ReErased FnDef(DefId(2:30162 ~ core[c321]::num::{impl#10}::checked_mul), [true]);<br align="left"/>let _15: FnDef(DefId(2:30162 ~ core[c321]::num::{impl#10}::checked_mul), [true]);<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _18: u32;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: &amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased;<br align="left"/>let mut _21: &amp;ReErased FnDef(DefId(2:30164 ~ core[c321]::num::{impl#10}::checked_div), [true]);<br align="left"/>let _22: &amp;ReErased FnDef(DefId(2:30164 ~ core[c321]::num::{impl#10}::checked_div), [true]);<br align="left"/>let _23: FnDef(DefId(2:30164 ~ core[c321]::num::{impl#10}::checked_div), [true]);<br align="left"/>let mut _24: u32;<br align="left"/>let mut _25: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _26: u32;<br align="left"/>let mut _27: u32;<br align="left"/>let _28: u128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u128, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _32: u32;<br align="left"/>let mut _33: Closure(DefId(0:2636 ~ kamino_lending[6389]::utils::prices::switchboard::validate_switchboard_confidence::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _38: u128;<br align="left"/>let _39: u128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u128, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _43: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: Closure(DefId(0:2637 ~ kamino_lending[6389]::utils::prices::switchboard::validate_switchboard_confidence::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((u128,)) -&gt; std::option::Option&lt;u128&gt;, []), (&amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased, &amp;ReErased u128)]);<br align="left"/>let mut _48: &amp;ReErased dyn [Binder(Trait(std::ops::Fn&lt;(u128, u128)&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [(u128, u128)], term: Term::Ty(std::option::Option&lt;u128&gt;) }), [])] + ReErased;<br align="left"/>let mut _49: &amp;ReErased u128;<br align="left"/>let mut _50: Closure(DefId(0:2638 ~ kamino_lending[6389]::utils::prices::switchboard::validate_switchboard_confidence::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _55: u128;<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: u128;<br align="left"/>let mut _58: u128;<br align="left"/>let _59: ();<br align="left"/>let mut _60: &amp;ReErased str;<br align="left"/>let _61: &amp;ReErased str;<br align="left"/>let mut _62: &amp;ReErased std::string::String;<br align="left"/>let _63: &amp;ReErased std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let _65: std::string::String;<br align="left"/>let mut _66: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _69: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _70: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _74: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _75: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased u128;<br align="left"/>let _77: &amp;ReErased u128;<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased u32;<br align="left"/>let _80: &amp;ReErased u32;<br align="left"/>let mut _81: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased u128;<br align="left"/>let _83: &amp;ReErased u128;<br align="left"/>let mut _84: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased u32;<br align="left"/>let _86: &amp;ReErased u32;<br align="left"/>let mut _87: anchor_lang::error::Error;<br align="left"/>let mut _88: anchor_lang::error::AnchorError;<br align="left"/>let mut _89: std::string::String;<br align="left"/>let mut _90: &amp;ReErased LendingError;<br align="left"/>let _91: LendingError;<br align="left"/>let mut _92: u32;<br align="left"/>let mut _93: LendingError;<br align="left"/>let mut _94: std::string::String;<br align="left"/>let mut _95: &amp;ReErased LendingError;<br align="left"/>let _96: LendingError;<br align="left"/>let mut _97: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _98: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _99: anchor_lang::error::Source;<br align="left"/>let mut _100: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _101: ();<br align="left"/>let mut _102: &amp;ReErased LendingError;<br align="left"/>let mut _103: &amp;ReErased LendingError;<br align="left"/>let mut _104: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _105: &amp;ReErased FnDef(DefId(2:30162 ~ core[c321]::num::{impl#10}::checked_mul), [true]);<br align="left"/>let mut _106: &amp;ReErased FnDef(DefId(2:30164 ~ core[c321]::num::{impl#10}::checked_div), [true]);<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>debug price_mantissa =&gt; _1;<br align="left"/>debug price_scale =&gt; _2;<br align="left"/>debug stdev_mantissa =&gt; _3;<br align="left"/>debug stdev_scale =&gt; _4;<br align="left"/>debug oracle_confidence_factor =&gt; _5;<br align="left"/>debug scale_op =&gt; _6;<br align="left"/>debug scale_diff =&gt; _7;<br align="left"/>debug scaling_factor =&gt; _28;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug stdev_x_confidence_factor_scaled =&gt; _39;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug res =&gt; _65;<br align="left"/>>;
    bb0__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = _4<br/>_9 = Ge(move _10, move _11)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_105 = const _<br/>_14 = &amp;(*_105)<br/>_13 = &amp;(*_14)<br/>_12 = move _13 as &amp;dyn std::ops::Fn(u128, u128) -&gt; std::option::Option&lt;u128&gt; (PointerCoercion(Unsize))<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>_19 = _4<br/></td></tr><tr><td align="left">_17 = core::num::&lt;impl u32&gt;::checked_sub(move _18, move _19)</td></tr></table>>];
    bb2__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = std::option::Option::&lt;u32&gt;::unwrap(move _17)</td></tr></table>>];
    bb3__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_8 = (move _12, move _16)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_106 = const _<br/>_22 = &amp;(*_106)<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;dyn std::ops::Fn(u128, u128) -&gt; std::option::Option&lt;u128&gt; (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _4<br/>StorageLive(_27)<br/>_27 = _2<br/></td></tr><tr><td align="left">_25 = core::num::&lt;impl u32&gt;::checked_sub(move _26, move _27)</td></tr></table>>];
    bb5__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = std::option::Option::&lt;u32&gt;::unwrap(move _25)</td></tr></table>>];
    bb6__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_8 = (move _20, move _24)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_6)<br/>_6 = (_8.0: &amp;dyn std::ops::Fn(u128, u128) -&gt; std::option::Option&lt;u128&gt;)<br/>StorageLive(_7)<br/>_7 = (_8.1: u32)<br/>StorageDead(_8)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _7<br/></td></tr><tr><td align="left">_31 = core::num::&lt;impl u128&gt;::checked_pow(const 10_u128, move _32)</td></tr></table>>];
    bb8__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_33)<br/>_33 = {closure@programs\klend\src\utils\prices\switchboard.rs:124:21: 124:23}<br/></td></tr><tr><td align="left">_30 = std::option::Option::&lt;u128&gt;::ok_or_else::&lt;anchor_lang::error::Error, {closure@programs\klend\src\utils\prices\switchboard.rs:124:21: 124:23}&gt;(move _31, move _33)</td></tr></table>>];
    bb9__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u128, anchor_lang::error::Error&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb10__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb11__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_29 as Continue).0: u128)<br/>_28 = _38<br/>StorageDead(_38)<br/>_107 = discriminant(_29)<br/>StorageDead(_29)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _3<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _5<br/></td></tr><tr><td align="left">_45 = &lt;u64 as Into&lt;u128&gt;&gt;::into(move _46)</td></tr></table>>];
    bb12__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb14__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_113 = discriminant(_29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = core::num::&lt;impl u128&gt;::checked_mul(move _44, move _45)</td></tr></table>>];
    bb16__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;(*_6)<br/>StorageLive(_49)<br/>_49 = &amp;_28<br/>_47 = {closure@programs\klend\src\utils\prices\switchboard.rs:130:19: 130:22} { scale_op: move _48, scaling_factor: move _49 }<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_42 = std::option::Option::&lt;u128&gt;::and_then::&lt;u128, {closure@programs\klend\src\utils\prices\switchboard.rs:130:19: 130:22}&gt;(move _43, move _47)</td></tr></table>>];
    bb17__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_43)<br/>StorageLive(_50)<br/>_50 = {closure@programs\klend\src\utils\prices\switchboard.rs:131:21: 131:23}<br/></td></tr><tr><td align="left">_41 = std::option::Option::&lt;u128&gt;::ok_or_else::&lt;anchor_lang::error::Error, {closure@programs\klend\src\utils\prices\switchboard.rs:131:21: 131:23}&gt;(move _42, move _50)</td></tr></table>>];
    bb18__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u128, anchor_lang::error::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb19__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_51 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb20__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_40 as Continue).0: u128)<br/>_39 = _55<br/>StorageDead(_55)<br/>_109 = discriminant(_40)<br/>StorageDead(_40)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _39<br/>StorageLive(_58)<br/>_58 = _1<br/>_56 = Ge(move _57, move _58)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb21__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb22__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_111 = discriminant(_40)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_104 = const _<br/>_69 = &amp;(*_104)<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_1<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _76)</td></tr></table>>];
    bb24__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_2<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _79)</td></tr></table>>];
    bb25__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_3<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _82)</td></tr></table>>];
    bb26__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_4<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _85)</td></tr></table>>];
    bb27__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_74 = [move _75, move _78, move _81, move _84]<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_66 = Arguments::&lt;'_&gt;::new_v1(move _67, move _71)</td></tr></table>>];
    bb28__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = format(move _66)</td></tr></table>>];
    bb29__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>_64 = move _65<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::string::String as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb30__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_59 = solana_program::log::sol_log(move _60)</td></tr></table>>];
    bb31__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb32__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_103 = const _<br/>_90 = &amp;(*_103)<br/></td></tr><tr><td align="left">_89 = LendingError::name(move _90)</td></tr></table>>];
    bb33__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = LendingError::PriceConfidenceTooWide<br/></td></tr><tr><td align="left">_92 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _93)</td></tr></table>>];
    bb34__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_102 = const _<br/>_95 = &amp;(*_102)<br/></td></tr><tr><td align="left">_94 = &lt;LendingError as ToString&gt;::to_string(move _95)</td></tr></table>>];
    bb35__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 139_u32 }<br/>_98 = anchor_lang::error::ErrorOrigin::Source(move _99)<br/>StorageDead(_99)<br/>_97 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _98)<br/>StorageDead(_98)<br/>StorageLive(_100)<br/>_100 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_88 = anchor_lang::error::AnchorError { error_name: move _89, error_code_number: move _92, error_msg: move _94, error_origin: move _97, compared_values: move _100 }<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _88)</td></tr></table>>];
    bb36__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _87)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_101)<br/>_101 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _101)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_39)<br/>StorageDead(_28)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb42__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb43__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_115 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_116 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2635 -> bb4__0_2635 [label="0"];
    bb0__0_2635 -> bb1__0_2635 [label="otherwise"];
    bb1__0_2635 -> bb2__0_2635 [label="return"];
    bb2__0_2635 -> bb3__0_2635 [label="return"];
    bb3__0_2635 -> bb7__0_2635 [label=""];
    bb4__0_2635 -> bb5__0_2635 [label="return"];
    bb5__0_2635 -> bb6__0_2635 [label="return"];
    bb6__0_2635 -> bb7__0_2635 [label=""];
    bb7__0_2635 -> bb8__0_2635 [label="return"];
    bb8__0_2635 -> bb9__0_2635 [label="return"];
    bb9__0_2635 -> bb10__0_2635 [label="return"];
    bb9__0_2635 -> bb43__0_2635 [label="unwind"];
    bb10__0_2635 -> bb11__0_2635 [label="0"];
    bb10__0_2635 -> bb13__0_2635 [label="1"];
    bb10__0_2635 -> bb12__0_2635 [label="otherwise"];
    bb11__0_2635 -> bb15__0_2635 [label="return"];
    bb13__0_2635 -> bb14__0_2635 [label="return"];
    bb13__0_2635 -> bb45__0_2635 [label="unwind"];
    bb14__0_2635 -> bb39__0_2635 [label=""];
    bb15__0_2635 -> bb16__0_2635 [label="return"];
    bb16__0_2635 -> bb17__0_2635 [label="return"];
    bb17__0_2635 -> bb18__0_2635 [label="return"];
    bb18__0_2635 -> bb19__0_2635 [label="return"];
    bb18__0_2635 -> bb43__0_2635 [label="unwind"];
    bb19__0_2635 -> bb20__0_2635 [label="0"];
    bb19__0_2635 -> bb21__0_2635 [label="1"];
    bb19__0_2635 -> bb12__0_2635 [label="otherwise"];
    bb20__0_2635 -> bb37__0_2635 [label="0"];
    bb20__0_2635 -> bb23__0_2635 [label="otherwise"];
    bb21__0_2635 -> bb22__0_2635 [label="return"];
    bb21__0_2635 -> bb44__0_2635 [label="unwind"];
    bb22__0_2635 -> bb39__0_2635 [label=""];
    bb23__0_2635 -> bb24__0_2635 [label="return"];
    bb24__0_2635 -> bb25__0_2635 [label="return"];
    bb25__0_2635 -> bb26__0_2635 [label="return"];
    bb26__0_2635 -> bb27__0_2635 [label="return"];
    bb27__0_2635 -> bb28__0_2635 [label="return"];
    bb28__0_2635 -> bb29__0_2635 [label="return"];
    bb29__0_2635 -> bb30__0_2635 [label="return"];
    bb29__0_2635 -> bb42__0_2635 [label="unwind"];
    bb30__0_2635 -> bb31__0_2635 [label="return"];
    bb30__0_2635 -> bb42__0_2635 [label="unwind"];
    bb31__0_2635 -> bb32__0_2635 [label="return"];
    bb31__0_2635 -> bb43__0_2635 [label="unwind"];
    bb32__0_2635 -> bb33__0_2635 [label="return"];
    bb33__0_2635 -> bb34__0_2635 [label="return"];
    bb33__0_2635 -> bb41__0_2635 [label="unwind"];
    bb34__0_2635 -> bb35__0_2635 [label="return"];
    bb34__0_2635 -> bb41__0_2635 [label="unwind"];
    bb35__0_2635 -> bb36__0_2635 [label="return"];
    bb35__0_2635 -> bb43__0_2635 [label="unwind"];
    bb36__0_2635 -> bb38__0_2635 [label=""];
    bb37__0_2635 -> bb38__0_2635 [label=""];
    bb38__0_2635 -> bb40__0_2635 [label=""];
    bb39__0_2635 -> bb40__0_2635 [label=""];
    bb41__0_2635 -> bb43__0_2635 [label="return"];
    bb42__0_2635 -> bb43__0_2635 [label="return"];
    bb44__0_2635 -> bb43__0_2635 [label=""];
    bb45__0_2635 -> bb43__0_2635 [label=""];
}
