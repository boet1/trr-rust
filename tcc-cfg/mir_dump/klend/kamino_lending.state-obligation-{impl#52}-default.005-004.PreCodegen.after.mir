// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:763:51: 763:58>::default` after PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:763:51: 763:58>::default() -> obligation::ObligationOrder {
    let mut _0: state::obligation::ObligationOrder;
    let mut _1: u128;
    let mut _2: u128;
    let mut _3: u16;
    let mut _4: u16;
    let mut _5: u8;
    let mut _6: u8;
    let mut _7: [u8; 10];
    let mut _8: [u128; 5];

    bb0: {
        StorageLive(_1);
        _1 = <u128 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u16 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u16 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u8 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u8 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <[u8; 10] as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <[u128; 5] as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        _0 = obligation::ObligationOrder { condition_threshold_sf: move _1, opportunity_parameter_sf: move _2, min_execution_bonus_bps: move _3, max_execution_bonus_bps: move _4, condition_type: move _5, opportunity_type: move _6, padding1: move _7, padding2: move _8 };
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
