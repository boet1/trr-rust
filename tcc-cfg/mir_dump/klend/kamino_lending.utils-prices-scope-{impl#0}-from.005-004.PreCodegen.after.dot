digraph Mir_0_2590 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn prices::scope::&lt;impl From&lt;scope_types::Price&gt; for prices::types::Price&lt;u64&gt;&gt;::from(_1: scope_types::Price) -&gt; utils::prices::types::Price&lt;u64&gt;<br align="left"/>let mut _2: u64;<br align="left"/>let mut _3: u32;<br align="left"/>let mut _4: std::result::Result&lt;u32, std::num::TryFromIntError&gt;;<br align="left"/>let mut _5: u64;<br align="left"/>debug price =&gt; _1;<br align="left"/>>;
    bb0__0_2590 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = (_1.0: u64)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (_1.1: u64)<br/></td></tr><tr><td align="left">_4 = &lt;u64 as TryInto&lt;u32&gt;&gt;::try_into(move _5)</td></tr></table>>];
    bb1__0_2590 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = std::result::Result::&lt;u32, TryFromIntError&gt;::unwrap(move _4)</td></tr></table>>];
    bb2__0_2590 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_0 = prices::types::Price::&lt;u64&gt; { value: move _2, exp: move _3 }<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2590 -> bb1__0_2590 [label="return"];
    bb1__0_2590 -> bb2__0_2590 [label="return"];
}
