// MIR for `for_object` after PreCodegen

fn for_object(_1: &mut H) -> ConfigItemUpdater<'_, H, (), (), (), (), ()> {
    debug target => _1;
    let mut _0: lending_market::config_items::ConfigItemUpdater<'_, H, (), (), (), (), ()>;
    let mut _2: &mut H;
    let mut _3: std::string::String;
    let mut _4: &str;
    let _5: &str;
    let mut _6: ();
    let mut _7: ();
    let mut _8: ();
    let mut _9: ();
    let mut _10: std::marker::PhantomData<()>;

    bb0: {
        StorageLive(_2);
        _2 = &mut (*_1);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "<unnamed>";
        _4 = &(*_5);
        _3 = <str as ToString>::to_string(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_6);
        _6 = ();
        StorageLive(_7);
        _7 = ();
        StorageLive(_8);
        _8 = ();
        StorageLive(_9);
        _9 = ();
        StorageLive(_10);
        _10 = PhantomData::<()>;
        _0 = ConfigItemUpdater::<'_, H, (), (), (), (), ()> { target: move _2, name: move _3, setter: move _7, getter: move _6, validator: move _8, renderer: move _9, value_type_phantom: move _10 };
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_5);
        return;
    }
}
