digraph Mir_0_4142 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_init_referrer_state_and_short_url::process::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:4142 ~ kamino_lending[6389]::handlers::handler_init_referrer_state_and_short_url::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((char,)) -&gt; bool, []), ()]), _2: char) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased char;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: char;<br align="left"/>let mut _7: char;<br align="left"/>debug char =&gt; _2;<br align="left"/>>;
    bb0__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;_2<br/></td></tr><tr><td align="left">_3 = char::methods::&lt;impl char&gt;::is_ascii_alphanumeric(move _4)</td></tr></table>>];
    bb1__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_5 = Eq(move _6, const '_')<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb4__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_0 = Eq(move _7, const '-')<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_4142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4142 -> bb1__0_4142 [label="return"];
    bb1__0_4142 -> bb3__0_4142 [label="0"];
    bb1__0_4142 -> bb2__0_4142 [label="otherwise"];
    bb2__0_4142 -> bb4__0_4142 [label=""];
    bb3__0_4142 -> bb5__0_4142 [label="0"];
    bb3__0_4142 -> bb4__0_4142 [label="otherwise"];
    bb4__0_4142 -> bb6__0_4142 [label=""];
    bb5__0_4142 -> bb6__0_4142 [label=""];
}
