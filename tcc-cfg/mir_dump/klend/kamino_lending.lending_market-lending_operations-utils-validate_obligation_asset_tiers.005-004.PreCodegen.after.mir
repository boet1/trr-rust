// MIR for `validate_obligation_asset_tiers` after PreCodegen

fn validate_obligation_asset_tiers(_1: &obligation::Obligation) -> std::result::Result<(), anchor_lang::error::Error> {
    debug obligation => _1;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _2: std::vec::Vec<state::reserve::AssetTier>;
    let mut _3: &state::obligation::Obligation;
    let mut _5: &state::obligation::Obligation;
    let mut _7: std::iter::Filter<std::slice::Iter<'_, state::reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3453:21: 3453:28}>;
    let mut _8: std::slice::Iter<'_, state::reserve::AssetTier>;
    let mut _9: &[state::reserve::AssetTier];
    let _10: &[state::reserve::AssetTier];
    let mut _11: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _12: {closure@programs\klend\src\lending_market\lending_operations.rs:3453:21: 3453:28};
    let mut _14: std::iter::Filter<std::slice::Iter<'_, state::reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3457:21: 3457:28}>;
    let mut _15: std::slice::Iter<'_, state::reserve::AssetTier>;
    let mut _16: &[state::reserve::AssetTier];
    let _17: &[state::reserve::AssetTier];
    let mut _18: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _19: {closure@programs\klend\src\lending_market\lending_operations.rs:3457:21: 3457:28};
    let _20: ();
    let mut _21: bool;
    let mut _22: usize;
    let mut _23: !;
    let _24: ();
    let mut _25: &str;
    let _26: &str;
    let mut _27: anchor_lang::error::Error;
    let mut _28: LendingError;
    let _29: ();
    let mut _30: bool;
    let mut _31: usize;
    let mut _32: !;
    let _33: ();
    let mut _34: &str;
    let _35: &str;
    let mut _36: anchor_lang::error::Error;
    let mut _37: LendingError;
    let _38: ();
    let mut _39: bool;
    let mut _40: usize;
    let mut _41: bool;
    let mut _42: usize;
    let mut _43: !;
    let _44: ();
    let mut _45: &str;
    let _46: &str;
    let mut _47: anchor_lang::error::Error;
    let mut _48: LendingError;
    let _49: ();
    let mut _50: bool;
    let mut _51: usize;
    let mut _52: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _53: bool;
    let mut _54: usize;
    let mut _55: !;
    let _56: ();
    let mut _57: &str;
    let _58: &str;
    let mut _59: anchor_lang::error::Error;
    let mut _60: LendingError;
    let _61: ();
    let mut _62: bool;
    let mut _63: usize;
    let mut _64: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _65: bool;
    let mut _66: usize;
    let mut _67: !;
    let _68: ();
    let mut _69: &str;
    let _70: &str;
    let mut _71: anchor_lang::error::Error;
    let mut _72: LendingError;
    let _73: ();
    let mut _74: bool;
    let mut _75: usize;
    let mut _76: std::iter::Filter<std::slice::Iter<'_, state::reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28}>;
    let mut _77: std::slice::Iter<'_, state::reserve::AssetTier>;
    let mut _78: &[state::reserve::AssetTier];
    let _79: &[state::reserve::AssetTier];
    let mut _80: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _81: {closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28};
    let mut _82: !;
    let _83: ();
    let mut _84: &str;
    let _85: &str;
    let mut _86: anchor_lang::error::Error;
    let mut _87: LendingError;
    let _88: ();
    let mut _89: bool;
    let mut _90: usize;
    let mut _91: std::iter::Filter<std::slice::Iter<'_, state::reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3497:21: 3497:28}>;
    let mut _92: std::slice::Iter<'_, state::reserve::AssetTier>;
    let mut _93: &[state::reserve::AssetTier];
    let _94: &[state::reserve::AssetTier];
    let mut _95: &std::vec::Vec<state::reserve::AssetTier>;
    let mut _96: {closure@programs\klend\src\lending_market\lending_operations.rs:3497:21: 3497:28};
    let mut _97: !;
    let _98: ();
    let mut _99: &str;
    let _100: &str;
    let mut _101: anchor_lang::error::Error;
    let mut _102: LendingError;
    let mut _103: ();
    scope 1 {
        debug deposit_tiers => _2;
        let _4: std::vec::Vec<state::reserve::AssetTier>;
        scope 2 {
            debug borrow_tiers => _4;
            let _6: usize;
            scope 3 {
                debug count_isolated_deposits => _6;
                let _13: usize;
                scope 4 {
                    debug count_isolated_borrows => _13;
                }
            }
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = &(*_1);
        _2 = obligation::Obligation::get_deposit_asset_tiers(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        _4 = obligation::Obligation::get_borrows_asset_tiers(move _5) -> [return: bb2, unwind: bb65];
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &_2;
        _10 = <Vec<reserve::AssetTier> as Deref>::deref(move _11) -> [return: bb3, unwind: bb64];
    }

    bb3: {
        _9 = &(*_10);
        StorageDead(_11);
        _8 = core::slice::<impl [reserve::AssetTier]>::iter(move _9) -> [return: bb4, unwind: bb64];
    }

    bb4: {
        StorageDead(_9);
        StorageLive(_12);
        _12 = {closure@programs\klend\src\lending_market\lending_operations.rs:3453:21: 3453:28};
        _7 = <std::slice::Iter<'_, reserve::AssetTier> as Iterator>::filter::<{closure@programs\klend\src\lending_market\lending_operations.rs:3453:21: 3453:28}>(move _8, move _12) -> [return: bb5, unwind: bb64];
    }

    bb5: {
        StorageDead(_12);
        StorageDead(_8);
        _6 = <Filter<std::slice::Iter<'_, reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3453:21: 3453:28}> as Iterator>::count(move _7) -> [return: bb6, unwind: bb64];
    }

    bb6: {
        StorageDead(_7);
        StorageDead(_10);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &_4;
        _17 = <Vec<reserve::AssetTier> as Deref>::deref(move _18) -> [return: bb7, unwind: bb64];
    }

    bb7: {
        _16 = &(*_17);
        StorageDead(_18);
        _15 = core::slice::<impl [reserve::AssetTier]>::iter(move _16) -> [return: bb8, unwind: bb64];
    }

    bb8: {
        StorageDead(_16);
        StorageLive(_19);
        _19 = {closure@programs\klend\src\lending_market\lending_operations.rs:3457:21: 3457:28};
        _14 = <std::slice::Iter<'_, reserve::AssetTier> as Iterator>::filter::<{closure@programs\klend\src\lending_market\lending_operations.rs:3457:21: 3457:28}>(move _15, move _19) -> [return: bb9, unwind: bb64];
    }

    bb9: {
        StorageDead(_19);
        StorageDead(_15);
        _13 = <Filter<std::slice::Iter<'_, reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3457:21: 3457:28}> as Iterator>::count(move _14) -> [return: bb10, unwind: bb64];
    }

    bb10: {
        StorageDead(_14);
        StorageDead(_17);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = _6;
        _21 = Gt(move _22, const 1_usize);
        switchInt(move _21) -> [0: bb14, otherwise: bb11];
    }

    bb11: {
        StorageDead(_22);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = const "Cannot deposit more than one isolated collateral tier asset";
        _25 = &(*_26);
        _24 = solana_program::log::sol_log(move _25) -> [return: bb12, unwind: bb64];
    }

    bb12: {
        StorageDead(_25);
        StorageDead(_26);
        StorageDead(_24);
        StorageLive(_27);
        StorageLive(_28);
        _28 = LendingError::IsolatedAssetTierViolation;
        _27 = <LendingError as Into<anchor_lang::error::Error>>::into(move _28) -> [return: bb13, unwind: bb64];
    }

    bb13: {
        StorageDead(_28);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _27);
        StorageDead(_27);
        StorageDead(_21);
        StorageDead(_20);
        goto -> bb60;
    }

    bb14: {
        StorageDead(_22);
        _20 = const ();
        StorageDead(_21);
        StorageDead(_20);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = _13;
        _30 = Gt(move _31, const 1_usize);
        switchInt(move _30) -> [0: bb16, otherwise: bb15];
    }

    bb15: {
        StorageDead(_31);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        _35 = const "Cannot borrow more than one isolated debt tier asset";
        _34 = &(*_35);
        _33 = solana_program::log::sol_log(move _34) -> [return: bb17, unwind: bb64];
    }

    bb16: {
        StorageDead(_31);
        _29 = const ();
        StorageDead(_30);
        StorageDead(_29);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = _6;
        _39 = Gt(move _40, const 0_usize);
        switchInt(move _39) -> [0: bb20, otherwise: bb19];
    }

    bb17: {
        StorageDead(_34);
        StorageDead(_35);
        StorageDead(_33);
        StorageLive(_36);
        StorageLive(_37);
        _37 = LendingError::IsolatedAssetTierViolation;
        _36 = <LendingError as Into<anchor_lang::error::Error>>::into(move _37) -> [return: bb18, unwind: bb64];
    }

    bb18: {
        StorageDead(_37);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _36);
        StorageDead(_36);
        StorageDead(_30);
        StorageDead(_29);
        goto -> bb60;
    }

    bb19: {
        StorageDead(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = _13;
        _41 = Gt(move _42, const 0_usize);
        switchInt(move _41) -> [0: bb24, otherwise: bb21];
    }

    bb20: {
        StorageDead(_40);
        goto -> bb25;
    }

    bb21: {
        StorageDead(_42);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = const "Cannot borrow an isolated tier asset while depositing and isolated tier asset";
        _45 = &(*_46);
        _44 = solana_program::log::sol_log(move _45) -> [return: bb22, unwind: bb64];
    }

    bb22: {
        StorageDead(_45);
        StorageDead(_46);
        StorageDead(_44);
        StorageLive(_47);
        StorageLive(_48);
        _48 = LendingError::IsolatedAssetTierViolation;
        _47 = <LendingError as Into<anchor_lang::error::Error>>::into(move _48) -> [return: bb23, unwind: bb64];
    }

    bb23: {
        StorageDead(_48);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _47);
        StorageDead(_47);
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_38);
        goto -> bb60;
    }

    bb24: {
        StorageDead(_42);
        goto -> bb25;
    }

    bb25: {
        _38 = const ();
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_38);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = &_2;
        _51 = Vec::<reserve::AssetTier>::len(move _52) -> [return: bb26, unwind: bb64];
    }

    bb26: {
        StorageDead(_52);
        _50 = Gt(move _51, const 1_usize);
        switchInt(move _50) -> [0: bb32, otherwise: bb27];
    }

    bb27: {
        StorageDead(_51);
        StorageLive(_53);
        StorageLive(_54);
        _54 = _6;
        _53 = Gt(move _54, const 0_usize);
        switchInt(move _53) -> [0: bb31, otherwise: bb28];
    }

    bb28: {
        StorageDead(_54);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = const "Cannot deposit isolated collateral tier asset with other assets";
        _57 = &(*_58);
        _56 = solana_program::log::sol_log(move _57) -> [return: bb29, unwind: bb64];
    }

    bb29: {
        StorageDead(_57);
        StorageDead(_58);
        StorageDead(_56);
        StorageLive(_59);
        StorageLive(_60);
        _60 = LendingError::IsolatedAssetTierViolation;
        _59 = <LendingError as Into<anchor_lang::error::Error>>::into(move _60) -> [return: bb30, unwind: bb64];
    }

    bb30: {
        StorageDead(_60);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _59);
        StorageDead(_59);
        StorageDead(_53);
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb60;
    }

    bb31: {
        StorageDead(_54);
        goto -> bb33;
    }

    bb32: {
        StorageDead(_51);
        goto -> bb33;
    }

    bb33: {
        _49 = const ();
        StorageDead(_53);
        StorageDead(_50);
        StorageDead(_49);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &_4;
        _63 = Vec::<reserve::AssetTier>::len(move _64) -> [return: bb34, unwind: bb64];
    }

    bb34: {
        StorageDead(_64);
        _62 = Gt(move _63, const 1_usize);
        switchInt(move _62) -> [0: bb40, otherwise: bb35];
    }

    bb35: {
        StorageDead(_63);
        StorageLive(_65);
        StorageLive(_66);
        _66 = _13;
        _65 = Gt(move _66, const 0_usize);
        switchInt(move _65) -> [0: bb39, otherwise: bb36];
    }

    bb36: {
        StorageDead(_66);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _70 = const "Cannot borrow isolated debt tier asset with other assets";
        _69 = &(*_70);
        _68 = solana_program::log::sol_log(move _69) -> [return: bb37, unwind: bb64];
    }

    bb37: {
        StorageDead(_69);
        StorageDead(_70);
        StorageDead(_68);
        StorageLive(_71);
        StorageLive(_72);
        _72 = LendingError::IsolatedAssetTierViolation;
        _71 = <LendingError as Into<anchor_lang::error::Error>>::into(move _72) -> [return: bb38, unwind: bb64];
    }

    bb38: {
        StorageDead(_72);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _71);
        StorageDead(_71);
        StorageDead(_65);
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb60;
    }

    bb39: {
        StorageDead(_66);
        goto -> bb41;
    }

    bb40: {
        StorageDead(_63);
        goto -> bb41;
    }

    bb41: {
        _61 = const ();
        StorageDead(_65);
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &_2;
        _79 = <Vec<reserve::AssetTier> as Deref>::deref(move _80) -> [return: bb42, unwind: bb64];
    }

    bb42: {
        _78 = &(*_79);
        StorageDead(_80);
        _77 = core::slice::<impl [reserve::AssetTier]>::iter(move _78) -> [return: bb43, unwind: bb64];
    }

    bb43: {
        StorageDead(_78);
        StorageLive(_81);
        _81 = {closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28};
        _76 = <std::slice::Iter<'_, reserve::AssetTier> as Iterator>::filter::<{closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28}>(move _77, move _81) -> [return: bb44, unwind: bb64];
    }

    bb44: {
        StorageDead(_81);
        StorageDead(_77);
        _75 = <Filter<std::slice::Iter<'_, reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28}> as Iterator>::count(move _76) -> [return: bb45, unwind: bb64];
    }

    bb45: {
        StorageDead(_76);
        _74 = Gt(move _75, const 0_usize);
        switchInt(move _74) -> [0: bb49, otherwise: bb46];
    }

    bb46: {
        StorageDead(_79);
        StorageDead(_75);
        StorageLive(_83);
        StorageLive(_84);
        StorageLive(_85);
        _85 = const "Cannot deposit an isolated debt tier asset";
        _84 = &(*_85);
        _83 = solana_program::log::sol_log(move _84) -> [return: bb47, unwind: bb64];
    }

    bb47: {
        StorageDead(_84);
        StorageDead(_85);
        StorageDead(_83);
        StorageLive(_86);
        StorageLive(_87);
        _87 = LendingError::IsolatedAssetTierViolation;
        _86 = <LendingError as Into<anchor_lang::error::Error>>::into(move _87) -> [return: bb48, unwind: bb64];
    }

    bb48: {
        StorageDead(_87);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _86);
        StorageDead(_86);
        StorageDead(_74);
        StorageDead(_73);
        goto -> bb60;
    }

    bb49: {
        StorageDead(_79);
        StorageDead(_75);
        _73 = const ();
        StorageDead(_74);
        StorageDead(_73);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        _95 = &_4;
        _94 = <Vec<reserve::AssetTier> as Deref>::deref(move _95) -> [return: bb50, unwind: bb64];
    }

    bb50: {
        _93 = &(*_94);
        StorageDead(_95);
        _92 = core::slice::<impl [reserve::AssetTier]>::iter(move _93) -> [return: bb51, unwind: bb64];
    }

    bb51: {
        StorageDead(_93);
        StorageLive(_96);
        _96 = {closure@programs\klend\src\lending_market\lending_operations.rs:3497:21: 3497:28};
        _91 = <std::slice::Iter<'_, reserve::AssetTier> as Iterator>::filter::<{closure@programs\klend\src\lending_market\lending_operations.rs:3497:21: 3497:28}>(move _92, move _96) -> [return: bb52, unwind: bb64];
    }

    bb52: {
        StorageDead(_96);
        StorageDead(_92);
        _90 = <Filter<std::slice::Iter<'_, reserve::AssetTier>, {closure@programs\klend\src\lending_market\lending_operations.rs:3497:21: 3497:28}> as Iterator>::count(move _91) -> [return: bb53, unwind: bb64];
    }

    bb53: {
        StorageDead(_91);
        _89 = Gt(move _90, const 0_usize);
        switchInt(move _89) -> [0: bb57, otherwise: bb54];
    }

    bb54: {
        StorageDead(_94);
        StorageDead(_90);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        _100 = const "Cannot borrow an isolated collateral tier asset";
        _99 = &(*_100);
        _98 = solana_program::log::sol_log(move _99) -> [return: bb55, unwind: bb64];
    }

    bb55: {
        StorageDead(_99);
        StorageDead(_100);
        StorageDead(_98);
        StorageLive(_101);
        StorageLive(_102);
        _102 = LendingError::IsolatedAssetTierViolation;
        _101 = <LendingError as Into<anchor_lang::error::Error>>::into(move _102) -> [return: bb56, unwind: bb64];
    }

    bb56: {
        StorageDead(_102);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _101);
        StorageDead(_101);
        StorageDead(_89);
        StorageDead(_88);
        goto -> bb60;
    }

    bb57: {
        StorageDead(_94);
        StorageDead(_90);
        _88 = const ();
        StorageDead(_89);
        StorageDead(_88);
        StorageLive(_103);
        _103 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _103);
        StorageDead(_103);
        StorageDead(_13);
        StorageDead(_6);
        drop(_4) -> [return: bb58, unwind: bb65];
    }

    bb58: {
        StorageDead(_4);
        drop(_2) -> [return: bb59, unwind: bb66];
    }

    bb59: {
        StorageDead(_2);
        goto -> bb63;
    }

    bb60: {
        StorageDead(_13);
        StorageDead(_6);
        drop(_4) -> [return: bb61, unwind: bb65];
    }

    bb61: {
        StorageDead(_4);
        drop(_2) -> [return: bb62, unwind: bb66];
    }

    bb62: {
        StorageDead(_2);
        goto -> bb63;
    }

    bb63: {
        return;
    }

    bb64 (cleanup): {
        drop(_4) -> [return: bb65, unwind terminate(cleanup)];
    }

    bb65 (cleanup): {
        drop(_2) -> [return: bb66, unwind terminate(cleanup)];
    }

    bb66 (cleanup): {
        resume;
    }
}
