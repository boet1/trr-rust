// MIR for `referral::<impl at programs\klend\src\state\referral.rs:34:33: 34:40>::default` before PreCodegen

fn referral::<impl at programs\klend\src\state\referral.rs:34:33: 34:40>::default() -> referral::ReferrerTokenState {
    let mut _0: state::referral::ReferrerTokenState;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: u128;
    let mut _4: u128;
    let mut _5: u64;
    let mut _6: [u64; 31];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u64 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <[u64; 31] as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        _0 = referral::ReferrerTokenState { referrer: move _1, mint: move _2, amount_unclaimed_sf: move _3, amount_cumulative_sf: move _4, bump: move _5, padding: move _6 };
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
