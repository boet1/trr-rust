// MIR for `refresh_ix_utils::<impl at programs\klend\src\utils\refresh_ix_utils.rs:17:17: 17:22>::clone` after PreCodegen

fn refresh_ix_utils::<impl at programs\klend\src\utils\refresh_ix_utils.rs:17:17: 17:22>::clone(_1: &RequiredIx) -> RequiredIx {
    debug self => _1;
    let mut _0: utils::refresh_ix_utils::RequiredIx;
    let mut _2: utils::refresh_ix_utils::RequiredIxType;
    let mut _3: &utils::refresh_ix_utils::RequiredIxType;
    let _4: &utils::refresh_ix_utils::RequiredIxType;
    let mut _5: std::vec::Vec<(anchor_lang::prelude::Pubkey, usize)>;
    let mut _6: &std::vec::Vec<(anchor_lang::prelude::Pubkey, usize)>;
    let _7: &std::vec::Vec<(anchor_lang::prelude::Pubkey, usize)>;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: utils::refresh_ix_utils::RequiredIxType);
        _3 = &(*_4);
        _2 = <RequiredIxType as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: std::vec::Vec<(anchor_lang::prelude::Pubkey, usize)>);
        _6 = &(*_7);
        _5 = <Vec<(anchor_lang::prelude::Pubkey, usize)> as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        _0 = RequiredIx { kind: move _2, accounts: move _5 };
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
