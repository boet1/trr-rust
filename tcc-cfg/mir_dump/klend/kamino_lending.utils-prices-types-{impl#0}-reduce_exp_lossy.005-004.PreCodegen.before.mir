// MIR for `prices::types::<impl at programs\klend\src\utils\prices\types.rs:24:1: 26:42>::reduce_exp_lossy` before PreCodegen

fn prices::types::<impl at programs\klend\src\utils\prices\types.rs:24:1: 26:42>::reduce_exp_lossy(_1: prices::types::Price<T>, _2: u32) -> std::option::Option<prices::types::Price<T>> {
    debug self => _1;
    debug target_exp => _2;
    let mut _0: std::option::Option<utils::prices::types::Price<T>>;
    let _3: ();
    let mut _4: bool;
    let mut _5: u32;
    let mut _6: u32;
    let mut _7: !;
    let mut _8: utils::prices::types::Price<T>;
    let mut _9: utils::prices::types::Price<T>;
    let mut _10: u32;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = (_1.1: u32);
        StorageLive(_6);
        _6 = _2;
        _4 = Le(move _5, move _6);
        switchInt(move _4) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_8);
        _8 = _1;
        _0 = std::option::Option::<prices::types::Price<T>>::Some(move _8);
        StorageDead(_8);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb4;
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_5);
        _3 = const ();
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_9);
        _9 = _1;
        StorageLive(_10);
        _10 = _2;
        _0 = prices::types::Price::<T>::to_adjusted_exp(move _9, move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        StorageDead(_9);
        goto -> bb4;
    }

    bb4: {
        return;
    }
}
