digraph Mir_0_2535 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_twap_in_tolerance(_1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _3: &amp;ReErased state::token_info::TokenInfo) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: u64;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: !;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let _13: ();<br align="left"/>let mut _14: &amp;ReErased str;<br align="left"/>let _15: &amp;ReErased str;<br align="left"/>let mut _16: &amp;ReErased std::string::String;<br align="left"/>let _17: &amp;ReErased std::string::String;<br align="left"/>let _18: std::string::String;<br align="left"/>let _19: std::string::String;<br align="left"/>let mut _20: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _22: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _23: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _24: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _28: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _29: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _34: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _35: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _37: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _38: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased u64;<br align="left"/>let _40: &amp;ReErased u64;<br align="left"/>let mut _41: anchor_lang::error::Error;<br align="left"/>let mut _42: LendingError;<br align="left"/>let mut _43: ();<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>debug price =&gt; _1;<br align="left"/>debug twap =&gt; _2;<br align="left"/>debug token_info =&gt; _3;<br align="left"/>debug acceptable_twap_tolerance_bps =&gt; _4;<br align="left"/>debug token_span =&gt; _11;<br align="left"/>debug res =&gt; _19;<br align="left"/>>;
    bb0__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = ((*_3).2: u64)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_9 = _4<br/></td></tr><tr><td align="left">_6 = is_within_tolerance(move _7, move _8, move _9)</td></tr></table>>];
    bb1__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb2__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_43)<br/>_43 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _43)<br/>StorageDead(_43)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/></td></tr><tr><td align="left">_11 = token_info::TokenInfo::symbol(move _12)</td></tr></table>>];
    bb4__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_44 = const _<br/>_23 = &amp;(*_44)<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_11<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _30)</td></tr></table>>];
    bb5__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_1<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _33)</td></tr></table>>];
    bb6__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;_2<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _36)</td></tr></table>>];
    bb7__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_4<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _39)</td></tr></table>>];
    bb8__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_28 = [move _29, move _32, move _35, move _38]<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_20 = Arguments::&lt;'_&gt;::new_v1(move _21, move _25)</td></tr></table>>];
    bb9__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = format(move _20)</td></tr></table>>];
    bb10__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>_18 = move _19<br/>StorageDead(_19)<br/>_17 = &amp;_18<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::string::String as Deref&gt;::deref(move _16)</td></tr></table>>];
    bb11__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_14 = &amp;(*_15)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = solana_program::log::sol_log(move _14)</td></tr></table>>];
    bb12__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb13__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = LendingError::PriceTooDivergentFromTwap<br/></td></tr><tr><td align="left">_41 = &lt;LendingError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _42)</td></tr></table>>];
    bb14__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _41)<br/>StorageDead(_41)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb16__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb17__0_2535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2535 -> bb1__0_2535 [label="return"];
    bb1__0_2535 -> bb3__0_2535 [label="0"];
    bb1__0_2535 -> bb2__0_2535 [label="otherwise"];
    bb2__0_2535 -> bb15__0_2535 [label=""];
    bb3__0_2535 -> bb4__0_2535 [label="return"];
    bb4__0_2535 -> bb5__0_2535 [label="return"];
    bb5__0_2535 -> bb6__0_2535 [label="return"];
    bb6__0_2535 -> bb7__0_2535 [label="return"];
    bb7__0_2535 -> bb8__0_2535 [label="return"];
    bb8__0_2535 -> bb9__0_2535 [label="return"];
    bb9__0_2535 -> bb10__0_2535 [label="return"];
    bb10__0_2535 -> bb11__0_2535 [label="return"];
    bb10__0_2535 -> bb16__0_2535 [label="unwind"];
    bb11__0_2535 -> bb12__0_2535 [label="return"];
    bb11__0_2535 -> bb16__0_2535 [label="unwind"];
    bb12__0_2535 -> bb13__0_2535 [label="return"];
    bb12__0_2535 -> bb17__0_2535 [label="unwind"];
    bb13__0_2535 -> bb14__0_2535 [label="return"];
    bb14__0_2535 -> bb15__0_2535 [label=""];
    bb16__0_2535 -> bb17__0_2535 [label="return"];
}
