digraph Mir_0_1381 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_deposit_obligation_invariants(_1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: &amp;ReErased state::obligation::Obligation, _3: &amp;ReErased state::reserve::Reserve, _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _7: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _14: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _15: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _16: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _20: ();<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased i32;<br align="left"/>let _24: i32;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _27: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _44: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _47: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _48: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased str;<br align="left"/>let _52: &amp;ReErased &amp;ReErased str;<br align="left"/>let _53: &amp;ReErased str;<br align="left"/>let mut _54: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _55: anchor_lang::error::Error;<br align="left"/>let mut _56: anchor_lang::error::AnchorError;<br align="left"/>let mut _57: std::string::String;<br align="left"/>let mut _58: &amp;ReErased LendingError;<br align="left"/>let _59: LendingError;<br align="left"/>let mut _60: u32;<br align="left"/>let mut _61: LendingError;<br align="left"/>let mut _62: std::string::String;<br align="left"/>let mut _63: &amp;ReErased LendingError;<br align="left"/>let _64: LendingError;<br align="left"/>let mut _65: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _66: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _67: anchor_lang::error::Source;<br align="left"/>let mut _68: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _74: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _75: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _76: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _77: !;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased str;<br align="left"/>let _80: &amp;ReErased str;<br align="left"/>let mut _81: &amp;ReErased std::string::String;<br align="left"/>let _82: &amp;ReErased std::string::String;<br align="left"/>let _83: std::string::String;<br align="left"/>let _84: std::string::String;<br align="left"/>let mut _85: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _87: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _88: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _89: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _90: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _91: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _92: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _93: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _94: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _96: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _97: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _99: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased &amp;ReErased str;<br align="left"/>let _101: &amp;ReErased &amp;ReErased str;<br align="left"/>let _102: &amp;ReErased str;<br align="left"/>let mut _103: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _104: anchor_lang::error::Error;<br align="left"/>let mut _105: anchor_lang::error::AnchorError;<br align="left"/>let mut _106: std::string::String;<br align="left"/>let mut _107: &amp;ReErased LendingError;<br align="left"/>let _108: LendingError;<br align="left"/>let mut _109: u32;<br align="left"/>let mut _110: LendingError;<br align="left"/>let mut _111: std::string::String;<br align="left"/>let mut _112: &amp;ReErased LendingError;<br align="left"/>let _113: LendingError;<br align="left"/>let mut _114: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _115: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _116: anchor_lang::error::Source;<br align="left"/>let mut _117: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _118: ();<br align="left"/>let mut _119: &amp;ReErased LendingError;<br align="left"/>let mut _120: &amp;ReErased LendingError;<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _122: &amp;ReErased LendingError;<br align="left"/>let mut _123: &amp;ReErased LendingError;<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _125: &amp;ReErased i32;<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug previous_collateral_asset_mv =&gt; _4;<br align="left"/>debug min_accepted_net_value =&gt; _5;<br align="left"/>debug asset_mv =&gt; _6;<br align="left"/>debug new_total_deposited_mv =&gt; _9;<br align="left"/>debug new_collateral_asset_mv =&gt; _13;<br align="left"/>debug new_ltv =&gt; _16;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug res =&gt; _84;<br align="left"/>>;
    bb0__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_3)<br/>StorageLive(_8)<br/>_8 = _1<br/></td></tr><tr><td align="left">_6 = calculate_market_value_from_liquidity_amount(move _7, move _8)</td></tr></table>>];
    bb1__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_2).6: u128)<br/></td></tr><tr><td align="left">_10 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _11)</td></tr></table>>];
    bb2__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>_12 = _6<br/></td></tr><tr><td align="left">_9 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _10, move _12)</td></tr></table>>];
    bb3__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _4<br/>StorageLive(_15)<br/>_15 = _6<br/></td></tr><tr><td align="left">_13 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _14, move _15)</td></tr></table>>];
    bb4__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_2).8: u128)<br/></td></tr><tr><td align="left">_17 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _18)</td></tr></table>>];
    bb5__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = _9<br/></td></tr><tr><td align="left">_16 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _17, move _19)</td></tr></table>>];
    bb6__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_13<br/>StorageLive(_23)<br/>_125 = const _<br/>_23 = &amp;(*_125)<br/></td></tr><tr><td align="left">_21 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _22, move _23)</td></tr></table>>];
    bb7__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb8__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_13<br/>StorageLive(_27)<br/>_27 = &amp;_5<br/></td></tr><tr><td align="left">_25 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _26, move _27)</td></tr></table>>];
    bb9__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb10__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_121 = const _<br/>_39 = &amp;(*_121)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;_13<br/></td></tr><tr><td align="left">_48 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _49)</td></tr></table>>];
    bb11__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _46)</td></tr></table>>];
    bb12__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_3)<br/></td></tr><tr><td align="left">_53 = reserve::Reserve::token_symbol(move _54)</td></tr></table>>];
    bb13__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _51)</td></tr></table>>];
    bb14__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_44 = [move _45, move _50]<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_v1(move _37, move _41)</td></tr></table>>];
    bb15__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb16__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::string::String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb17__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb18__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb19__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_120 = const _<br/>_58 = &amp;(*_120)<br/></td></tr><tr><td align="left">_57 = LendingError::name(move _58)</td></tr></table>>];
    bb20__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = LendingError::NetValueRemainingTooSmall<br/></td></tr><tr><td align="left">_60 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _61)</td></tr></table>>];
    bb21__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_119 = const _<br/>_63 = &amp;(*_119)<br/></td></tr><tr><td align="left">_62 = &lt;LendingError as ToString&gt;::to_string(move _63)</td></tr></table>>];
    bb22__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2785_u32 }<br/>_66 = anchor_lang::error::ErrorOrigin::Source(move _67)<br/>StorageDead(_67)<br/>_65 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _66)<br/>StorageDead(_66)<br/>StorageLive(_68)<br/>_68 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_56 = anchor_lang::error::AnchorError { error_name: move _57, error_code_number: move _60, error_msg: move _62, error_origin: move _65, compared_values: move _68 }<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _56)</td></tr></table>>];
    bb23__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _55)<br/>StorageDead(_55)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_20 = const ()<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = ((*_2).6: u128)<br/>_70 = Ne(move _71, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb27__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_16<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_2)<br/></td></tr><tr><td align="left">_75 = obligation::Obligation::loan_to_value(move _76)</td></tr></table>>];
    bb28__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_74 = &amp;_75<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_72 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _73, move _74)</td></tr></table>>];
    bb30__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb31__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_124 = const _<br/>_88 = &amp;(*_124)<br/>_87 = &amp;(*_88)<br/>_86 = move _87 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_16<br/></td></tr><tr><td align="left">_97 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _98)</td></tr></table>>];
    bb32__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _95)</td></tr></table>>];
    bb33__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;(*_3)<br/></td></tr><tr><td align="left">_102 = reserve::Reserve::token_symbol(move _103)</td></tr></table>>];
    bb34__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = &amp;_102<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _100)</td></tr></table>>];
    bb35__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_93 = [move _94, move _99]<br/>StorageDead(_99)<br/>StorageDead(_94)<br/>_92 = &amp;_93<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_85 = Arguments::&lt;'_&gt;::new_v1(move _86, move _90)</td></tr></table>>];
    bb36__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = format(move _85)</td></tr></table>>];
    bb37__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_88)<br/>_83 = move _84<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::string::String as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb38__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_79 = &amp;(*_80)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_78 = solana_program::log::sol_log(move _79)</td></tr></table>>];
    bb39__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb40__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_123 = const _<br/>_107 = &amp;(*_123)<br/></td></tr><tr><td align="left">_106 = LendingError::name(move _107)</td></tr></table>>];
    bb41__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = LendingError::WorseLtvBlocked<br/></td></tr><tr><td align="left">_109 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _110)</td></tr></table>>];
    bb42__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_122 = const _<br/>_112 = &amp;(*_122)<br/></td></tr><tr><td align="left">_111 = &lt;LendingError as ToString&gt;::to_string(move _112)</td></tr></table>>];
    bb43__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2797_u32 }<br/>_115 = anchor_lang::error::ErrorOrigin::Source(move _116)<br/>StorageDead(_116)<br/>_114 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _115)<br/>StorageDead(_115)<br/>StorageLive(_117)<br/>_117 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_105 = anchor_lang::error::AnchorError { error_name: move _106, error_code_number: move _109, error_msg: move _111, error_origin: move _114, compared_values: move _117 }<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _105)</td></tr></table>>];
    bb44__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _104)<br/>StorageDead(_104)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>_69 = const ()<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_118)<br/>_118 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _118)<br/>StorageDead(_118)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb49__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_106)</td></tr></table>>];
    bb50__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb51__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb52__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb53__0_1381 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1381 -> bb1__0_1381 [label="return"];
    bb1__0_1381 -> bb2__0_1381 [label="return"];
    bb2__0_1381 -> bb3__0_1381 [label="return"];
    bb3__0_1381 -> bb4__0_1381 [label="return"];
    bb4__0_1381 -> bb5__0_1381 [label="return"];
    bb5__0_1381 -> bb6__0_1381 [label="return"];
    bb6__0_1381 -> bb7__0_1381 [label="return"];
    bb7__0_1381 -> bb25__0_1381 [label="0"];
    bb7__0_1381 -> bb8__0_1381 [label="otherwise"];
    bb8__0_1381 -> bb9__0_1381 [label="return"];
    bb9__0_1381 -> bb24__0_1381 [label="0"];
    bb9__0_1381 -> bb10__0_1381 [label="otherwise"];
    bb10__0_1381 -> bb11__0_1381 [label="return"];
    bb11__0_1381 -> bb12__0_1381 [label="return"];
    bb12__0_1381 -> bb13__0_1381 [label="return"];
    bb13__0_1381 -> bb14__0_1381 [label="return"];
    bb14__0_1381 -> bb15__0_1381 [label="return"];
    bb15__0_1381 -> bb16__0_1381 [label="return"];
    bb16__0_1381 -> bb17__0_1381 [label="return"];
    bb16__0_1381 -> bb52__0_1381 [label="unwind"];
    bb17__0_1381 -> bb18__0_1381 [label="return"];
    bb17__0_1381 -> bb52__0_1381 [label="unwind"];
    bb18__0_1381 -> bb19__0_1381 [label="return"];
    bb18__0_1381 -> bb53__0_1381 [label="unwind"];
    bb19__0_1381 -> bb20__0_1381 [label="return"];
    bb20__0_1381 -> bb21__0_1381 [label="return"];
    bb20__0_1381 -> bb51__0_1381 [label="unwind"];
    bb21__0_1381 -> bb22__0_1381 [label="return"];
    bb21__0_1381 -> bb51__0_1381 [label="unwind"];
    bb22__0_1381 -> bb23__0_1381 [label="return"];
    bb22__0_1381 -> bb53__0_1381 [label="unwind"];
    bb23__0_1381 -> bb47__0_1381 [label=""];
    bb24__0_1381 -> bb26__0_1381 [label=""];
    bb25__0_1381 -> bb26__0_1381 [label=""];
    bb26__0_1381 -> bb28__0_1381 [label="0"];
    bb26__0_1381 -> bb27__0_1381 [label="otherwise"];
    bb27__0_1381 -> bb29__0_1381 [label="return"];
    bb28__0_1381 -> bb46__0_1381 [label=""];
    bb29__0_1381 -> bb30__0_1381 [label="return"];
    bb30__0_1381 -> bb45__0_1381 [label="0"];
    bb30__0_1381 -> bb31__0_1381 [label="otherwise"];
    bb31__0_1381 -> bb32__0_1381 [label="return"];
    bb32__0_1381 -> bb33__0_1381 [label="return"];
    bb33__0_1381 -> bb34__0_1381 [label="return"];
    bb34__0_1381 -> bb35__0_1381 [label="return"];
    bb35__0_1381 -> bb36__0_1381 [label="return"];
    bb36__0_1381 -> bb37__0_1381 [label="return"];
    bb37__0_1381 -> bb38__0_1381 [label="return"];
    bb37__0_1381 -> bb50__0_1381 [label="unwind"];
    bb38__0_1381 -> bb39__0_1381 [label="return"];
    bb38__0_1381 -> bb50__0_1381 [label="unwind"];
    bb39__0_1381 -> bb40__0_1381 [label="return"];
    bb39__0_1381 -> bb53__0_1381 [label="unwind"];
    bb40__0_1381 -> bb41__0_1381 [label="return"];
    bb41__0_1381 -> bb42__0_1381 [label="return"];
    bb41__0_1381 -> bb49__0_1381 [label="unwind"];
    bb42__0_1381 -> bb43__0_1381 [label="return"];
    bb42__0_1381 -> bb49__0_1381 [label="unwind"];
    bb43__0_1381 -> bb44__0_1381 [label="return"];
    bb43__0_1381 -> bb53__0_1381 [label="unwind"];
    bb44__0_1381 -> bb47__0_1381 [label=""];
    bb45__0_1381 -> bb46__0_1381 [label=""];
    bb46__0_1381 -> bb48__0_1381 [label=""];
    bb47__0_1381 -> bb48__0_1381 [label=""];
    bb49__0_1381 -> bb53__0_1381 [label="return"];
    bb50__0_1381 -> bb53__0_1381 [label="return"];
    bb51__0_1381 -> bb53__0_1381 [label="return"];
    bb52__0_1381 -> bb53__0_1381 [label="return"];
}
