// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::as_u64` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::as_u64(_1: &uint_types::U128) -> u64 {
    debug self => _1;
    let mut _0: u64;
    let _2: &[u64; 2];
    let _3: ();
    let mut _4: bool;
    let mut _5: &utils::fraction::uint_types::U128;
    let mut _6: !;
    let _7: !;
    let mut _8: std::fmt::Arguments<'_>;
    let mut _9: &[&str];
    let mut _10: &[&str; 1];
    let _11: &[&str; 1];
    let _12: [&str; 1];
    let _13: usize;
    let mut _14: usize;
    let mut _15: bool;
    scope 1 {
        debug arr => _2;
        let mut _16: &[&str; 1];
    }

    bb0: {
        StorageLive(_2);
        _2 = &((*_1).0: [u64; 2]);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        _4 = uint_types::U128::fits_word(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _4) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        _3 = const ();
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_13);
        _13 = const 0_usize;
        _14 = Len((*_2));
        _15 = Lt(_13, _14);
        assert(move _15, "index out of bounds: the length is {} but the index is {}", move _14, _13) -> [success: bb5, unwind continue];
    }

    bb3: {
        StorageDead(_5);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _16 = const _;
        _11 = &(*_16);
        _10 = &(*_11);
        _9 = move _10 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_10);
        _8 = Arguments::<'_>::new_const(move _9) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_9);
        _7 = panic_fmt(move _8) -> unwind continue;
    }

    bb5: {
        _0 = (*_2)[_13];
        StorageDead(_2);
        StorageDead(_13);
        return;
    }
}
