// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:460:3: 460:55>::mul_assign` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:460:3: 460:55>::mul_assign(_1: &mut uint_types::U128, _2: i8) -> () {
    debug self => _1;
    debug other => _2;
    let mut _0: ();
    let _3: utils::fraction::uint_types::U128;
    let mut _4: utils::fraction::uint_types::U128;
    let mut _5: u64;
    let mut _6: i8;
    let mut _7: utils::fraction::uint_types::U128;
    scope 1 {
        debug result => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = (*_1);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _2;
        _5 = move _6 as u64 (IntToInt);
        StorageDead(_6);
        _3 = <uint_types::U128 as std::ops::Mul<u64>>::mul(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_7);
        _7 = _3;
        (*_1) = move _7;
        _0 = const ();
        StorageDead(_7);
        StorageDead(_3);
        return;
    }
}
