// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:806:1: 806:23>::new` before PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:806:1: 806:23>::new(_1: NewReserveCollateralParams) -> ReserveCollateral {
    debug params => _1;
    let mut _0: state::reserve::ReserveCollateral;
    let _2: anchor_lang::prelude::Pubkey;
    let _3: anchor_lang::prelude::Pubkey;
    let _4: u64;
    let mut _5: anchor_lang::prelude::Pubkey;
    let mut _6: u64;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: [u128; 32];
    let mut _9: [u128; 32];
    scope 1 {
        debug mint_pubkey => _2;
        debug supply_vault => _3;
        debug initial_collateral_supply => _4;
    }

    bb0: {
        StorageLive(_2);
        _2 = (_1.0: anchor_lang::prelude::Pubkey);
        StorageLive(_3);
        _3 = (_1.1: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        _4 = (_1.2: u64);
        StorageLive(_5);
        _5 = _2;
        StorageLive(_6);
        _6 = _4;
        StorageLive(_7);
        _7 = _3;
        StorageLive(_8);
        _8 = [const 0_u128; 32];
        StorageLive(_9);
        _9 = [const 0_u128; 32];
        _0 = ReserveCollateral { mint_pubkey: move _5, mint_total_supply: move _6, supply_vault: move _7, padding1: move _8, padding2: move _9 };
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
