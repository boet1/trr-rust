// MIR for `state::<impl at programs\klend\src\state\mod.rs:146:61: 146:66>::clone` before PreCodegen

fn state::<impl at programs\klend\src\state\mod.rs:146:61: 146:66>::clone(_1: &state::UpdateLendingMarketConfigValue) -> state::UpdateLendingMarketConfigValue {
    debug self => _1;
    let mut _0: state::UpdateLendingMarketConfigValue;
    let mut _2: isize;
    let _3: &bool;
    let mut _4: bool;
    let mut _5: &bool;
    let _6: &u8;
    let mut _7: u8;
    let mut _8: &u8;
    let _9: &[u8; 8];
    let mut _10: [u8; 8];
    let mut _11: &[u8; 8];
    let _12: &u16;
    let mut _13: u16;
    let mut _14: &u16;
    let _15: &u64;
    let mut _16: u64;
    let mut _17: &u64;
    let _18: &u128;
    let mut _19: u128;
    let mut _20: &u128;
    let _21: &anchor_lang::prelude::Pubkey;
    let mut _22: anchor_lang::prelude::Pubkey;
    let mut _23: &anchor_lang::prelude::Pubkey;
    let _24: &state::lending_market::ElevationGroup;
    let mut _25: state::lending_market::ElevationGroup;
    let mut _26: &state::lending_market::ElevationGroup;
    let _27: &[u8; 32];
    let mut _28: [u8; 32];
    let mut _29: &[u8; 32];
    scope 1 {
        debug __self_0 => _3;
    }
    scope 2 {
        debug __self_0 => _6;
    }
    scope 3 {
        debug __self_0 => _9;
    }
    scope 4 {
        debug __self_0 => _12;
    }
    scope 5 {
        debug __self_0 => _15;
    }
    scope 6 {
        debug __self_0 => _18;
    }
    scope 7 {
        debug __self_0 => _21;
    }
    scope 8 {
        debug __self_0 => _24;
    }
    scope 9 {
        debug __self_0 => _27;
    }

    bb0: {
        _2 = discriminant((*_1));
        switchInt(move _2) -> [0: bb3, 1: bb5, 2: bb7, 3: bb9, 4: bb11, 5: bb13, 6: bb15, 7: bb17, 8: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_27);
        _27 = &(((*_1) as Name).0: [u8; 32]);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &(*_27);
        _28 = <[u8; 32] as Clone>::clone(move _29) -> [return: bb19, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_3);
        _3 = &(((*_1) as Bool).0: bool);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_3);
        _4 = <bool as Clone>::clone(move _5) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_5);
        _0 = state::UpdateLendingMarketConfigValue::Bool(move _4);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb20;
    }

    bb5: {
        StorageLive(_6);
        _6 = &(((*_1) as U8).0: u8);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &(*_6);
        _7 = <u8 as Clone>::clone(move _8) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_8);
        _0 = state::UpdateLendingMarketConfigValue::U8(move _7);
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb20;
    }

    bb7: {
        StorageLive(_9);
        _9 = &(((*_1) as U8Array).0: [u8; 8]);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &(*_9);
        _10 = <[u8; 8] as Clone>::clone(move _11) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_11);
        _0 = state::UpdateLendingMarketConfigValue::U8Array(move _10);
        StorageDead(_10);
        StorageDead(_9);
        goto -> bb20;
    }

    bb9: {
        StorageLive(_12);
        _12 = &(((*_1) as U16).0: u16);
        StorageLive(_13);
        StorageLive(_14);
        _14 = &(*_12);
        _13 = <u16 as Clone>::clone(move _14) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_14);
        _0 = state::UpdateLendingMarketConfigValue::U16(move _13);
        StorageDead(_13);
        StorageDead(_12);
        goto -> bb20;
    }

    bb11: {
        StorageLive(_15);
        _15 = &(((*_1) as U64).0: u64);
        StorageLive(_16);
        StorageLive(_17);
        _17 = &(*_15);
        _16 = <u64 as Clone>::clone(move _17) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_17);
        _0 = state::UpdateLendingMarketConfigValue::U64(move _16);
        StorageDead(_16);
        StorageDead(_15);
        goto -> bb20;
    }

    bb13: {
        StorageLive(_18);
        _18 = &(((*_1) as U128).0: u128);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &(*_18);
        _19 = <u128 as Clone>::clone(move _20) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_20);
        _0 = state::UpdateLendingMarketConfigValue::U128(move _19);
        StorageDead(_19);
        StorageDead(_18);
        goto -> bb20;
    }

    bb15: {
        StorageLive(_21);
        _21 = &(((*_1) as Pubkey).0: anchor_lang::prelude::Pubkey);
        StorageLive(_22);
        StorageLive(_23);
        _23 = &(*_21);
        _22 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _23) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_23);
        _0 = state::UpdateLendingMarketConfigValue::Pubkey(move _22);
        StorageDead(_22);
        StorageDead(_21);
        goto -> bb20;
    }

    bb17: {
        StorageLive(_24);
        _24 = &(((*_1) as ElevationGroup).0: state::lending_market::ElevationGroup);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &(*_24);
        _25 = <state::lending_market::ElevationGroup as Clone>::clone(move _26) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_26);
        _0 = state::UpdateLendingMarketConfigValue::ElevationGroup(move _25);
        StorageDead(_25);
        StorageDead(_24);
        goto -> bb20;
    }

    bb19: {
        StorageDead(_29);
        _0 = state::UpdateLendingMarketConfigValue::Name(move _28);
        StorageDead(_28);
        StorageDead(_27);
        goto -> bb20;
    }

    bb20: {
        return;
    }
}
