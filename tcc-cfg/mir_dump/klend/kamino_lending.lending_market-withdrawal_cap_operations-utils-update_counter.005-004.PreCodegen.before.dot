digraph Mir_0_1415 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_counter(_1: &amp;ReErased mut state::reserve::WithdrawalCaps, _2: u64, _3: lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction, _4: lending_market::withdrawal_cap_operations::utils::WithdrawalCapOverflowAction) -&gt; std::result::Result&lt;(), LendingError&gt;<br align="left"/>let mut _5: isize;<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: i64;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: Closure(DefId(0:1416 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _19: i64;<br align="left"/>let mut _20: ();<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _24: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _28: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _29: std::result::Result&lt;i64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: Closure(DefId(0:1417 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]);<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _36: i64;<br align="left"/>let mut _37: Closure(DefId(0:1418 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), (&amp;ReErased state::reserve::WithdrawalCaps, &amp;ReErased u64)]);<br align="left"/>let mut _38: &amp;ReErased state::reserve::WithdrawalCaps;<br align="left"/>let mut _39: &amp;ReErased u64;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: ();<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: Closure(DefId(0:1419 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]);<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _59: i64;<br align="left"/>let mut _60: ();<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _64: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _68: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _69: std::result::Result&lt;i64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: Closure(DefId(0:1420 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#4}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]);<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _76: i64;<br align="left"/>let mut _77: Closure(DefId(0:1421 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#5}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), (&amp;ReErased state::reserve::WithdrawalCaps, &amp;ReErased u64)]);<br align="left"/>let mut _78: &amp;ReErased state::reserve::WithdrawalCaps;<br align="left"/>let mut _79: &amp;ReErased u64;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _84: i64;<br align="left"/>let mut _85: ();<br align="left"/>debug caps =&gt; _1;<br align="left"/>debug requested_amount =&gt; _2;<br align="left"/>debug action =&gt; _3;<br align="left"/>debug overflow_action =&gt; _4;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>>;
    bb0__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_5 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_46 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb2__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb4__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = ((*_1).1: i64)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _2<br/></td></tr><tr><td align="left">_29 = &lt;u64 as TryInto&lt;i64&gt;&gt;::try_into(move _30)</td></tr></table>>];
    bb5__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_1).1: i64)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _2<br/></td></tr><tr><td align="left">_12 = &lt;u64 as TryInto&lt;i64&gt;&gt;::try_into(move _13)</td></tr></table>>];
    bb6__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>_14 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:56:38: 56:41}<br/></td></tr><tr><td align="left">_11 = std::result::Result::&lt;i64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:56:38: 56:41}&gt;(move _12, move _14)</td></tr></table>>];
    bb7__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb8__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_15 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb9__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_10 as Continue).0: i64)<br/>_9 = _19<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_7 = core::num::&lt;impl i64&gt;::saturating_add(move _8, move _9)</td></tr></table>>];
    bb10__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb11__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>((*_1).1: i64) = move _7<br/>StorageDead(_7)<br/>StorageDead(_10)<br/>StorageLive(_20)<br/>_20 = ()<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Ok(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:66:42: 66:45}<br/></td></tr><tr><td align="left">_28 = std::result::Result::&lt;i64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:66:42: 66:45}&gt;(move _29, move _31)</td></tr></table>>];
    bb14__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb15__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_27 as Continue).0: i64)<br/>_26 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_24 = core::num::&lt;impl i64&gt;::checked_add(move _25, move _26)</td></tr></table>>];
    bb17__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_1)<br/>StorageLive(_39)<br/>_39 = &amp;_2<br/>_37 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:68:37: 68:39} { caps: move _38, requested_amount: move _39 }<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_23 = std::option::Option::&lt;i64&gt;::ok_or_else::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:68:37: 68:39}&gt;(move _24, move _37)</td></tr></table>>];
    bb20__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb21__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_40 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb22__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_22 as Continue).0: i64)<br/>_21 = _44<br/>StorageDead(_44)<br/>((*_1).1: i64) = move _21<br/>StorageDead(_21)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageLive(_45)<br/>_45 = ()<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Ok(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb24__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = ((*_1).1: i64)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _2<br/></td></tr><tr><td align="left">_69 = &lt;u64 as TryInto&lt;i64&gt;&gt;::try_into(move _70)</td></tr></table>>];
    bb26__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = ((*_1).1: i64)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/></td></tr><tr><td align="left">_52 = &lt;u64 as TryInto&lt;i64&gt;&gt;::try_into(move _53)</td></tr></table>>];
    bb27__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>_54 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:80:38: 80:41}<br/></td></tr><tr><td align="left">_51 = std::result::Result::&lt;i64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:80:38: 80:41}&gt;(move _52, move _54)</td></tr></table>>];
    bb28__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb29__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_55 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb30__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_50 as Continue).0: i64)<br/>_49 = _59<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_47 = core::num::&lt;impl i64&gt;::saturating_sub(move _48, move _49)</td></tr></table>>];
    bb31__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb32__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>((*_1).1: i64) = move _47<br/>StorageDead(_47)<br/>StorageDead(_50)<br/>StorageLive(_60)<br/>_60 = ()<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Ok(move _60)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>_71 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:90:42: 90:45}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;i64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:90:42: 90:45}&gt;(move _69, move _71)</td></tr></table>>];
    bb35__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb36__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_72 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_67 as Continue).0: i64)<br/>_66 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_64 = core::num::&lt;impl i64&gt;::checked_sub(move _65, move _66)</td></tr></table>>];
    bb38__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb39__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_1)<br/>StorageLive(_79)<br/>_79 = &amp;_2<br/>_77 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:92:37: 92:39} { caps: move _78, requested_amount: move _79 }<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_63 = std::option::Option::&lt;i64&gt;::ok_or_else::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:92:37: 92:39}&gt;(move _64, move _77)</td></tr></table>>];
    bb41__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb42__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_80 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb43__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_62 as Continue).0: i64)<br/>_61 = _84<br/>StorageDead(_84)<br/>((*_1).1: i64) = move _61<br/>StorageDead(_61)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageLive(_85)<br/>_85 = ()<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Ok(move _85)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb45__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1415 -> bb3__0_1415 [label="0"];
    bb0__0_1415 -> bb1__0_1415 [label="1"];
    bb0__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb1__0_1415 -> bb26__0_1415 [label="0"];
    bb1__0_1415 -> bb25__0_1415 [label="1"];
    bb1__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb3__0_1415 -> bb5__0_1415 [label="0"];
    bb3__0_1415 -> bb4__0_1415 [label="1"];
    bb3__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb4__0_1415 -> bb13__0_1415 [label="return"];
    bb5__0_1415 -> bb6__0_1415 [label="return"];
    bb6__0_1415 -> bb7__0_1415 [label="return"];
    bb7__0_1415 -> bb8__0_1415 [label="return"];
    bb8__0_1415 -> bb9__0_1415 [label="0"];
    bb8__0_1415 -> bb10__0_1415 [label="1"];
    bb8__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb9__0_1415 -> bb12__0_1415 [label="return"];
    bb10__0_1415 -> bb11__0_1415 [label="return"];
    bb11__0_1415 -> bb48__0_1415 [label=""];
    bb12__0_1415 -> bb48__0_1415 [label=""];
    bb13__0_1415 -> bb14__0_1415 [label="return"];
    bb14__0_1415 -> bb15__0_1415 [label="return"];
    bb15__0_1415 -> bb16__0_1415 [label="0"];
    bb15__0_1415 -> bb17__0_1415 [label="1"];
    bb15__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb16__0_1415 -> bb19__0_1415 [label="return"];
    bb17__0_1415 -> bb18__0_1415 [label="return"];
    bb18__0_1415 -> bb47__0_1415 [label=""];
    bb19__0_1415 -> bb20__0_1415 [label="return"];
    bb20__0_1415 -> bb21__0_1415 [label="return"];
    bb21__0_1415 -> bb22__0_1415 [label="0"];
    bb21__0_1415 -> bb23__0_1415 [label="1"];
    bb21__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb22__0_1415 -> bb48__0_1415 [label=""];
    bb23__0_1415 -> bb24__0_1415 [label="return"];
    bb24__0_1415 -> bb47__0_1415 [label=""];
    bb25__0_1415 -> bb34__0_1415 [label="return"];
    bb26__0_1415 -> bb27__0_1415 [label="return"];
    bb27__0_1415 -> bb28__0_1415 [label="return"];
    bb28__0_1415 -> bb29__0_1415 [label="return"];
    bb29__0_1415 -> bb30__0_1415 [label="0"];
    bb29__0_1415 -> bb31__0_1415 [label="1"];
    bb29__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb30__0_1415 -> bb33__0_1415 [label="return"];
    bb31__0_1415 -> bb32__0_1415 [label="return"];
    bb32__0_1415 -> bb48__0_1415 [label=""];
    bb33__0_1415 -> bb48__0_1415 [label=""];
    bb34__0_1415 -> bb35__0_1415 [label="return"];
    bb35__0_1415 -> bb36__0_1415 [label="return"];
    bb36__0_1415 -> bb37__0_1415 [label="0"];
    bb36__0_1415 -> bb38__0_1415 [label="1"];
    bb36__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb37__0_1415 -> bb40__0_1415 [label="return"];
    bb38__0_1415 -> bb39__0_1415 [label="return"];
    bb39__0_1415 -> bb46__0_1415 [label=""];
    bb40__0_1415 -> bb41__0_1415 [label="return"];
    bb41__0_1415 -> bb42__0_1415 [label="return"];
    bb42__0_1415 -> bb43__0_1415 [label="0"];
    bb42__0_1415 -> bb44__0_1415 [label="1"];
    bb42__0_1415 -> bb2__0_1415 [label="otherwise"];
    bb43__0_1415 -> bb48__0_1415 [label=""];
    bb44__0_1415 -> bb45__0_1415 [label="return"];
    bb45__0_1415 -> bb46__0_1415 [label=""];
    bb46__0_1415 -> bb48__0_1415 [label=""];
    bb47__0_1415 -> bb48__0_1415 [label=""];
}
