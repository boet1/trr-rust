digraph Mir_0_1782 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_orders_supported_after_user_operation::{closure#1}(_1: &amp;ReErased mut Closure(DefId(0:1782 ~ kamino_lending[6389]::state::order_operations::check_orders_supported_after_user_operation::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationOrder,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased state::obligation::Obligation,)]), _2: &amp;ReErased &amp;ReErased state::obligation::ObligationOrder) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _6: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _7: &amp;ReErased state::obligation::Obligation;<br align="left"/>debug order =&gt; _2;<br align="left"/>debug obligation =&gt; (*((*_1).0: &amp;state::obligation::Obligation));<br align="left"/>>;
    bb0__0_1782 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_6 = deref_copy (*_2)<br/>_4 = &amp;(*_6)<br/>StorageLive(_5)<br/>_7 = deref_copy ((*_1).0: &amp;state::obligation::Obligation)<br/>_5 = &amp;(*_7)<br/></td></tr><tr><td align="left">_3 = obligation::ObligationOrder::is_supported_by(move _4, move _5)</td></tr></table>>];
    bb1__0_1782 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_0 = Not(move _3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1782 -> bb1__0_1782 [label="return"];
}
