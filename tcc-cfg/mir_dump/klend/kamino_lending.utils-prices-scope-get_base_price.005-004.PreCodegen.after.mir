// MIR for `get_base_price` after PreCodegen

fn get_base_price(_1: &scope_types::OraclePrices, _2: u16) -> std::option::Option<(prices::types::Price<u64>, u64)> {
    debug scope_prices => _1;
    debug token => _2;
    let mut _0: std::option::Option<(utils::prices::types::Price<u64>, u64)>;
    let mut _3: std::option::Option<&scope_types::DatedPrice>;
    let mut _4: &[scope_types::DatedPrice];
    let mut _5: &[scope_types::DatedPrice; 512];
    let mut _6: usize;
    let mut _7: u16;
    let mut _8: {closure@programs\klend\src\utils\prices\scope.rs:154:14: 154:21};

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &((*_1).1: [scope_types::DatedPrice; 512]);
        _4 = move _5 as &[scope_types::DatedPrice] (PointerCoercion(Unsize));
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = _2;
        _6 = <usize as From<u16>>::from(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        _3 = core::slice::<impl [scope_types::DatedPrice]>::get::<usize>(move _4, move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_4);
        StorageLive(_8);
        _8 = {closure@programs\klend\src\utils\prices\scope.rs:154:14: 154:21};
        _0 = std::option::Option::<&scope_types::DatedPrice>::map::<(prices::types::Price<u64>, u64), {closure@programs\klend\src\utils\prices\scope.rs:154:14: 154:21}>(move _3, move _8) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_8);
        StorageDead(_3);
        return;
    }
}
