digraph Mir_0_637 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_set_obligation_order::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_set_obligation_order::SetObligationOrder&lt;ReErased&gt;&gt;, _2: u8, _3: state::obligation::ObligationOrder) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _5: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _23: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _24: ();<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _26: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _27: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _28: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _29: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _30: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _31: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _32: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _33: u8;<br align="left"/>let mut _34: state::obligation::ObligationOrder;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _39: ();<br align="left"/>let mut _40: ();<br align="left"/>let mut _41: &amp;ReErased mut handlers::handler_set_obligation_order::SetObligationOrder&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased mut handlers::handler_set_obligation_order::SetObligationOrder&lt;ReErased&gt;;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug index =&gt; _2;<br align="left"/>debug order =&gt; _3;<br align="left"/>debug lending_market =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug obligation =&gt; _14;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>>;
    bb0__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_41 = deref_copy (_1.1: &amp;mut handlers::handler_set_obligation_order::SetObligationOrder&lt;'_&gt;)<br/>_8 = &amp;((*_41).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _8)</td></tr></table>>];
    bb1__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_5 = move _13<br/>StorageDead(_13)<br/>_4 = &amp;_5<br/>_43 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_42 = deref_copy (_1.1: &amp;mut handlers::handler_set_obligation_order::SetObligationOrder&lt;'_&gt;)<br/>_18 = &amp;((*_42).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_53 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_15 = move _23<br/>StorageDead(_23)<br/>_14 = &amp;mut _15<br/>_45 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_4)<br/></td></tr><tr><td align="left">_28 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb10__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_51 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_31 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _32)</td></tr></table>>];
    bb13__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_30 = &amp;mut (*_31)<br/>StorageDead(_32)<br/>StorageLive(_33)<br/>_33 = _2<br/>StorageLive(_34)<br/>_34 = _3<br/></td></tr><tr><td align="left">_26 = set_order_on_obligation(move _27, move _30, move _33, move _34)</td></tr></table>>];
    bb14__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb15__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_35 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb16__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_25 as Continue).0: ())<br/>_24 = _39<br/>StorageDead(_39)<br/>_47 = discriminant(_25)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_40)<br/>_40 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _40)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb17__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_38)<br/>_38 = move _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb18__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_49 = discriminant(_25)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb19__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb20__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb22__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb24__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb25__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb26__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_55 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left" balign="left">_56 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_57 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_637 -> bb1__0_637 [label="return"];
    bb1__0_637 -> bb2__0_637 [label="return"];
    bb1__0_637 -> bb26__0_637 [label="unwind"];
    bb2__0_637 -> bb3__0_637 [label="0"];
    bb2__0_637 -> bb5__0_637 [label="1"];
    bb2__0_637 -> bb4__0_637 [label="otherwise"];
    bb3__0_637 -> bb7__0_637 [label="return"];
    bb3__0_637 -> bb25__0_637 [label="unwind"];
    bb5__0_637 -> bb6__0_637 [label="return"];
    bb5__0_637 -> bb29__0_637 [label="unwind"];
    bb6__0_637 -> bb22__0_637 [label=""];
    bb7__0_637 -> bb8__0_637 [label="return"];
    bb7__0_637 -> bb25__0_637 [label="unwind"];
    bb8__0_637 -> bb9__0_637 [label="0"];
    bb8__0_637 -> bb10__0_637 [label="1"];
    bb8__0_637 -> bb4__0_637 [label="otherwise"];
    bb9__0_637 -> bb12__0_637 [label="return"];
    bb9__0_637 -> bb24__0_637 [label="unwind"];
    bb10__0_637 -> bb11__0_637 [label="return"];
    bb10__0_637 -> bb28__0_637 [label="unwind"];
    bb11__0_637 -> bb21__0_637 [label=""];
    bb12__0_637 -> bb13__0_637 [label="return"];
    bb12__0_637 -> bb24__0_637 [label="unwind"];
    bb13__0_637 -> bb14__0_637 [label="return"];
    bb13__0_637 -> bb24__0_637 [label="unwind"];
    bb14__0_637 -> bb15__0_637 [label="return"];
    bb14__0_637 -> bb24__0_637 [label="unwind"];
    bb15__0_637 -> bb16__0_637 [label="0"];
    bb15__0_637 -> bb17__0_637 [label="1"];
    bb15__0_637 -> bb4__0_637 [label="otherwise"];
    bb16__0_637 -> bb19__0_637 [label="return"];
    bb16__0_637 -> bb25__0_637 [label="unwind"];
    bb17__0_637 -> bb18__0_637 [label="return"];
    bb17__0_637 -> bb27__0_637 [label="unwind"];
    bb18__0_637 -> bb21__0_637 [label="return"];
    bb18__0_637 -> bb25__0_637 [label="unwind"];
    bb19__0_637 -> bb20__0_637 [label="return"];
    bb19__0_637 -> bb26__0_637 [label="unwind"];
    bb20__0_637 -> bb23__0_637 [label=""];
    bb21__0_637 -> bb22__0_637 [label="return"];
    bb21__0_637 -> bb26__0_637 [label="unwind"];
    bb22__0_637 -> bb23__0_637 [label=""];
    bb24__0_637 -> bb25__0_637 [label="return"];
    bb25__0_637 -> bb26__0_637 [label="return"];
    bb27__0_637 -> bb24__0_637 [label=""];
    bb28__0_637 -> bb25__0_637 [label=""];
    bb29__0_637 -> bb26__0_637 [label=""];
}
