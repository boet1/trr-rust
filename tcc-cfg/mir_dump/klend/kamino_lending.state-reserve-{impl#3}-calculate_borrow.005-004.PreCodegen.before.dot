digraph Mir_0_1885 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::calculate_borrow(_1: &amp;ReErased state::reserve::Reserve, _2: u64, _3: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _5: u16, _6: bool, _7: bool) -&gt; std::result::Result&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: &amp;ReErased state::reserve::ReserveLiquidity;<br align="left"/>let _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: &amp;ReErased state::reserve::ReserveLiquidity;<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: u64;<br align="left"/>let _14: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _15: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _16: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _18: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _19: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _24: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _27: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _28: u64;<br align="left"/>let _29: u64;<br align="left"/>let _30: u64;<br align="left"/>let mut _31: (u64, u64);<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, (u64, u64)&gt;;<br align="left"/>let mut _33: std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt;;<br align="left"/>let mut _34: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _35: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _36: state::reserve::FeeCalculation;<br align="left"/>let mut _37: u16;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _43: (u64, u64);<br align="left"/>let _44: u64;<br align="left"/>let mut _45: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: (u64, bool);<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: (u64, bool);<br align="left"/>let mut _53: state::types::CalculateBorrowResult;<br align="left"/>let mut _54: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: u64;<br align="left"/>let _58: u64;<br align="left"/>let mut _59: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _60: u64;<br align="left"/>let _61: u64;<br align="left"/>let _62: u64;<br align="left"/>let mut _63: (u64, u64);<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, (u64, u64)&gt;;<br align="left"/>let mut _65: std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt;;<br align="left"/>let mut _66: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _67: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _68: state::reserve::FeeCalculation;<br align="left"/>let mut _69: u16;<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _75: (u64, u64);<br align="left"/>let _76: ();<br align="left"/>let mut _77: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _78: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: (u64, bool);<br align="left"/>let _83: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _84: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _85: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _86: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _87: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _88: u128;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _91: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _92: bool;<br align="left"/>let _93: ();<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _96: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let _98: ();<br align="left"/>let mut _99: &amp;ReErased str;<br align="left"/>let _100: &amp;ReErased str;<br align="left"/>let mut _101: &amp;ReErased std::string::String;<br align="left"/>let _102: &amp;ReErased std::string::String;<br align="left"/>let _103: std::string::String;<br align="left"/>let _104: std::string::String;<br align="left"/>let mut _105: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _109: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _110: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _111: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _112: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _113: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _114: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _116: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _117: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _119: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _120: anchor_lang::error::Error;<br align="left"/>let mut _121: anchor_lang::error::AnchorError;<br align="left"/>let mut _122: std::string::String;<br align="left"/>let mut _123: &amp;ReErased LendingError;<br align="left"/>let _124: LendingError;<br align="left"/>let mut _125: u32;<br align="left"/>let mut _126: LendingError;<br align="left"/>let mut _127: std::string::String;<br align="left"/>let mut _128: &amp;ReErased LendingError;<br align="left"/>let _129: LendingError;<br align="left"/>let mut _130: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _131: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _132: anchor_lang::error::Source;<br align="left"/>let mut _133: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _134: state::types::CalculateBorrowResult;<br align="left"/>let mut _135: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: u64;<br align="left"/>let mut _138: u64;<br align="left"/>let mut _139: &amp;ReErased LendingError;<br align="left"/>let mut _140: &amp;ReErased LendingError;<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug amount_to_borrow =&gt; _2;<br align="left"/>debug max_borrow_factor_adjusted_debt_value =&gt; _3;<br align="left"/>debug remaining_reserve_borrow =&gt; _4;<br align="left"/>debug referral_fee_bps =&gt; _5;<br align="left"/>debug is_in_elevation_group =&gt; _6;<br align="left"/>debug has_referrer =&gt; _7;<br align="left"/>debug decimals =&gt; _8;<br align="left"/>debug market_price_f =&gt; _10;<br align="left"/>debug borrow_amount_f =&gt; _14;<br align="left"/>debug borrow_fee =&gt; _29;<br align="left"/>debug referrer_fee =&gt; _30;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug borrow_amount =&gt; _44;<br align="left"/>debug receive_amount =&gt; _46;<br align="left"/>debug receive_amount =&gt; _58;<br align="left"/>debug borrow_amount_f =&gt; _59;<br align="left"/>debug borrow_fee =&gt; _61;<br align="left"/>debug referrer_fee =&gt; _62;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug borrow_factor_adjusted_debt_value =&gt; _83;<br align="left"/>debug res =&gt; _104;<br align="left"/>>;
    bb0__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;((*_1).5: state::reserve::ReserveLiquidity)<br/></td></tr><tr><td align="left">_8 = ReserveLiquidity::mint_factor(move _9)</td></tr></table>>];
    bb1__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).5: state::reserve::ReserveLiquidity)<br/></td></tr><tr><td align="left">_10 = ReserveLiquidity::get_market_price(move _11)</td></tr></table>>];
    bb2__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _2<br/>_12 = Eq(move _13, const _)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _8<br/></td></tr><tr><td align="left">_20 = &lt;u128 as From&lt;u64&gt;&gt;::from(move _21)</td></tr></table>>];
    bb4__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_18 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&lt;u128&gt;&gt;::mul(move _19, move _20)</td></tr></table>>];
    bb5__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>_22 = _10<br/></td></tr><tr><td align="left">_17 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _18, move _22)</td></tr></table>>];
    bb6__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = _6<br/></td></tr><tr><td align="left">_23 = reserve::Reserve::borrow_factor_f(move _24, move _25)</td></tr></table>>];
    bb7__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_16 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _17, move _23)</td></tr></table>>];
    bb8__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_17)<br/>StorageLive(_26)<br/>_26 = _4<br/></td></tr><tr><td align="left">_15 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _16, move _26)</td></tr></table>>];
    bb9__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_16)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = (((*_1).5: state::reserve::ReserveLiquidity).3: u64)<br/></td></tr><tr><td align="left">_27 = &lt;u64 as Into&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::into(move _28)</td></tr></table>>];
    bb10__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_14 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _15, move _27)</td></tr></table>>];
    bb11__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_15)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(((*_1).9: state::reserve::ReserveConfig).14: state::reserve::ReserveFees)<br/>StorageLive(_35)<br/>_35 = _14<br/>StorageLive(_36)<br/>_36 = reserve::FeeCalculation::Inclusive<br/>StorageLive(_37)<br/>_37 = _5<br/>StorageLive(_38)<br/>_38 = _7<br/></td></tr><tr><td align="left">_33 = ReserveFees::calculate_borrow_fees(move _34, move _35, move _36, move _37, move _38)</td></tr></table>>];
    bb12__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb13__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_39 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb14__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_32 as Continue).0: (u64, u64))<br/>_31 = _43<br/>StorageDead(_43)<br/>StorageLive(_29)<br/>_29 = (_31.0: u64)<br/>StorageLive(_30)<br/>_30 = (_31.1: u64)<br/>_142 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_14<br/></td></tr><tr><td align="left">_44 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _45)</td></tr></table>>];
    bb15__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb16__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_42)<br/>_42 = move _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb17__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>_148 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _44<br/>StorageLive(_49)<br/>_49 = _29<br/>_50 = CheckedSub(_48, _49)<br/></td></tr><tr><td align="left">assert(!move (_50.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _48, move _49)</td></tr></table>>];
    bb19__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_47 = move (_50.0: u64)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>_51 = _30<br/>_52 = CheckedSub(_47, _51)<br/></td></tr><tr><td align="left">assert(!move (_52.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _47, move _51)</td></tr></table>>];
    bb20__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_46 = move (_52.0: u64)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _14<br/>StorageLive(_55)<br/>_55 = _46<br/>StorageLive(_56)<br/>_56 = _29<br/>StorageLive(_57)<br/>_57 = _30<br/>_53 = state::types::CalculateBorrowResult { borrow_amount_f: move _54, receive_amount: move _55, borrow_fee: move _56, referrer_fee: move _57 }<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>_0 = std::result::Result::&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt;::Ok(move _53)<br/>StorageDead(_53)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_58)<br/>_58 = _2<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_59 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _60)</td></tr></table>>];
    bb22__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(((*_1).9: state::reserve::ReserveConfig).14: state::reserve::ReserveFees)<br/>StorageLive(_67)<br/>_67 = _59<br/>StorageLive(_68)<br/>_68 = reserve::FeeCalculation::Exclusive<br/>StorageLive(_69)<br/>_69 = _5<br/>StorageLive(_70)<br/>_70 = _7<br/></td></tr><tr><td align="left">_65 = ReserveFees::calculate_borrow_fees(move _66, move _67, move _68, move _69, move _70)</td></tr></table>>];
    bb23__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb24__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_71 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb25__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_64 as Continue).0: (u64, u64))<br/>_63 = _75<br/>StorageDead(_75)<br/>StorageLive(_61)<br/>_61 = (_63.0: u64)<br/>StorageLive(_62)<br/>_62 = (_63.1: u64)<br/>_144 = discriminant(_64)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;mut _59<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _61<br/>StorageLive(_81)<br/>_81 = _62<br/>_82 = CheckedAdd(_80, _81)<br/></td></tr><tr><td align="left">assert(!move (_82.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _80, move _81)</td></tr></table>>];
    bb26__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = move ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_74)<br/>_74 = move _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb27__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>_146 = discriminant(_64)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_79 = move (_82.0: u64)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_num::&lt;u64&gt;(move _79)</td></tr></table>>];
    bb29__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">_76 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _77, move _78)</td></tr></table>>];
    bb30__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _59<br/>StorageLive(_87)<br/>_87 = _10<br/></td></tr><tr><td align="left">_85 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _86, move _87)</td></tr></table>>];
    bb31__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _8<br/></td></tr><tr><td align="left">_88 = &lt;u128 as From&lt;u64&gt;&gt;::from(move _89)</td></tr></table>>];
    bb32__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_84 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&lt;u128&gt;&gt;::div(move _85, move _88)</td></tr></table>>];
    bb33__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_85)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_1)<br/>StorageLive(_92)<br/>_92 = _6<br/></td></tr><tr><td align="left">_90 = reserve::Reserve::borrow_factor_f(move _91, move _92)</td></tr></table>>];
    bb34__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_83 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _84, move _90)</td></tr></table>>];
    bb35__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_84)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_83<br/>StorageLive(_96)<br/>_96 = &amp;_3<br/></td></tr><tr><td align="left">_94 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _95, move _96)</td></tr></table>>];
    bb36__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb37__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_141 = const _<br/>_108 = &amp;(*_141)<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;_83<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _115)</td></tr></table>>];
    bb38__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_3<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_117 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _118)</td></tr></table>>];
    bb39__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_113 = [move _114, move _117]<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>_112 = &amp;_113<br/>_111 = &amp;(*_112)<br/>_110 = move _111 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_105 = Arguments::&lt;'_&gt;::new_v1(move _106, move _110)</td></tr></table>>];
    bb40__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = format(move _105)</td></tr></table>>];
    bb41__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>_103 = move _104<br/>StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::string::String as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb42__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_99 = &amp;(*_100)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_98 = solana_program::log::sol_log(move _99)</td></tr></table>>];
    bb43__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb44__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_140 = const _<br/>_123 = &amp;(*_140)<br/></td></tr><tr><td align="left">_122 = LendingError::name(move _123)</td></tr></table>>];
    bb45__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = LendingError::BorrowTooLarge<br/></td></tr><tr><td align="left">_125 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _126)</td></tr></table>>];
    bb46__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_139 = const _<br/>_128 = &amp;(*_139)<br/></td></tr><tr><td align="left">_127 = &lt;LendingError as ToString&gt;::to_string(move _128)</td></tr></table>>];
    bb47__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\reserve.rs&quot;, line: const 346_u32 }<br/>_131 = anchor_lang::error::ErrorOrigin::Source(move _132)<br/>StorageDead(_132)<br/>_130 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _131)<br/>StorageDead(_131)<br/>StorageLive(_133)<br/>_133 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_121 = anchor_lang::error::AnchorError { error_name: move _122, error_code_number: move _125, error_msg: move _127, error_origin: move _130, compared_values: move _133 }<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _121)</td></tr></table>>];
    bb48__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_0 = std::result::Result::&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt;::Err(move _120)<br/>StorageDead(_120)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_83)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>_93 = const ()<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = _59<br/>StorageLive(_136)<br/>_136 = _58<br/>StorageLive(_137)<br/>_137 = _61<br/>StorageLive(_138)<br/>_138 = _62<br/>_134 = state::types::CalculateBorrowResult { borrow_amount_f: move _135, receive_amount: move _136, borrow_fee: move _137, referrer_fee: move _138 }<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>_0 = std::result::Result::&lt;state::types::CalculateBorrowResult, anchor_lang::error::Error&gt;::Ok(move _134)<br/>StorageDead(_134)<br/>StorageDead(_83)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">return</td></tr></table>>];
    bb54__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_122)</td></tr></table>>];
    bb55__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb56__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb57__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left" balign="left">_150 = discriminant(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1885 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left" balign="left">_151 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1885 -> bb1__0_1885 [label="return"];
    bb1__0_1885 -> bb2__0_1885 [label="return"];
    bb2__0_1885 -> bb21__0_1885 [label="0"];
    bb2__0_1885 -> bb3__0_1885 [label="otherwise"];
    bb3__0_1885 -> bb4__0_1885 [label="return"];
    bb4__0_1885 -> bb5__0_1885 [label="return"];
    bb5__0_1885 -> bb6__0_1885 [label="return"];
    bb6__0_1885 -> bb7__0_1885 [label="return"];
    bb7__0_1885 -> bb8__0_1885 [label="return"];
    bb8__0_1885 -> bb9__0_1885 [label="return"];
    bb9__0_1885 -> bb10__0_1885 [label="return"];
    bb10__0_1885 -> bb11__0_1885 [label="return"];
    bb11__0_1885 -> bb12__0_1885 [label="return"];
    bb12__0_1885 -> bb13__0_1885 [label="return"];
    bb12__0_1885 -> bb56__0_1885 [label="unwind"];
    bb13__0_1885 -> bb14__0_1885 [label="0"];
    bb13__0_1885 -> bb16__0_1885 [label="1"];
    bb13__0_1885 -> bb15__0_1885 [label="otherwise"];
    bb14__0_1885 -> bb18__0_1885 [label="return"];
    bb16__0_1885 -> bb17__0_1885 [label="return"];
    bb16__0_1885 -> bb58__0_1885 [label="unwind"];
    bb17__0_1885 -> bb52__0_1885 [label=""];
    bb18__0_1885 -> bb19__0_1885 [label="success"];
    bb19__0_1885 -> bb20__0_1885 [label="success"];
    bb20__0_1885 -> bb50__0_1885 [label=""];
    bb21__0_1885 -> bb22__0_1885 [label="return"];
    bb22__0_1885 -> bb23__0_1885 [label="return"];
    bb23__0_1885 -> bb24__0_1885 [label="return"];
    bb23__0_1885 -> bb56__0_1885 [label="unwind"];
    bb24__0_1885 -> bb25__0_1885 [label="0"];
    bb24__0_1885 -> bb26__0_1885 [label="1"];
    bb24__0_1885 -> bb15__0_1885 [label="otherwise"];
    bb25__0_1885 -> bb28__0_1885 [label="success"];
    bb26__0_1885 -> bb27__0_1885 [label="return"];
    bb26__0_1885 -> bb57__0_1885 [label="unwind"];
    bb27__0_1885 -> bb51__0_1885 [label=""];
    bb28__0_1885 -> bb29__0_1885 [label="return"];
    bb29__0_1885 -> bb30__0_1885 [label="return"];
    bb30__0_1885 -> bb31__0_1885 [label="return"];
    bb31__0_1885 -> bb32__0_1885 [label="return"];
    bb32__0_1885 -> bb33__0_1885 [label="return"];
    bb33__0_1885 -> bb34__0_1885 [label="return"];
    bb34__0_1885 -> bb35__0_1885 [label="return"];
    bb35__0_1885 -> bb36__0_1885 [label="return"];
    bb36__0_1885 -> bb49__0_1885 [label="0"];
    bb36__0_1885 -> bb37__0_1885 [label="otherwise"];
    bb37__0_1885 -> bb38__0_1885 [label="return"];
    bb38__0_1885 -> bb39__0_1885 [label="return"];
    bb39__0_1885 -> bb40__0_1885 [label="return"];
    bb40__0_1885 -> bb41__0_1885 [label="return"];
    bb41__0_1885 -> bb42__0_1885 [label="return"];
    bb41__0_1885 -> bb55__0_1885 [label="unwind"];
    bb42__0_1885 -> bb43__0_1885 [label="return"];
    bb42__0_1885 -> bb55__0_1885 [label="unwind"];
    bb43__0_1885 -> bb44__0_1885 [label="return"];
    bb43__0_1885 -> bb56__0_1885 [label="unwind"];
    bb44__0_1885 -> bb45__0_1885 [label="return"];
    bb45__0_1885 -> bb46__0_1885 [label="return"];
    bb45__0_1885 -> bb54__0_1885 [label="unwind"];
    bb46__0_1885 -> bb47__0_1885 [label="return"];
    bb46__0_1885 -> bb54__0_1885 [label="unwind"];
    bb47__0_1885 -> bb48__0_1885 [label="return"];
    bb47__0_1885 -> bb56__0_1885 [label="unwind"];
    bb48__0_1885 -> bb51__0_1885 [label=""];
    bb49__0_1885 -> bb50__0_1885 [label=""];
    bb50__0_1885 -> bb53__0_1885 [label=""];
    bb51__0_1885 -> bb52__0_1885 [label=""];
    bb52__0_1885 -> bb53__0_1885 [label=""];
    bb54__0_1885 -> bb56__0_1885 [label="return"];
    bb55__0_1885 -> bb56__0_1885 [label="return"];
    bb57__0_1885 -> bb56__0_1885 [label=""];
    bb58__0_1885 -> bb56__0_1885 [label=""];
}
