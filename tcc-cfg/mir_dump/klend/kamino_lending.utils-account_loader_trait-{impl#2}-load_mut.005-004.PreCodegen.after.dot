digraph Mir_0_2132 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn account_loader_trait::FatAccountLoader::&lt;'info, T&gt;::load_mut(_1: &amp;ReErased utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;) -&gt; std::result::Result&lt;std::cell::RefMut&lt;ReErased, T/#1&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: !;<br align="left"/>let mut _5: anchor_lang::error::Error;<br align="left"/>let mut _6: anchor_lang::error::ErrorCode;<br align="left"/>let _7: std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _9: std::result::Result&lt;std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _15: std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: &amp;ReErased [u8];<br align="left"/>let _20: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _21: &amp;ReErased std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _22: usize;<br align="left"/>let mut _23: &amp;ReErased [u8];<br align="left"/>let mut _24: &amp;ReErased [u8; 8_usize];<br align="left"/>let _25: [u8; 8_usize];<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: anchor_lang::error::Error;<br align="left"/>let mut _28: anchor_lang::error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: &amp;ReErased [u8];<br align="left"/>let _32: &amp;ReErased [u8];<br align="left"/>let mut _33: &amp;ReErased [u8];<br align="left"/>let _34: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _35: &amp;ReErased std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _36: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _37: &amp;ReErased [u8; 8_usize];<br align="left"/>let _38: [u8; 8_usize];<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: anchor_lang::error::Error;<br align="left"/>let mut _41: anchor_lang::error::ErrorCode;<br align="left"/>let mut _42: std::cell::RefMut&lt;ReErased, T/#1&gt;;<br align="left"/>let mut _43: std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _44: Closure(DefId(0:2133 ~ kamino_lending[6389]::utils::account_loader_trait::{impl#2}::load_mut::{closure#0}), [ReErased, T/#1, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) mut &amp;ReErased mut [u8],)) -&gt; &amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) mut T/#1, [Region(BrAnon)]), ()]);<br align="left"/>let mut _45: &amp;ReErased mut [u8];<br align="left"/>let mut _46: &amp;ReErased mut [u8];<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug data =&gt; _7;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>>;
    bb0__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_47 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = (((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = AccountNotMutable<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _6)</td></tr></table>>];
    bb2__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = std::result::Result::&lt;RefMut&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Err(move _5)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_9 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_mut_data(move _10)</td></tr></table>>];
    bb4__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;RefMut&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb5__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb6__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_8 as Continue).0: std::cell::RefMut&lt;'_, &amp;mut [u8]&gt;)<br/>_47 = const true<br/>_7 = move _15<br/>StorageDead(_15)<br/>_48 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;_7<br/></td></tr><tr><td align="left">_20 = &lt;RefMut&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _21)</td></tr></table>>];
    bb7__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;RefMut&lt;'_, T&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb9__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_50 = discriminant(_8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_45 = deref_copy (*_20)<br/>_19 = &amp;(*_45)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_18 = core::slice::&lt;impl [u8]&gt;::len(move _19)</td></tr></table>>];
    bb11__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;T as Discriminator&gt;::discriminator()</td></tr></table>>];
    bb12__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_24 = &amp;_25<br/>_23 = move _24 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = core::slice::&lt;impl [u8]&gt;::len(move _23)</td></tr></table>>];
    bb13__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_17 = Lt(move _18, move _22)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb14__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = AccountDiscriminatorNotFound<br/></td></tr><tr><td align="left">_27 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _28)</td></tr></table>>];
    bb15__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_0 = std::result::Result::&lt;RefMut&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Err(move _27)<br/>StorageDead(_27)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_7<br/></td></tr><tr><td align="left">_34 = &lt;RefMut&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb17__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_46 = deref_copy (*_34)<br/>_33 = &amp;(*_46)<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>_36 = std::ops::Range::&lt;usize&gt; { start: const 0_usize, end: const 8_usize }<br/></td></tr><tr><td align="left">_32 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _33, move _36)</td></tr></table>>];
    bb18__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_31 = &amp;(*_32)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/></td></tr><tr><td align="left">_38 = &lt;T as Discriminator&gt;::discriminator()</td></tr></table>>];
    bb19__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_37 = &amp;_38<br/></td></tr><tr><td align="left">_30 = &lt;[u8] as PartialEq&lt;[u8; 8]&gt;&gt;::ne(move _31, move _37)</td></tr></table>>];
    bb20__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb21__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = AccountDiscriminatorMismatch<br/></td></tr><tr><td align="left">_40 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _41)</td></tr></table>>];
    bb22__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_0 = std::result::Result::&lt;RefMut&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Err(move _40)<br/>StorageDead(_40)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>_29 = const ()<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_47 = const false<br/>_43 = move _7<br/>StorageLive(_44)<br/>_44 = {closure@programs\klend\src\utils\account_loader_trait.rs:127:30: 127:36}<br/></td></tr><tr><td align="left">_42 = RefMut::&lt;'_, &amp;mut [u8]&gt;::map::&lt;T, {closure@programs\klend\src\utils\account_loader_trait.rs:127:30: 127:36}&gt;(move _43, move _44)</td></tr></table>>];
    bb24__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>_0 = std::result::Result::&lt;RefMut&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Ok(move _42)<br/>StorageDead(_42)<br/>_47 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb26__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_47 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb30__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">switchInt(_47)</td></tr></table>>];
    bb31__0_2132 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_52 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2132 -> bb1__0_2132 [label="0"];
    bb0__0_2132 -> bb3__0_2132 [label="otherwise"];
    bb1__0_2132 -> bb2__0_2132 [label="return"];
    bb2__0_2132 -> bb27__0_2132 [label=""];
    bb3__0_2132 -> bb4__0_2132 [label="return"];
    bb4__0_2132 -> bb5__0_2132 [label="return"];
    bb4__0_2132 -> bb28__0_2132 [label="unwind"];
    bb5__0_2132 -> bb6__0_2132 [label="0"];
    bb5__0_2132 -> bb8__0_2132 [label="1"];
    bb5__0_2132 -> bb7__0_2132 [label="otherwise"];
    bb6__0_2132 -> bb10__0_2132 [label="return"];
    bb6__0_2132 -> bb30__0_2132 [label="unwind"];
    bb8__0_2132 -> bb9__0_2132 [label="return"];
    bb8__0_2132 -> bb31__0_2132 [label="unwind"];
    bb9__0_2132 -> bb26__0_2132 [label=""];
    bb10__0_2132 -> bb11__0_2132 [label="return"];
    bb10__0_2132 -> bb30__0_2132 [label="unwind"];
    bb11__0_2132 -> bb12__0_2132 [label="return"];
    bb11__0_2132 -> bb30__0_2132 [label="unwind"];
    bb12__0_2132 -> bb13__0_2132 [label="return"];
    bb12__0_2132 -> bb30__0_2132 [label="unwind"];
    bb13__0_2132 -> bb16__0_2132 [label="0"];
    bb13__0_2132 -> bb14__0_2132 [label="otherwise"];
    bb14__0_2132 -> bb15__0_2132 [label="return"];
    bb14__0_2132 -> bb30__0_2132 [label="unwind"];
    bb15__0_2132 -> bb25__0_2132 [label=""];
    bb16__0_2132 -> bb17__0_2132 [label="return"];
    bb16__0_2132 -> bb30__0_2132 [label="unwind"];
    bb17__0_2132 -> bb18__0_2132 [label="return"];
    bb17__0_2132 -> bb30__0_2132 [label="unwind"];
    bb18__0_2132 -> bb19__0_2132 [label="return"];
    bb18__0_2132 -> bb30__0_2132 [label="unwind"];
    bb19__0_2132 -> bb20__0_2132 [label="return"];
    bb19__0_2132 -> bb30__0_2132 [label="unwind"];
    bb20__0_2132 -> bb23__0_2132 [label="0"];
    bb20__0_2132 -> bb21__0_2132 [label="otherwise"];
    bb21__0_2132 -> bb22__0_2132 [label="return"];
    bb21__0_2132 -> bb30__0_2132 [label="unwind"];
    bb22__0_2132 -> bb25__0_2132 [label=""];
    bb23__0_2132 -> bb24__0_2132 [label="return"];
    bb23__0_2132 -> bb30__0_2132 [label="unwind"];
    bb24__0_2132 -> bb27__0_2132 [label=""];
    bb25__0_2132 -> bb26__0_2132 [label="return"];
    bb25__0_2132 -> bb28__0_2132 [label="unwind"];
    bb26__0_2132 -> bb27__0_2132 [label=""];
    bb29__0_2132 -> bb28__0_2132 [label="return"];
    bb30__0_2132 -> bb28__0_2132 [label="0"];
    bb30__0_2132 -> bb29__0_2132 [label="otherwise"];
    bb31__0_2132 -> bb28__0_2132 [label=""];
}
