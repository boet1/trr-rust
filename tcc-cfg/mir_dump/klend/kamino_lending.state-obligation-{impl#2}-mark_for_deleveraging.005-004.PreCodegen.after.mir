// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::mark_for_deleveraging` after PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::mark_for_deleveraging(_1: &mut obligation::Obligation, _2: u64, _3: u8) -> () {
    debug self => _1;
    debug current_timestamp => _2;
    debug target_ltv_pct => _3;
    let mut _0: ();
    let _4: ();
    let mut _5: bool;
    let mut _6: u64;
    let mut _7: !;
    let _8: !;
    let _9: !;
    let mut _10: std::fmt::Arguments<'_>;
    let mut _11: &[&str];
    let mut _12: &[&str; 1];
    let _13: &[&str; 1];
    let _14: [&str; 1];
    let mut _15: u64;
    let mut _16: u8;
    let mut _17: &[&str; 1];

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _2;
        _5 = Eq(move _6, const 0_u64);
        switchInt(move _5) -> [0: bb3, otherwise: bb1];
    }

    bb1: {
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _17 = const _;
        _13 = &(*_17);
        _12 = &(*_13);
        _11 = move _12 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_12);
        _10 = Arguments::<'_>::new_const(move _11) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        _9 = panic_fmt(move _10) -> unwind continue;
    }

    bb3: {
        StorageDead(_6);
        _4 = const ();
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_15);
        _15 = _2;
        ((*_1).24: u64) = move _15;
        StorageDead(_15);
        StorageLive(_16);
        _16 = _3;
        ((*_1).19: u8) = move _16;
        StorageDead(_16);
        _0 = const ();
        return;
    }
}
