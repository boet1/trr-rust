digraph Mir_0_515 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn amount_for_obligation(_1: &amp;ReErased state::obligation::Obligation, _2: &amp;ReErased anchor_lang::prelude::Pubkey, _3: state::reserve::ReserveFarmKind) -&gt; u64<br align="left"/>let mut _4: u8;<br align="left"/>let _5: std::result::Result&lt;&amp;ReErased state::obligation::ObligationCollateral, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _10: std::result::Result&lt;(&amp;ReErased state::obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _15: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _16: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _17: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>debug obligation =&gt; _1;<br align="left"/>debug reserve_address =&gt; _2;<br align="left"/>debug farm_kind =&gt; _3;<br align="left"/>debug collateral =&gt; _5;<br align="left"/>debug obligation_collateral =&gt; _9;<br align="left"/>debug liquidity =&gt; _10;<br align="left"/>debug obligation_liquidity =&gt; _14;<br align="left"/>>;
    bb0__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_4 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/>StorageLive(_12)<br/>_12 = (*_2)<br/></td></tr><tr><td align="left">_10 = obligation::Obligation::find_liquidity_in_borrows(move _11, move _12)</td></tr></table>>];
    bb2__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>_7 = (*_2)<br/></td></tr><tr><td align="left">_5 = obligation::Obligation::find_collateral_in_deposits(move _6, move _7)</td></tr></table>>];
    bb4__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb5__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_5 as Ok).0: &amp;state::obligation::ObligationCollateral)<br/>_0 = ((*_9).1: u64)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_0 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb8__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb10__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = (((_10 as Ok).0: (&amp;state::obligation::ObligationLiquidity, usize)).0: &amp;state::obligation::ObligationLiquidity)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_14)<br/></td></tr><tr><td align="left">_16 = obligation::ObligationLiquidity::borrowed_amount(move _17)</td></tr></table>>];
    bb11__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_15 = &amp;_16<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_0 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _15)</td></tr></table>>];
    bb12__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_0 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb15__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb18__0_515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_515 -> bb3__0_515 [label="0"];
    bb0__0_515 -> bb1__0_515 [label="1"];
    bb0__0_515 -> bb2__0_515 [label="otherwise"];
    bb1__0_515 -> bb9__0_515 [label="return"];
    bb3__0_515 -> bb4__0_515 [label="return"];
    bb4__0_515 -> bb5__0_515 [label="0"];
    bb4__0_515 -> bb6__0_515 [label="otherwise"];
    bb5__0_515 -> bb7__0_515 [label=""];
    bb6__0_515 -> bb7__0_515 [label=""];
    bb7__0_515 -> bb8__0_515 [label="return"];
    bb7__0_515 -> bb18__0_515 [label="unwind"];
    bb8__0_515 -> bb16__0_515 [label=""];
    bb9__0_515 -> bb10__0_515 [label="0"];
    bb9__0_515 -> bb13__0_515 [label="otherwise"];
    bb10__0_515 -> bb11__0_515 [label="return"];
    bb10__0_515 -> bb17__0_515 [label="unwind"];
    bb11__0_515 -> bb12__0_515 [label="return"];
    bb11__0_515 -> bb17__0_515 [label="unwind"];
    bb12__0_515 -> bb14__0_515 [label=""];
    bb13__0_515 -> bb14__0_515 [label=""];
    bb14__0_515 -> bb15__0_515 [label="return"];
    bb14__0_515 -> bb18__0_515 [label="unwind"];
    bb15__0_515 -> bb16__0_515 [label=""];
    bb17__0_515 -> bb18__0_515 [label="return"];
}
