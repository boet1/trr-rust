// MIR for `token_info::<impl at programs\klend\src\state\token_info.rs:233:1: 233:24>::has_twap` after PreCodegen

fn token_info::<impl at programs\klend\src\state\token_info.rs:233:1: 233:24>::has_twap(_1: &token_info::ScopeConfiguration) -> bool {
    debug self => _1;
    let mut _0: bool;
    let mut _2: bool;
    let mut _3: &[u16; 4];
    let mut _4: &[u16; 4];
    let _5: [u16; 4];
    let mut _6: &[u16; 4];
    let mut _7: &[u16; 4];
    let _8: [u16; 4];
    let mut _9: &[u16; 4];
    let mut _10: &[u16; 4];

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = &((*_1).2: [u16; 4]);
        StorageLive(_4);
        _10 = const _;
        _4 = &(*_10);
        _2 = <[u16; 4] as PartialEq>::ne(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _2) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_6);
        _6 = &((*_1).2: [u16; 4]);
        StorageLive(_7);
        _9 = const _;
        _7 = &(*_9);
        _0 = <[u16; 4] as PartialEq>::ne(move _6, move _7) -> [return: bb4, unwind continue];
    }

    bb3: {
        StorageDead(_4);
        StorageDead(_3);
        _0 = const false;
        goto -> bb5;
    }

    bb4: {
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb5;
    }

    bb5: {
        StorageDead(_2);
        return;
    }
}
