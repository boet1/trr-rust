digraph Mir_0_413 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::process_v2(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;&gt;, _2: u64, _3: u64, _4: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let _9: &amp;ReErased handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _18: ();<br align="left"/>let _19: ();<br align="left"/>let _20: ();<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _22: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _25: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _26: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _27: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _28: state::reserve::ReserveFarmKind;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _32: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _34: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _39: ();<br align="left"/>let _40: ();<br align="left"/>let _41: ();<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _43: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _44: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _46: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _47: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _48: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _49: state::reserve::ReserveFarmKind;<br align="left"/>let mut _50: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _53: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: ();<br align="left"/>let mut _62: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _64: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug min_acceptable_received_liquidity_amount =&gt; _3;<br align="left"/>debug max_allowed_ltv_override_percent =&gt; _4;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>>;
    bb0__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_62 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_9 = &amp;((*_62).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;)<br/>_8 = &amp;(*_9)<br/>StorageLive(_10)<br/>_63 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_10 = &amp;(*_63)<br/>StorageLive(_11)<br/>_11 = _2<br/>StorageLive(_12)<br/>_12 = _3<br/>StorageLive(_13)<br/>_13 = _4<br/></td></tr><tr><td align="left">_7 = handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::process_impl(move _8, move _10, move _11, move _12, move _13)</td></tr></table>>];
    bb1__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_14 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb3__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_6 as Continue).0: ())<br/>_5 = _18<br/>StorageDead(_18)<br/>_74 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_64 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_25 = &amp;(((*_64).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).7: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_24 = &amp;(*_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_65 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_27 = &amp;((*_65).1: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_26 = &amp;(*_27)<br/>StorageLive(_28)<br/>_28 = reserve::ReserveFarmKind::Collateral<br/>_23 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _24, farms_accounts: move _26, farm_kind: move _28 }<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_66 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_30 = &amp;(((*_66).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_29 = &amp;(*_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_67 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_32 = &amp;(((*_67).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_31 = &amp;(*_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_68 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_34 = &amp;(((*_68).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_22 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _23, move _29, move _31, move _33)</td></tr></table>>];
    bb4__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_17)<br/>_17 = move _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb6__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>_84 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb8__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_35 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb9__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_21 as Continue).0: ())<br/>_20 = _39<br/>StorageDead(_39)<br/>_76 = discriminant(_21)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_69 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_46 = &amp;(((*_69).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_45 = &amp;(*_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_70 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_48 = &amp;((*_70).2: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_47 = &amp;(*_48)<br/>StorageLive(_49)<br/>_49 = reserve::ReserveFarmKind::Debt<br/>_44 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _45, farms_accounts: move _47, farm_kind: move _49 }<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_71 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_51 = &amp;(((*_71).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_50 = &amp;(*_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_72 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_53 = &amp;(((*_72).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_52 = &amp;(*_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_73 = deref_copy (_1.1: &amp;mut handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2&lt;'_&gt;)<br/>_55 = &amp;(((*_73).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_43 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _44, move _50, move _52, move _54)</td></tr></table>>];
    bb10__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_38)<br/>_38 = move _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb11__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_82 = discriminant(_21)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb13__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_56 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb14__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_42 as Continue).0: ())<br/>_41 = _60<br/>StorageDead(_60)<br/>_78 = discriminant(_42)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>_40 = const ()<br/>StorageDead(_40)<br/>_19 = const ()<br/>StorageDead(_19)<br/>StorageLive(_61)<br/>_61 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_59)<br/>_59 = move _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb16__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_80 = discriminant(_42)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb20__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left" balign="left">_86 = discriminant(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left" balign="left">_87 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_413 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left" balign="left">_88 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_413 -> bb1__0_413 [label="return"];
    bb1__0_413 -> bb2__0_413 [label="return"];
    bb1__0_413 -> bb19__0_413 [label="unwind"];
    bb2__0_413 -> bb3__0_413 [label="0"];
    bb2__0_413 -> bb5__0_413 [label="1"];
    bb2__0_413 -> bb4__0_413 [label="otherwise"];
    bb3__0_413 -> bb7__0_413 [label="return"];
    bb5__0_413 -> bb6__0_413 [label="return"];
    bb5__0_413 -> bb22__0_413 [label="unwind"];
    bb6__0_413 -> bb18__0_413 [label=""];
    bb7__0_413 -> bb8__0_413 [label="return"];
    bb7__0_413 -> bb19__0_413 [label="unwind"];
    bb8__0_413 -> bb9__0_413 [label="0"];
    bb8__0_413 -> bb10__0_413 [label="1"];
    bb8__0_413 -> bb4__0_413 [label="otherwise"];
    bb9__0_413 -> bb12__0_413 [label="return"];
    bb10__0_413 -> bb11__0_413 [label="return"];
    bb10__0_413 -> bb21__0_413 [label="unwind"];
    bb11__0_413 -> bb17__0_413 [label=""];
    bb12__0_413 -> bb13__0_413 [label="return"];
    bb12__0_413 -> bb19__0_413 [label="unwind"];
    bb13__0_413 -> bb14__0_413 [label="0"];
    bb13__0_413 -> bb15__0_413 [label="1"];
    bb13__0_413 -> bb4__0_413 [label="otherwise"];
    bb14__0_413 -> bb18__0_413 [label=""];
    bb15__0_413 -> bb16__0_413 [label="return"];
    bb15__0_413 -> bb20__0_413 [label="unwind"];
    bb16__0_413 -> bb17__0_413 [label=""];
    bb17__0_413 -> bb18__0_413 [label=""];
    bb20__0_413 -> bb19__0_413 [label=""];
    bb21__0_413 -> bb19__0_413 [label=""];
    bb22__0_413 -> bb19__0_413 [label=""];
}
