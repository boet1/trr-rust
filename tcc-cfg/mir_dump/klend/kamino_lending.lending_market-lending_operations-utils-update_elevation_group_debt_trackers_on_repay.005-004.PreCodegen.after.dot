digraph Mir_0_1372 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_elevation_group_debt_trackers_on_repay(_1: u64, _2: &amp;ReErased mut state::obligation::Obligation, _3: usize, _4: &amp;ReErased mut state::reserve::Reserve, _5: impl Iterator&lt;Item = T&gt;/#2) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u8;<br align="left"/>let _9: usize;<br align="left"/>let mut _10: usize;<br align="left"/>let mut _11: u8;<br align="left"/>let mut _12: (usize, bool);<br align="left"/>let mut _13: std::iter::Filter&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1691 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits_mut::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _14: std::iter::Filter&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1691 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits_mut::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _15: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _16: std::iter::Filter&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1691 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits_mut::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _17: ();<br align="left"/>let _18: ();<br align="left"/>let mut _19: std::option::Option&lt;&amp;ReErased mut state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _20: &amp;ReErased mut std::iter::Filter&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1691 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits_mut::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _21: &amp;ReErased mut std::iter::Filter&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1691 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits_mut::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _22: isize;<br align="left"/>let mut _23: !;<br align="left"/>let _24: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let _25: T/#1;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, T/#1&gt;;<br align="left"/>let mut _27: std::result::Result&lt;T/#1, anchor_lang::error::Error&gt;;<br align="left"/>let mut _28: std::option::Option&lt;T/#1&gt;;<br align="left"/>let mut _29: &amp;ReErased mut impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _30: Closure(DefId(0:1375 ~ kamino_lending[6389]::lending_market::lending_operations::utils::update_elevation_group_debt_trackers_on_repay::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: T/#1;<br align="left"/>let _36: ();<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _39: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased T/#1;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: anchor_lang::error::Error;<br align="left"/>let mut _44: anchor_lang::error::Error;<br align="left"/>let mut _45: anchor_lang::error::AnchorError;<br align="left"/>let mut _46: std::string::String;<br align="left"/>let mut _47: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _48: anchor_lang::error::ErrorCode;<br align="left"/>let mut _49: u32;<br align="left"/>let mut _50: anchor_lang::error::ErrorCode;<br align="left"/>let mut _51: std::string::String;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _53: anchor_lang::error::ErrorCode;<br align="left"/>let mut _54: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _55: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _56: anchor_lang::error::Source;<br align="left"/>let mut _57: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _58: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _59: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _60: &amp;ReErased T/#1;<br align="left"/>let mut _61: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _64: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _65: &amp;ReErased T/#1;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _70: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _71: u64;<br align="left"/>let mut _72: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _73: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _74: usize;<br align="left"/>let mut _75: usize;<br align="left"/>let mut _76: bool;<br align="left"/>let _77: u64;<br align="left"/>let mut _78: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _79: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _80: usize;<br align="left"/>let mut _81: usize;<br align="left"/>let mut _82: bool;<br align="left"/>let _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: u64;<br align="left"/>let _86: ();<br align="left"/>let mut _87: &amp;ReErased str;<br align="left"/>let _88: &amp;ReErased str;<br align="left"/>let mut _89: &amp;ReErased std::string::String;<br align="left"/>let _90: &amp;ReErased std::string::String;<br align="left"/>let _91: std::string::String;<br align="left"/>let _92: std::string::String;<br align="left"/>let mut _93: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _96: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _97: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _101: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _104: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _105: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased u64;<br align="left"/>let _107: &amp;ReErased u64;<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased u64;<br align="left"/>let _110: &amp;ReErased u64;<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased u64;<br align="left"/>let _113: &amp;ReErased u64;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _116: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _117: usize;<br align="left"/>let mut _118: usize;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: u64;<br align="left"/>let mut _121: u64;<br align="left"/>let mut _122: u64;<br align="left"/>let _123: u64;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: u64;<br align="left"/>let _126: ();<br align="left"/>let mut _127: &amp;ReErased str;<br align="left"/>let _128: &amp;ReErased str;<br align="left"/>let mut _129: &amp;ReErased std::string::String;<br align="left"/>let _130: &amp;ReErased std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let _132: std::string::String;<br align="left"/>let mut _133: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _136: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _137: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _140: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _141: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _142: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased u64;<br align="left"/>let _144: &amp;ReErased u64;<br align="left"/>let mut _145: u64;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: u64;<br align="left"/>let _148: usize;<br align="left"/>let mut _149: usize;<br align="left"/>let mut _150: bool;<br align="left"/>let mut _151: u64;<br align="left"/>let _152: usize;<br align="left"/>let mut _153: usize;<br align="left"/>let mut _154: bool;<br align="left"/>let mut _155: ();<br align="left"/>let mut _156: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _157: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>debug repay_amount =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug obligation_borrow_index =&gt; _3;<br align="left"/>debug borrow_reserve =&gt; _4;<br align="left"/>debug deposit_reserves_iter =&gt; _5;<br align="left"/>debug elevation_group_index =&gt; _9;<br align="left"/>debug iter =&gt; _16;<br align="left"/>debug obligation_deposit =&gt; _24;<br align="left"/>debug deposit_reserve =&gt; _25;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug deposit_reserve =&gt; _62;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug debt_limit =&gt; _71;<br align="left"/>debug pre_debt_amount =&gt; _77;<br align="left"/>debug new_debt_amount =&gt; _83;<br align="left"/>debug res =&gt; _92;<br align="left"/>debug new_total_borrow_amount =&gt; _123;<br align="left"/>debug res =&gt; _132;<br align="left"/>>;
    bb0__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_160 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_2).14: u8)<br/>_7 = Ne(move _8, const _)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_2).14: u8)<br/>_10 = move _11 as usize (IntToInt)<br/>StorageDead(_11)<br/>_12 = CheckedSub(_10, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_12.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _10, const 1_usize)</td></tr></table>>];
    bb2__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_9 = move (_12.0: usize)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_14 = obligation::Obligation::active_deposits_mut(move _15)</td></tr></table>>];
    bb3__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;Filter&lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt;, {closure@programs\klend\src\state\obligation.rs:433:41: 433:44}&gt; as IntoIterator&gt;::into_iter(move _14)</td></tr></table>>];
    bb4__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>_16 = move _13<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut _16<br/>_20 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_19 = &lt;Filter&lt;std::slice::IterMut&lt;'_, obligation::ObligationCollateral&gt;, {closure@programs\klend\src\state\obligation.rs:433:41: 433:44}&gt; as Iterator&gt;::next(move _20)</td></tr></table>>];
    bb6__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_22 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb7__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_19 as Some).0: &amp;mut state::obligation::ObligationCollateral)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut _5<br/></td></tr><tr><td align="left">_28 = &lt;impl Iterator&lt;Item = T&gt; as Iterator&gt;::next(move _29)</td></tr></table>>];
    bb8__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_6 = const ()<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@programs\klend\src\lending_market\lending_operations.rs:2644:33: 2644:35}<br/></td></tr><tr><td align="left">_27 = std::option::Option::&lt;T&gt;::ok_or_else::&lt;anchor_lang::error::Error, {closure@programs\klend\src\lending_market\lending_operations.rs:2644:33: 2644:35}&gt;(move _28, move _30)</td></tr></table>>];
    bb11__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;T, anchor_lang::error::Error&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb12__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb13__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: T)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_161 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_25<br/></td></tr><tr><td align="left">_39 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_pubkey(move _40)</td></tr></table>>];
    bb14__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb15__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_167 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = &amp;((*_24).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _38, move _41)</td></tr></table>>];
    bb17__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb18__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_157 = const _<br/>_47 = &amp;(*_157)<br/></td></tr><tr><td align="left">_46 = anchor_lang::error::ErrorCode::name(move _47)</td></tr></table>>];
    bb19__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = RequireKeysEqViolated<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::error::ErrorCode as Into&lt;u32&gt;&gt;::into(move _50)</td></tr></table>>];
    bb20__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_156 = const _<br/>_52 = &amp;(*_156)<br/></td></tr><tr><td align="left">_51 = &lt;anchor_lang::error::ErrorCode as ToString&gt;::to_string(move _52)</td></tr></table>>];
    bb21__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2645_u32 }<br/>_55 = anchor_lang::error::ErrorOrigin::Source(move _56)<br/>StorageDead(_56)<br/>_54 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _55)<br/>StorageDead(_55)<br/>StorageLive(_57)<br/>_57 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_45 = anchor_lang::error::AnchorError { error_name: move _46, error_code_number: move _49, error_msg: move _51, error_origin: move _54, compared_values: move _57 }<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _45)</td></tr></table>>];
    bb22__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_160 = const true<br/>StorageDead(_45)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_25<br/></td></tr><tr><td align="left">_59 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_pubkey(move _60)</td></tr></table>>];
    bb23__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = ((*_24).0: anchor_lang::prelude::Pubkey)<br/>_58 = (move _59, move _61)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>_160 = const false<br/></td></tr><tr><td align="left">_43 = anchor_lang::error::Error::with_pubkeys(move _44, move _58)</td></tr></table>>];
    bb24__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_160 = const false<br/>StorageDead(_44)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _43)<br/>StorageDead(_43)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>_36 = const ()<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_25<br/></td></tr><tr><td align="left">_64 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_mut(move _65)</td></tr></table>>];
    bb26__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb27__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_66 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb28__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = move ((_63 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_62 = move _70<br/>StorageDead(_70)<br/>_163 = discriminant(_63)<br/>StorageDead(_63)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_62<br/></td></tr><tr><td align="left">_72 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb29__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_69)<br/>_69 = move _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb30__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>_165 = discriminant(_63)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>_74 = _9<br/>_75 = Len((((*_72).9: state::reserve::ReserveConfig).28: [u64; 32]))<br/>_76 = Lt(_74, _75)<br/></td></tr><tr><td align="left">assert(move _76, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _75, _74)</td></tr></table>>];
    bb32__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_71 = (((*_72).9: state::reserve::ReserveConfig).28: [u64; 32])[_74]<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;_62<br/></td></tr><tr><td align="left">_78 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb33__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>_80 = _9<br/>_81 = Len(((*_78).12: [u64; 32]))<br/>_82 = Lt(_80, _81)<br/></td></tr><tr><td align="left">assert(move _82, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _81, _80)</td></tr></table>>];
    bb34__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_77 = ((*_78).12: [u64; 32])[_80]<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = _77<br/>StorageLive(_85)<br/>_85 = _1<br/></td></tr><tr><td align="left">_83 = core::num::&lt;impl u64&gt;::saturating_sub(move _84, move _85)</td></tr></table>>];
    bb35__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_158 = const _<br/>_96 = &amp;(*_158)<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;((*_24).0: anchor_lang::prelude::Pubkey)<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _103)</td></tr></table>>];
    bb36__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_77<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _106)</td></tr></table>>];
    bb37__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_83<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _109)</td></tr></table>>];
    bb38__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_71<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _112)</td></tr></table>>];
    bb39__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_101 = [move _102, move _105, move _108, move _111]<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>_100 = &amp;_101<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_93 = Arguments::&lt;'_&gt;::new_v1(move _94, move _98)</td></tr></table>>];
    bb40__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = format(move _93)</td></tr></table>>];
    bb41__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>_91 = move _92<br/>StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = &lt;std::string::String as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb42__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_87 = &amp;(*_88)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = solana_program::log::sol_log(move _87)</td></tr></table>>];
    bb43__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb44__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageLive(_114)<br/>_114 = _83<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;mut _62<br/></td></tr><tr><td align="left">_115 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _116)</td></tr></table>>];
    bb45__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_117)<br/>_117 = _9<br/>_118 = Len(((*_115).12: [u64; 32]))<br/>_119 = Lt(_117, _118)<br/></td></tr><tr><td align="left">assert(move _119, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _118, _117)</td></tr></table>>];
    bb46__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">((*_115).12: [u64; 32])[_117] = move _114<br/>StorageDead(_114)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = ((*_24).3: u64)<br/>StorageLive(_122)<br/>_122 = _1<br/></td></tr><tr><td align="left">_120 = core::num::&lt;impl u64&gt;::saturating_sub(move _121, move _122)</td></tr></table>>];
    bb47__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>((*_24).3: u64) = move _120<br/>StorageDead(_120)<br/>_18 = const ()<br/>StorageDead(_83)<br/>StorageDead(_77)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb48__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb49__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_17 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = ((*_4).11: u64)<br/>StorageLive(_125)<br/>_125 = _1<br/></td></tr><tr><td align="left">_123 = core::num::&lt;impl u64&gt;::saturating_sub(move _124, move _125)</td></tr></table>>];
    bb51__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_159 = const _<br/>_136 = &amp;(*_159)<br/>_135 = &amp;(*_136)<br/>_134 = move _135 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_135)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;((*_4).11: u64)<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _143)</td></tr></table>>];
    bb52__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_141 = [move _142]<br/>StorageDead(_142)<br/>_140 = &amp;_141<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_133 = Arguments::&lt;'_&gt;::new_v1(move _134, move _138)</td></tr></table>>];
    bb53__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = format(move _133)</td></tr></table>>];
    bb54__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>_131 = move _132<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::string::String as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb55__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_127 = &amp;(*_128)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = solana_program::log::sol_log(move _127)</td></tr></table>>];
    bb56__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb57__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageLive(_145)<br/>_145 = _123<br/>((*_4).11: u64) = move _145<br/>StorageDead(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = _3<br/>_149 = Len(((*_2).7: [state::obligation::ObligationLiquidity; 5]))<br/>_150 = Lt(_148, _149)<br/></td></tr><tr><td align="left">assert(move _150, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _149, _148)</td></tr></table>>];
    bb58__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_147 = (((*_2).7: [state::obligation::ObligationLiquidity; 5])[_148].6: u64)<br/>StorageLive(_151)<br/>_151 = _1<br/></td></tr><tr><td align="left">_146 = core::num::&lt;impl u64&gt;::saturating_sub(move _147, move _151)</td></tr></table>>];
    bb59__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_147)<br/>StorageLive(_152)<br/>_152 = _3<br/>_153 = Len(((*_2).7: [state::obligation::ObligationLiquidity; 5]))<br/>_154 = Lt(_152, _153)<br/></td></tr><tr><td align="left">assert(move _154, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _153, _152)</td></tr></table>>];
    bb60__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">(((*_2).7: [state::obligation::ObligationLiquidity; 5])[_152].6: u64) = move _146<br/>StorageDead(_146)<br/>StorageDead(_152)<br/>StorageDead(_148)<br/>_6 = const ()<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_155)<br/>_155 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _155)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb62__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb63__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb64__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">return</td></tr></table>>];
    bb65__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb66__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb67__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb68__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb69__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb70__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb71__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb72__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left" balign="left">_169 = discriminant(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb74__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">switchInt(_160)</td></tr></table>>];
    bb75__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left" balign="left">_170 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1372 -> bb50__0_1372 [label="0"];
    bb0__0_1372 -> bb1__0_1372 [label="otherwise"];
    bb1__0_1372 -> bb2__0_1372 [label="success"];
    bb1__0_1372 -> bb70__0_1372 [label="unwind"];
    bb2__0_1372 -> bb3__0_1372 [label="return"];
    bb2__0_1372 -> bb70__0_1372 [label="unwind"];
    bb3__0_1372 -> bb4__0_1372 [label="return"];
    bb3__0_1372 -> bb70__0_1372 [label="unwind"];
    bb4__0_1372 -> bb5__0_1372 [label=""];
    bb5__0_1372 -> bb6__0_1372 [label="return"];
    bb5__0_1372 -> bb70__0_1372 [label="unwind"];
    bb6__0_1372 -> bb9__0_1372 [label="0"];
    bb6__0_1372 -> bb7__0_1372 [label="1"];
    bb6__0_1372 -> bb8__0_1372 [label="otherwise"];
    bb7__0_1372 -> bb10__0_1372 [label="return"];
    bb7__0_1372 -> bb70__0_1372 [label="unwind"];
    bb9__0_1372 -> bb61__0_1372 [label=""];
    bb10__0_1372 -> bb11__0_1372 [label="return"];
    bb10__0_1372 -> bb70__0_1372 [label="unwind"];
    bb11__0_1372 -> bb12__0_1372 [label="return"];
    bb11__0_1372 -> bb70__0_1372 [label="unwind"];
    bb12__0_1372 -> bb13__0_1372 [label="0"];
    bb12__0_1372 -> bb14__0_1372 [label="1"];
    bb12__0_1372 -> bb8__0_1372 [label="otherwise"];
    bb13__0_1372 -> bb16__0_1372 [label="return"];
    bb13__0_1372 -> bb69__0_1372 [label="unwind"];
    bb14__0_1372 -> bb15__0_1372 [label="return"];
    bb14__0_1372 -> bb75__0_1372 [label="unwind"];
    bb15__0_1372 -> bb63__0_1372 [label=""];
    bb16__0_1372 -> bb17__0_1372 [label="return"];
    bb16__0_1372 -> bb69__0_1372 [label="unwind"];
    bb17__0_1372 -> bb25__0_1372 [label="0"];
    bb17__0_1372 -> bb18__0_1372 [label="otherwise"];
    bb18__0_1372 -> bb19__0_1372 [label="return"];
    bb18__0_1372 -> bb69__0_1372 [label="unwind"];
    bb19__0_1372 -> bb20__0_1372 [label="return"];
    bb19__0_1372 -> bb68__0_1372 [label="unwind"];
    bb20__0_1372 -> bb21__0_1372 [label="return"];
    bb20__0_1372 -> bb68__0_1372 [label="unwind"];
    bb21__0_1372 -> bb22__0_1372 [label="return"];
    bb21__0_1372 -> bb69__0_1372 [label="unwind"];
    bb22__0_1372 -> bb23__0_1372 [label="return"];
    bb22__0_1372 -> bb74__0_1372 [label="unwind"];
    bb23__0_1372 -> bb24__0_1372 [label="return"];
    bb23__0_1372 -> bb74__0_1372 [label="unwind"];
    bb24__0_1372 -> bb62__0_1372 [label=""];
    bb25__0_1372 -> bb26__0_1372 [label="return"];
    bb25__0_1372 -> bb69__0_1372 [label="unwind"];
    bb26__0_1372 -> bb27__0_1372 [label="return"];
    bb26__0_1372 -> bb69__0_1372 [label="unwind"];
    bb27__0_1372 -> bb28__0_1372 [label="0"];
    bb27__0_1372 -> bb29__0_1372 [label="1"];
    bb27__0_1372 -> bb8__0_1372 [label="otherwise"];
    bb28__0_1372 -> bb31__0_1372 [label="return"];
    bb28__0_1372 -> bb67__0_1372 [label="unwind"];
    bb29__0_1372 -> bb30__0_1372 [label="return"];
    bb29__0_1372 -> bb72__0_1372 [label="unwind"];
    bb30__0_1372 -> bb62__0_1372 [label=""];
    bb31__0_1372 -> bb32__0_1372 [label="success"];
    bb31__0_1372 -> bb67__0_1372 [label="unwind"];
    bb32__0_1372 -> bb33__0_1372 [label="return"];
    bb32__0_1372 -> bb67__0_1372 [label="unwind"];
    bb33__0_1372 -> bb34__0_1372 [label="success"];
    bb33__0_1372 -> bb67__0_1372 [label="unwind"];
    bb34__0_1372 -> bb35__0_1372 [label="return"];
    bb34__0_1372 -> bb67__0_1372 [label="unwind"];
    bb35__0_1372 -> bb36__0_1372 [label="return"];
    bb35__0_1372 -> bb67__0_1372 [label="unwind"];
    bb36__0_1372 -> bb37__0_1372 [label="return"];
    bb36__0_1372 -> bb67__0_1372 [label="unwind"];
    bb37__0_1372 -> bb38__0_1372 [label="return"];
    bb37__0_1372 -> bb67__0_1372 [label="unwind"];
    bb38__0_1372 -> bb39__0_1372 [label="return"];
    bb38__0_1372 -> bb67__0_1372 [label="unwind"];
    bb39__0_1372 -> bb40__0_1372 [label="return"];
    bb39__0_1372 -> bb67__0_1372 [label="unwind"];
    bb40__0_1372 -> bb41__0_1372 [label="return"];
    bb40__0_1372 -> bb67__0_1372 [label="unwind"];
    bb41__0_1372 -> bb42__0_1372 [label="return"];
    bb41__0_1372 -> bb66__0_1372 [label="unwind"];
    bb42__0_1372 -> bb43__0_1372 [label="return"];
    bb42__0_1372 -> bb66__0_1372 [label="unwind"];
    bb43__0_1372 -> bb44__0_1372 [label="return"];
    bb43__0_1372 -> bb67__0_1372 [label="unwind"];
    bb44__0_1372 -> bb45__0_1372 [label="return"];
    bb44__0_1372 -> bb67__0_1372 [label="unwind"];
    bb45__0_1372 -> bb46__0_1372 [label="success"];
    bb45__0_1372 -> bb67__0_1372 [label="unwind"];
    bb46__0_1372 -> bb47__0_1372 [label="return"];
    bb46__0_1372 -> bb67__0_1372 [label="unwind"];
    bb47__0_1372 -> bb48__0_1372 [label="return"];
    bb47__0_1372 -> bb69__0_1372 [label="unwind"];
    bb48__0_1372 -> bb49__0_1372 [label="return"];
    bb48__0_1372 -> bb70__0_1372 [label="unwind"];
    bb49__0_1372 -> bb5__0_1372 [label=""];
    bb50__0_1372 -> bb51__0_1372 [label="return"];
    bb50__0_1372 -> bb70__0_1372 [label="unwind"];
    bb51__0_1372 -> bb52__0_1372 [label="return"];
    bb51__0_1372 -> bb70__0_1372 [label="unwind"];
    bb52__0_1372 -> bb53__0_1372 [label="return"];
    bb52__0_1372 -> bb70__0_1372 [label="unwind"];
    bb53__0_1372 -> bb54__0_1372 [label="return"];
    bb53__0_1372 -> bb70__0_1372 [label="unwind"];
    bb54__0_1372 -> bb55__0_1372 [label="return"];
    bb54__0_1372 -> bb65__0_1372 [label="unwind"];
    bb55__0_1372 -> bb56__0_1372 [label="return"];
    bb55__0_1372 -> bb65__0_1372 [label="unwind"];
    bb56__0_1372 -> bb57__0_1372 [label="return"];
    bb56__0_1372 -> bb70__0_1372 [label="unwind"];
    bb57__0_1372 -> bb58__0_1372 [label="success"];
    bb57__0_1372 -> bb70__0_1372 [label="unwind"];
    bb58__0_1372 -> bb59__0_1372 [label="return"];
    bb58__0_1372 -> bb70__0_1372 [label="unwind"];
    bb59__0_1372 -> bb60__0_1372 [label="success"];
    bb59__0_1372 -> bb70__0_1372 [label="unwind"];
    bb60__0_1372 -> bb61__0_1372 [label=""];
    bb61__0_1372 -> bb64__0_1372 [label="return"];
    bb61__0_1372 -> bb71__0_1372 [label="unwind"];
    bb62__0_1372 -> bb63__0_1372 [label="return"];
    bb62__0_1372 -> bb70__0_1372 [label="unwind"];
    bb63__0_1372 -> bb64__0_1372 [label="return"];
    bb63__0_1372 -> bb71__0_1372 [label="unwind"];
    bb65__0_1372 -> bb70__0_1372 [label="return"];
    bb66__0_1372 -> bb67__0_1372 [label="return"];
    bb67__0_1372 -> bb69__0_1372 [label="return"];
    bb68__0_1372 -> bb69__0_1372 [label="return"];
    bb69__0_1372 -> bb70__0_1372 [label="return"];
    bb70__0_1372 -> bb71__0_1372 [label="return"];
    bb72__0_1372 -> bb69__0_1372 [label=""];
    bb73__0_1372 -> bb69__0_1372 [label="return"];
    bb74__0_1372 -> bb69__0_1372 [label="0"];
    bb74__0_1372 -> bb73__0_1372 [label="otherwise"];
    bb75__0_1372 -> bb70__0_1372 [label=""];
}
