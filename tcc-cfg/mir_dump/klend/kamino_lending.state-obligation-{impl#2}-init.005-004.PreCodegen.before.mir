// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::init` before PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::init(_1: &mut obligation::Obligation, _2: InitObligationParams) -> () {
    debug self => _1;
    debug params => _2;
    let mut _0: ();
    let mut _3: state::obligation::Obligation;
    let mut _4: u64;
    let mut _5: state::last_update::LastUpdate;
    let mut _6: u64;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: anchor_lang::prelude::Pubkey;
    let mut _9: [state::obligation::ObligationCollateral; 8];
    let mut _10: [state::obligation::ObligationLiquidity; 5];
    let mut _11: anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_3);
        _3 = <obligation::Obligation as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        (*_1) = move _3;
        StorageDead(_3);
        StorageLive(_4);
        _4 = (_2.5: u64);
        ((*_1).0: u64) = move _4;
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (_2.0: u64);
        _5 = last_update::LastUpdate::new(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        ((*_1).1: state::last_update::LastUpdate) = move _5;
        StorageDead(_5);
        StorageLive(_7);
        _7 = (_2.1: anchor_lang::prelude::Pubkey);
        ((*_1).2: anchor_lang::prelude::Pubkey) = move _7;
        StorageDead(_7);
        StorageLive(_8);
        _8 = (_2.2: anchor_lang::prelude::Pubkey);
        ((*_1).3: anchor_lang::prelude::Pubkey) = move _8;
        StorageDead(_8);
        StorageLive(_9);
        _9 = (_2.3: [state::obligation::ObligationCollateral; 8]);
        ((*_1).4: [state::obligation::ObligationCollateral; 8]) = move _9;
        StorageDead(_9);
        StorageLive(_10);
        _10 = (_2.4: [state::obligation::ObligationLiquidity; 5]);
        ((*_1).7: [state::obligation::ObligationLiquidity; 5]) = move _10;
        StorageDead(_10);
        StorageLive(_11);
        _11 = (_2.6: anchor_lang::prelude::Pubkey);
        ((*_1).17: anchor_lang::prelude::Pubkey) = move _11;
        StorageDead(_11);
        ((*_1).12: [u8; 8]) = [const _; 8];
        ((*_1).13: [u8; 5]) = [const _; 5];
        _0 = const ();
        return;
    }
}
