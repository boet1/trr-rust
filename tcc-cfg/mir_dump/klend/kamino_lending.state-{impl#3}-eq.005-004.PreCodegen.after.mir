// MIR for `state::<impl at programs\klend\src\state\mod.rs:37:10: 37:19>::eq` after PreCodegen

fn state::<impl at programs\klend\src\state\mod.rs:37:10: 37:19>::eq(_1: &UpdateReserveConfigValue, _2: &UpdateReserveConfigValue) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let _3: isize;
    let mut _4: &state::UpdateReserveConfigValue;
    let mut _6: &state::UpdateReserveConfigValue;
    let mut _7: bool;
    let mut _8: isize;
    let mut _9: isize;
    let mut _10: (&state::UpdateReserveConfigValue, &state::UpdateReserveConfigValue);
    let mut _11: &state::UpdateReserveConfigValue;
    let mut _12: &state::UpdateReserveConfigValue;
    let mut _13: isize;
    let mut _14: isize;
    let mut _15: isize;
    let mut _16: isize;
    let mut _17: isize;
    let mut _18: isize;
    let mut _19: isize;
    let mut _20: isize;
    let mut _21: isize;
    let mut _22: isize;
    let mut _23: isize;
    let mut _24: isize;
    let mut _25: isize;
    let mut _26: isize;
    let mut _29: bool;
    let mut _30: bool;
    let mut _33: u8;
    let mut _34: u8;
    let mut _39: bool;
    let mut _40: u8;
    let mut _41: u8;
    let mut _42: u8;
    let mut _43: u8;
    let mut _46: u16;
    let mut _47: u16;
    let mut _50: u64;
    let mut _51: u64;
    let mut _54: &anchor_lang::prelude::Pubkey;
    let mut _55: &anchor_lang::prelude::Pubkey;
    let mut _58: &[u16; 4];
    let mut _59: &[u16; 4];
    let mut _62: &[u8; 32];
    let mut _63: &[u8; 32];
    let mut _66: &utils::borrow_rate_curve::BorrowRateCurve;
    let mut _67: &utils::borrow_rate_curve::BorrowRateCurve;
    let mut _70: &std::boxed::Box<state::reserve::ReserveConfig>;
    let mut _71: &std::boxed::Box<state::reserve::ReserveConfig>;
    let mut _76: bool;
    let mut _77: u64;
    let mut _78: u64;
    let mut _79: u64;
    let mut _80: u64;
    let mut _83: &[u8; 20];
    let mut _84: &[u8; 20];
    let mut _87: &[u64; 32];
    let mut _88: &[u64; 32];
    let mut _89: !;
    let mut _90: &state::UpdateReserveConfigValue;
    let mut _91: &state::UpdateReserveConfigValue;
    let mut _92: &state::UpdateReserveConfigValue;
    let mut _93: &state::UpdateReserveConfigValue;
    let mut _94: &state::UpdateReserveConfigValue;
    let mut _95: &state::UpdateReserveConfigValue;
    let mut _96: &state::UpdateReserveConfigValue;
    let mut _97: &state::UpdateReserveConfigValue;
    let mut _98: &state::UpdateReserveConfigValue;
    let mut _99: &state::UpdateReserveConfigValue;
    let mut _100: &state::UpdateReserveConfigValue;
    let mut _101: &state::UpdateReserveConfigValue;
    let mut _102: &state::UpdateReserveConfigValue;
    let mut _103: &state::UpdateReserveConfigValue;
    let mut _104: &state::UpdateReserveConfigValue;
    let mut _105: &state::UpdateReserveConfigValue;
    let mut _106: &state::UpdateReserveConfigValue;
    let mut _107: &state::UpdateReserveConfigValue;
    let mut _108: &state::UpdateReserveConfigValue;
    let mut _109: &state::UpdateReserveConfigValue;
    let mut _110: &state::UpdateReserveConfigValue;
    let mut _111: &state::UpdateReserveConfigValue;
    let mut _112: &state::UpdateReserveConfigValue;
    let mut _113: &state::UpdateReserveConfigValue;
    let mut _114: &state::UpdateReserveConfigValue;
    let mut _115: &state::UpdateReserveConfigValue;
    let mut _116: &state::UpdateReserveConfigValue;
    let mut _117: &state::UpdateReserveConfigValue;
    let mut _118: &state::UpdateReserveConfigValue;
    let mut _119: &state::UpdateReserveConfigValue;
    let mut _120: &state::UpdateReserveConfigValue;
    let mut _121: &state::UpdateReserveConfigValue;
    let mut _122: &state::UpdateReserveConfigValue;
    let mut _123: &state::UpdateReserveConfigValue;
    let mut _124: &state::UpdateReserveConfigValue;
    let mut _125: &state::UpdateReserveConfigValue;
    let mut _126: &state::UpdateReserveConfigValue;
    let mut _127: &state::UpdateReserveConfigValue;
    let mut _128: &state::UpdateReserveConfigValue;
    let mut _129: &state::UpdateReserveConfigValue;
    let mut _130: &state::UpdateReserveConfigValue;
    let mut _131: &state::UpdateReserveConfigValue;
    let mut _132: &state::UpdateReserveConfigValue;
    let mut _133: &state::UpdateReserveConfigValue;
    scope 1 {
        debug __self_tag => _3;
        let _5: isize;
        scope 2 {
            debug __arg1_tag => _5;
            let _27: &bool;
            let _28: &bool;
            let _31: &u8;
            let _32: &u8;
            let _35: &u8;
            let _36: &u8;
            let _37: &u8;
            let _38: &u8;
            let _44: &u16;
            let _45: &u16;
            let _48: &u64;
            let _49: &u64;
            let _52: &anchor_lang::prelude::Pubkey;
            let _53: &anchor_lang::prelude::Pubkey;
            let _56: &[u16; 4];
            let _57: &[u16; 4];
            let _60: &[u8; 32];
            let _61: &[u8; 32];
            let _64: &utils::borrow_rate_curve::BorrowRateCurve;
            let _65: &utils::borrow_rate_curve::BorrowRateCurve;
            let _68: &std::boxed::Box<state::reserve::ReserveConfig>;
            let _69: &std::boxed::Box<state::reserve::ReserveConfig>;
            let _72: &u64;
            let _73: &u64;
            let _74: &u64;
            let _75: &u64;
            let _81: &[u8; 20];
            let _82: &[u8; 20];
            let _85: &[u64; 32];
            let _86: &[u64; 32];
            scope 3 {
                debug __self_0 => _27;
                debug __arg1_0 => _28;
            }
            scope 4 {
                debug __self_0 => _31;
                debug __arg1_0 => _32;
            }
            scope 5 {
                debug __self_0 => _35;
                debug __self_1 => _36;
                debug __arg1_0 => _37;
                debug __arg1_1 => _38;
            }
            scope 6 {
                debug __self_0 => _44;
                debug __arg1_0 => _45;
            }
            scope 7 {
                debug __self_0 => _48;
                debug __arg1_0 => _49;
            }
            scope 8 {
                debug __self_0 => _52;
                debug __arg1_0 => _53;
            }
            scope 9 {
                debug __self_0 => _56;
                debug __arg1_0 => _57;
            }
            scope 10 {
                debug __self_0 => _60;
                debug __arg1_0 => _61;
            }
            scope 11 {
                debug __self_0 => _64;
                debug __arg1_0 => _65;
            }
            scope 12 {
                debug __self_0 => _68;
                debug __arg1_0 => _69;
            }
            scope 13 {
                debug __self_0 => _72;
                debug __self_1 => _73;
                debug __arg1_0 => _74;
                debug __arg1_1 => _75;
            }
            scope 14 {
                debug __self_0 => _81;
                debug __arg1_0 => _82;
            }
            scope 15 {
                debug __self_0 => _85;
                debug __arg1_0 => _86;
            }
            scope 16 {
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = discriminant((*_4));
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_2);
        _5 = discriminant((*_6));
        StorageDead(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = _3;
        StorageLive(_9);
        _9 = _5;
        _7 = Eq(move _8, move _9);
        switchInt(move _7) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_9);
        StorageDead(_8);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _1;
        StorageLive(_12);
        _12 = _2;
        _10 = (move _11, move _12);
        StorageDead(_12);
        StorageDead(_11);
        _90 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _26 = discriminant((*_90));
        switchInt(move _26) -> [0: bb3, 1: bb5, 2: bb6, 3: bb7, 4: bb8, 5: bb9, 6: bb10, 7: bb11, 8: bb12, 9: bb13, 10: bb14, 11: bb15, 12: bb16, otherwise: bb4];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_8);
        _0 = const false;
        goto -> bb44;
    }

    bb3: {
        _91 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _13 = discriminant((*_91));
        switchInt(move _13) -> [0: bb17, otherwise: bb4];
    }

    bb4: {
        StorageLive(_89);
        unreachable;
    }

    bb5: {
        _92 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _14 = discriminant((*_92));
        switchInt(move _14) -> [1: bb18, otherwise: bb4];
    }

    bb6: {
        _93 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _15 = discriminant((*_93));
        switchInt(move _15) -> [2: bb19, otherwise: bb4];
    }

    bb7: {
        _94 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _16 = discriminant((*_94));
        switchInt(move _16) -> [3: bb23, otherwise: bb4];
    }

    bb8: {
        _95 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _17 = discriminant((*_95));
        switchInt(move _17) -> [4: bb24, otherwise: bb4];
    }

    bb9: {
        _96 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _18 = discriminant((*_96));
        switchInt(move _18) -> [5: bb25, otherwise: bb4];
    }

    bb10: {
        _97 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _19 = discriminant((*_97));
        switchInt(move _19) -> [6: bb27, otherwise: bb4];
    }

    bb11: {
        _98 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _20 = discriminant((*_98));
        switchInt(move _20) -> [7: bb29, otherwise: bb4];
    }

    bb12: {
        _99 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _21 = discriminant((*_99));
        switchInt(move _21) -> [8: bb31, otherwise: bb4];
    }

    bb13: {
        _100 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _22 = discriminant((*_100));
        switchInt(move _22) -> [9: bb33, otherwise: bb4];
    }

    bb14: {
        _101 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _23 = discriminant((*_101));
        switchInt(move _23) -> [10: bb35, otherwise: bb4];
    }

    bb15: {
        _102 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _24 = discriminant((*_102));
        switchInt(move _24) -> [11: bb39, otherwise: bb4];
    }

    bb16: {
        _103 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _25 = discriminant((*_103));
        switchInt(move _25) -> [12: bb41, otherwise: bb4];
    }

    bb17: {
        StorageLive(_27);
        _104 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _27 = &(((*_104) as Bool).0: bool);
        StorageLive(_28);
        _105 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _28 = &(((*_105) as Bool).0: bool);
        StorageLive(_29);
        _29 = (*_27);
        StorageLive(_30);
        _30 = (*_28);
        _0 = Eq(move _29, move _30);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        goto -> bb43;
    }

    bb18: {
        StorageLive(_31);
        _106 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _31 = &(((*_106) as U8).0: u8);
        StorageLive(_32);
        _107 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _32 = &(((*_107) as U8).0: u8);
        StorageLive(_33);
        _33 = (*_31);
        StorageLive(_34);
        _34 = (*_32);
        _0 = Eq(move _33, move _34);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        goto -> bb43;
    }

    bb19: {
        StorageLive(_35);
        _108 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _35 = &(((*_108) as U8Tuple).0: u8);
        StorageLive(_36);
        _109 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _36 = &(((*_109) as U8Tuple).1: u8);
        StorageLive(_37);
        _110 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _37 = &(((*_110) as U8Tuple).0: u8);
        StorageLive(_38);
        _111 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _38 = &(((*_111) as U8Tuple).1: u8);
        StorageLive(_39);
        StorageLive(_40);
        _40 = (*_35);
        StorageLive(_41);
        _41 = (*_37);
        _39 = Eq(move _40, move _41);
        switchInt(move _39) -> [0: bb21, otherwise: bb20];
    }

    bb20: {
        StorageDead(_41);
        StorageDead(_40);
        StorageLive(_42);
        _42 = (*_36);
        StorageLive(_43);
        _43 = (*_38);
        _0 = Eq(move _42, move _43);
        StorageDead(_43);
        StorageDead(_42);
        goto -> bb22;
    }

    bb21: {
        StorageDead(_41);
        StorageDead(_40);
        _0 = const false;
        goto -> bb22;
    }

    bb22: {
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        goto -> bb43;
    }

    bb23: {
        StorageLive(_44);
        _112 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _44 = &(((*_112) as U16).0: u16);
        StorageLive(_45);
        _113 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _45 = &(((*_113) as U16).0: u16);
        StorageLive(_46);
        _46 = (*_44);
        StorageLive(_47);
        _47 = (*_45);
        _0 = Eq(move _46, move _47);
        StorageDead(_47);
        StorageDead(_46);
        StorageDead(_45);
        StorageDead(_44);
        goto -> bb43;
    }

    bb24: {
        StorageLive(_48);
        _114 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _48 = &(((*_114) as U64).0: u64);
        StorageLive(_49);
        _115 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _49 = &(((*_115) as U64).0: u64);
        StorageLive(_50);
        _50 = (*_48);
        StorageLive(_51);
        _51 = (*_49);
        _0 = Eq(move _50, move _51);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        StorageDead(_48);
        goto -> bb43;
    }

    bb25: {
        StorageLive(_52);
        _116 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _52 = &(((*_116) as Pubkey).0: anchor_lang::prelude::Pubkey);
        StorageLive(_53);
        _117 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _53 = &(((*_117) as Pubkey).0: anchor_lang::prelude::Pubkey);
        StorageLive(_54);
        _54 = &(*_52);
        StorageLive(_55);
        _55 = &(*_53);
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _54, move _55) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_52);
        goto -> bb43;
    }

    bb27: {
        StorageLive(_56);
        _118 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _56 = &(((*_118) as ScopeChain).0: [u16; 4]);
        StorageLive(_57);
        _119 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _57 = &(((*_119) as ScopeChain).0: [u16; 4]);
        StorageLive(_58);
        _58 = &(*_56);
        StorageLive(_59);
        _59 = &(*_57);
        _0 = <[u16; 4] as PartialEq>::eq(move _58, move _59) -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_56);
        goto -> bb43;
    }

    bb29: {
        StorageLive(_60);
        _120 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _60 = &(((*_120) as Name).0: [u8; 32]);
        StorageLive(_61);
        _121 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _61 = &(((*_121) as Name).0: [u8; 32]);
        StorageLive(_62);
        _62 = &(*_60);
        StorageLive(_63);
        _63 = &(*_61);
        _0 = <[u8; 32] as PartialEq>::eq(move _62, move _63) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_61);
        StorageDead(_60);
        goto -> bb43;
    }

    bb31: {
        StorageLive(_64);
        _122 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _64 = &(((*_122) as BorrowRateCurve).0: utils::borrow_rate_curve::BorrowRateCurve);
        StorageLive(_65);
        _123 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _65 = &(((*_123) as BorrowRateCurve).0: utils::borrow_rate_curve::BorrowRateCurve);
        StorageLive(_66);
        _66 = &(*_64);
        StorageLive(_67);
        _67 = &(*_65);
        _0 = <BorrowRateCurve as PartialEq>::eq(move _66, move _67) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_67);
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb43;
    }

    bb33: {
        StorageLive(_68);
        _124 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _68 = &(((*_124) as Full).0: std::boxed::Box<state::reserve::ReserveConfig>);
        StorageLive(_69);
        _125 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _69 = &(((*_125) as Full).0: std::boxed::Box<state::reserve::ReserveConfig>);
        StorageLive(_70);
        _70 = &(*_68);
        StorageLive(_71);
        _71 = &(*_69);
        _0 = <Box<reserve::ReserveConfig> as PartialEq>::eq(move _70, move _71) -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageDead(_71);
        StorageDead(_70);
        StorageDead(_69);
        StorageDead(_68);
        goto -> bb43;
    }

    bb35: {
        StorageLive(_72);
        _126 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _72 = &(((*_126) as WithdrawalCap).0: u64);
        StorageLive(_73);
        _127 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _73 = &(((*_127) as WithdrawalCap).1: u64);
        StorageLive(_74);
        _128 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _74 = &(((*_128) as WithdrawalCap).0: u64);
        StorageLive(_75);
        _129 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _75 = &(((*_129) as WithdrawalCap).1: u64);
        StorageLive(_76);
        StorageLive(_77);
        _77 = (*_72);
        StorageLive(_78);
        _78 = (*_74);
        _76 = Eq(move _77, move _78);
        switchInt(move _76) -> [0: bb37, otherwise: bb36];
    }

    bb36: {
        StorageDead(_78);
        StorageDead(_77);
        StorageLive(_79);
        _79 = (*_73);
        StorageLive(_80);
        _80 = (*_75);
        _0 = Eq(move _79, move _80);
        StorageDead(_80);
        StorageDead(_79);
        goto -> bb38;
    }

    bb37: {
        StorageDead(_78);
        StorageDead(_77);
        _0 = const false;
        goto -> bb38;
    }

    bb38: {
        StorageDead(_76);
        StorageDead(_75);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_72);
        goto -> bb43;
    }

    bb39: {
        StorageLive(_81);
        _130 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _81 = &(((*_130) as ElevationGroups).0: [u8; 20]);
        StorageLive(_82);
        _131 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _82 = &(((*_131) as ElevationGroups).0: [u8; 20]);
        StorageLive(_83);
        _83 = &(*_81);
        StorageLive(_84);
        _84 = &(*_82);
        _0 = <[u8; 20] as PartialEq>::eq(move _83, move _84) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_84);
        StorageDead(_83);
        StorageDead(_82);
        StorageDead(_81);
        goto -> bb43;
    }

    bb41: {
        StorageLive(_85);
        _132 = deref_copy (_10.0: &state::UpdateReserveConfigValue);
        _85 = &(((*_132) as ElevationGroupBorrowLimits).0: [u64; 32]);
        StorageLive(_86);
        _133 = deref_copy (_10.1: &state::UpdateReserveConfigValue);
        _86 = &(((*_133) as ElevationGroupBorrowLimits).0: [u64; 32]);
        StorageLive(_87);
        _87 = &(*_85);
        StorageLive(_88);
        _88 = &(*_86);
        _0 = <[u64; 32] as PartialEq>::eq(move _87, move _88) -> [return: bb42, unwind continue];
    }

    bb42: {
        StorageDead(_88);
        StorageDead(_87);
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb43;
    }

    bb43: {
        StorageDead(_10);
        goto -> bb44;
    }

    bb44: {
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
