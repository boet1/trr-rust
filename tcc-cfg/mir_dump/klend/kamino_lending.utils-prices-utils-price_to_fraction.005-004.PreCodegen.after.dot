digraph Mir_0_2668 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn price_to_fraction(_1: utils::prices::types::Price&lt;T/#0&gt;) -&gt; fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;<br align="left"/>let _2: T/#0;<br align="left"/>let _3: u32;<br align="left"/>let _4: utils::fraction::uint_types::U256;<br align="left"/>let mut _5: T/#0;<br align="left"/>let _6: utils::fraction::uint_types::U128;<br align="left"/>let mut _7: u32;<br align="left"/>let _8: utils::fraction::BigFraction;<br align="left"/>let mut _9: utils::fraction::uint_types::U256;<br align="left"/>let _10: utils::fraction::BigFraction;<br align="left"/>let mut _11: utils::fraction::BigFraction;<br align="left"/>let mut _12: utils::fraction::uint_types::U128;<br align="left"/>let mut _13: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, LendingError&gt;;<br align="left"/>let mut _14: utils::fraction::BigFraction;<br align="left"/>let mut _15: &amp;ReErased str;<br align="left"/>let _16: &amp;ReErased str;<br align="left"/>debug price =&gt; _1;<br align="left"/>debug value =&gt; _2;<br align="left"/>debug exp =&gt; _3;<br align="left"/>debug value =&gt; _4;<br align="left"/>debug decimal =&gt; _6;<br align="left"/>debug value_bf =&gt; _8;<br align="left"/>debug price_bf =&gt; _10;<br align="left"/>>;
    bb0__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = (_1.0: T)<br/>StorageLive(_3)<br/>_3 = (_1.1: u32)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/></td></tr><tr><td align="left">_4 = &lt;T as Into&lt;uint_types::U256&gt;&gt;::into(move _5)</td></tr></table>>];
    bb1__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _3<br/></td></tr><tr><td align="left">_6 = prices::utils::ten_pow(move _7)</td></tr></table>>];
    bb2__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/></td></tr><tr><td align="left">_8 = utils::fraction::BigFraction::from_num::&lt;uint_types::U256&gt;(move _9)</td></tr></table>>];
    bb3__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _8<br/>StorageLive(_12)<br/>_12 = _6<br/></td></tr><tr><td align="left">_10 = &lt;utils::fraction::BigFraction as std::ops::Div&lt;uint_types::U128&gt;&gt;::div(move _11, move _12)</td></tr></table>>];
    bb4__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _10<br/></td></tr><tr><td align="left">_13 = &lt;utils::fraction::BigFraction as TryInto&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::try_into(move _14)</td></tr></table>>];
    bb5__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = const &quot;Failed to convert Price stored on BigFraction to Fraction&quot;<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, LendingError&gt;::expect(move _13, move _15)</td></tr></table>>];
    bb6__0_2668 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2668 -> bb1__0_2668 [label="return"];
    bb1__0_2668 -> bb2__0_2668 [label="return"];
    bb2__0_2668 -> bb3__0_2668 [label="return"];
    bb3__0_2668 -> bb4__0_2668 [label="return"];
    bb4__0_2668 -> bb5__0_2668 [label="return"];
    bb5__0_2668 -> bb6__0_2668 [label="return"];
}
