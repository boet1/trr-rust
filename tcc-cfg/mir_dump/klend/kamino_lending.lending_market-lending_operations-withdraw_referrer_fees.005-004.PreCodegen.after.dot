digraph Mir_0_1338 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::withdraw_referrer_fees(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64, _3: &amp;ReErased mut state::referral::ReferrerTokenState) -&gt; std::result::Result&lt;u64, anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _7: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: bool;<br align="left"/>let mut _15: !;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased std::string::String;<br align="left"/>let _20: &amp;ReErased std::string::String;<br align="left"/>let _21: std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let mut _23: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _26: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _27: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased u8;<br align="left"/>let _34: &amp;ReErased u8;<br align="left"/>let _35: state::last_update::PriceStatusFlags;<br align="left"/>let mut _36: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Placeholder;<br align="left"/>let mut _42: core::fmt::rt::Alignment;<br align="left"/>let mut _43: core::fmt::rt::Count;<br align="left"/>let mut _44: core::fmt::rt::Count;<br align="left"/>let mut _45: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _46: anchor_lang::error::Error;<br align="left"/>let mut _47: anchor_lang::error::AnchorError;<br align="left"/>let mut _48: std::string::String;<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let _50: LendingError;<br align="left"/>let mut _51: u32;<br align="left"/>let mut _52: LendingError;<br align="left"/>let mut _53: std::string::String;<br align="left"/>let mut _54: &amp;ReErased LendingError;<br align="left"/>let _55: LendingError;<br align="left"/>let mut _56: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _57: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _58: anchor_lang::error::Source;<br align="left"/>let mut _59: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _60: u64;<br align="left"/>let mut _61: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _62: &amp;ReErased state::referral::ReferrerTokenState;<br align="left"/>let _63: ();<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: anchor_lang::error::Error;<br align="left"/>let mut _68: anchor_lang::error::AnchorError;<br align="left"/>let mut _69: std::string::String;<br align="left"/>let mut _70: &amp;ReErased LendingError;<br align="left"/>let _71: LendingError;<br align="left"/>let mut _72: u32;<br align="left"/>let mut _73: LendingError;<br align="left"/>let mut _74: std::string::String;<br align="left"/>let mut _75: &amp;ReErased LendingError;<br align="left"/>let _76: LendingError;<br align="left"/>let mut _77: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _78: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _79: anchor_lang::error::Source;<br align="left"/>let mut _80: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: &amp;ReErased mut state::referral::ReferrerTokenState;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _91: ();<br align="left"/>let _92: ();<br align="left"/>let mut _93: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: &amp;ReErased LendingError;<br align="left"/>let mut _96: &amp;ReErased LendingError;<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _98: &amp;ReErased LendingError;<br align="left"/>let mut _99: &amp;ReErased LendingError;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug referrer_token_state =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug res =&gt; _22;<br align="left"/>debug withdraw_amount =&gt; _60;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>>;
    bb0__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_9)<br/>_9 = _2<br/></td></tr><tr><td align="left">_7 = last_update::LastUpdate::is_stale(move _8, move _9, const _)</td></tr></table>>];
    bb1__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: bool)<br/>_5 = _14<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb4__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_108 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = &amp;(_35.0: u8)<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _33)</td></tr></table>>];
    bb8__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = [move _32]<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_43)<br/>_43 = core::fmt::rt::Count::Implied<br/>StorageLive(_44)<br/>_44 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _42, const 8_u32, move _43, move _44)</td></tr></table>>];
    bb9__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageLive(_45)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb10__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">_23 = Arguments::&lt;'_&gt;::new_v1_formatted(move _24, move _28, move _37, move _45)</td></tr></table>>];
    bb11__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_37)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = format(move _23)</td></tr></table>>];
    bb12__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>_21 = move _22<br/>StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::string::String as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb13__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_16 = solana_program::log::sol_log(move _17)</td></tr></table>>];
    bb14__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb15__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_96 = const _<br/>_49 = &amp;(*_96)<br/></td></tr><tr><td align="left">_48 = LendingError::name(move _49)</td></tr></table>>];
    bb16__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_51 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _52)</td></tr></table>>];
    bb17__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_95 = const _<br/>_54 = &amp;(*_95)<br/></td></tr><tr><td align="left">_53 = &lt;LendingError as ToString&gt;::to_string(move _54)</td></tr></table>>];
    bb18__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1968_u32 }<br/>_57 = anchor_lang::error::ErrorOrigin::Source(move _58)<br/>StorageDead(_58)<br/>_56 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _57)<br/>StorageDead(_57)<br/>StorageLive(_59)<br/>_59 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_47 = anchor_lang::error::AnchorError { error_name: move _48, error_code_number: move _51, error_msg: move _53, error_origin: move _56, compared_values: move _59 }<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _47)</td></tr></table>>];
    bb19__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _46)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _60<br/>_64 = Eq(move _65, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb21__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_99 = const _<br/>_70 = &amp;(*_99)<br/></td></tr><tr><td align="left">_69 = LendingError::name(move _70)</td></tr></table>>];
    bb22__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = LendingError::InsufficientReferralFeesToRedeem<br/></td></tr><tr><td align="left">_72 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _73)</td></tr></table>>];
    bb23__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_98 = const _<br/>_75 = &amp;(*_98)<br/></td></tr><tr><td align="left">_74 = &lt;LendingError as ToString&gt;::to_string(move _75)</td></tr></table>>];
    bb24__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1974_u32 }<br/>_78 = anchor_lang::error::ErrorOrigin::Source(move _79)<br/>StorageDead(_79)<br/>_77 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _78)<br/>StorageDead(_78)<br/>StorageLive(_80)<br/>_80 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_68 = anchor_lang::error::AnchorError { error_name: move _69, error_code_number: move _72, error_msg: move _74, error_origin: move _77, compared_values: move _80 }<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _68)</td></tr></table>>];
    bb25__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _67)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_63 = const ()<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;mut ((*_1).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_85)<br/>_85 = _60<br/>StorageLive(_86)<br/>_86 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_83 = ReserveLiquidity::withdraw_referrer_fees(move _84, move _85, move _86)</td></tr></table>>];
    bb27__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb28__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_87 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb29__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_82 as Continue).0: ())<br/>_81 = _91<br/>StorageDead(_91)<br/>_104 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_92 = last_update::LastUpdate::mark_stale(move _93)</td></tr></table>>];
    bb30__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_90)<br/>_90 = move _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb31__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>_106 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_94)<br/>_94 = _60<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Ok(move _94)<br/>StorageDead(_94)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb36__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb37__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb38__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb39__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb40__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_100 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_97 = const _<br/>_26 = &amp;(*_97)<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_35 = last_update::LastUpdate::get_price_status(move _36)</td></tr></table>>];
    bb41__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_102 = discriminant(_6)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_1)<br/>StorageLive(_62)<br/>_62 = &amp;(*_3)<br/></td></tr><tr><td align="left">_60 = reserve::Reserve::get_withdraw_referrer_fees(move _61, move _62)</td></tr></table>>];
    bb42__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left" balign="left">_110 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left" balign="left">_111 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1338 -> bb1__0_1338 [label="return"];
    bb1__0_1338 -> bb2__0_1338 [label="return"];
    bb1__0_1338 -> bb39__0_1338 [label="unwind"];
    bb2__0_1338 -> bb3__0_1338 [label="0"];
    bb2__0_1338 -> bb5__0_1338 [label="1"];
    bb2__0_1338 -> bb4__0_1338 [label="otherwise"];
    bb3__0_1338 -> bb41__0_1338 [label="0"];
    bb3__0_1338 -> bb40__0_1338 [label="otherwise"];
    bb5__0_1338 -> bb6__0_1338 [label="return"];
    bb5__0_1338 -> bb43__0_1338 [label="unwind"];
    bb6__0_1338 -> bb34__0_1338 [label=""];
    bb7__0_1338 -> bb8__0_1338 [label="return"];
    bb8__0_1338 -> bb9__0_1338 [label="return"];
    bb9__0_1338 -> bb10__0_1338 [label="return"];
    bb10__0_1338 -> bb11__0_1338 [label="return"];
    bb11__0_1338 -> bb12__0_1338 [label="return"];
    bb12__0_1338 -> bb13__0_1338 [label="return"];
    bb12__0_1338 -> bb38__0_1338 [label="unwind"];
    bb13__0_1338 -> bb14__0_1338 [label="return"];
    bb13__0_1338 -> bb38__0_1338 [label="unwind"];
    bb14__0_1338 -> bb15__0_1338 [label="return"];
    bb14__0_1338 -> bb39__0_1338 [label="unwind"];
    bb15__0_1338 -> bb16__0_1338 [label="return"];
    bb16__0_1338 -> bb17__0_1338 [label="return"];
    bb16__0_1338 -> bb37__0_1338 [label="unwind"];
    bb17__0_1338 -> bb18__0_1338 [label="return"];
    bb17__0_1338 -> bb37__0_1338 [label="unwind"];
    bb18__0_1338 -> bb19__0_1338 [label="return"];
    bb18__0_1338 -> bb39__0_1338 [label="unwind"];
    bb19__0_1338 -> bb34__0_1338 [label=""];
    bb20__0_1338 -> bb26__0_1338 [label="0"];
    bb20__0_1338 -> bb21__0_1338 [label="otherwise"];
    bb21__0_1338 -> bb22__0_1338 [label="return"];
    bb22__0_1338 -> bb23__0_1338 [label="return"];
    bb22__0_1338 -> bb36__0_1338 [label="unwind"];
    bb23__0_1338 -> bb24__0_1338 [label="return"];
    bb23__0_1338 -> bb36__0_1338 [label="unwind"];
    bb24__0_1338 -> bb25__0_1338 [label="return"];
    bb24__0_1338 -> bb39__0_1338 [label="unwind"];
    bb25__0_1338 -> bb33__0_1338 [label=""];
    bb26__0_1338 -> bb27__0_1338 [label="return"];
    bb27__0_1338 -> bb28__0_1338 [label="return"];
    bb27__0_1338 -> bb39__0_1338 [label="unwind"];
    bb28__0_1338 -> bb29__0_1338 [label="0"];
    bb28__0_1338 -> bb30__0_1338 [label="1"];
    bb28__0_1338 -> bb4__0_1338 [label="otherwise"];
    bb29__0_1338 -> bb32__0_1338 [label="return"];
    bb30__0_1338 -> bb31__0_1338 [label="return"];
    bb30__0_1338 -> bb42__0_1338 [label="unwind"];
    bb31__0_1338 -> bb33__0_1338 [label=""];
    bb32__0_1338 -> bb35__0_1338 [label=""];
    bb33__0_1338 -> bb35__0_1338 [label=""];
    bb34__0_1338 -> bb35__0_1338 [label=""];
    bb36__0_1338 -> bb39__0_1338 [label="return"];
    bb37__0_1338 -> bb39__0_1338 [label="return"];
    bb38__0_1338 -> bb39__0_1338 [label="return"];
    bb40__0_1338 -> bb7__0_1338 [label="return"];
    bb41__0_1338 -> bb20__0_1338 [label="return"];
    bb42__0_1338 -> bb39__0_1338 [label=""];
    bb43__0_1338 -> bb39__0_1338 [label=""];
}
