digraph Mir_0_12667 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn kamino_lending::idl_missing_types(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_update_reserve_config::UpdateReserveConfig&lt;ReErased&gt;&gt;, _2: state::reserve::ReserveFarmKind, _3: state::reserve::AssetTier, _4: state::reserve::FeeCalculation, _5: state::reserve::ReserveStatus, _6: state::UpdateConfigMode, _7: state::UpdateLendingMarketConfigValue, _8: state::UpdateLendingMarketMode) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _9: !;<br align="left"/>let _10: !;<br align="left"/>let mut _11: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _13: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _14: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _15: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _16: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _17: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 0_usize];<br align="left"/>let _18: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 0_usize];<br align="left"/>let _19: [core::fmt::rt::Argument&lt;ReErased&gt;; 0_usize];<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug _ctx =&gt; _1;<br align="left"/>debug _reserve_farm_kind =&gt; _2;<br align="left"/>debug _asset_tier =&gt; _3;<br align="left"/>debug _fee_calculation =&gt; _4;<br align="left"/>debug _reserve_status =&gt; _5;<br align="left"/>debug _update_config_mode =&gt; _6;<br align="left"/>debug _update_lending_market_config_value =&gt; _7;<br align="left"/>debug _update_lending_market_config_mode =&gt; _8;<br align="left"/>>;
    bb0__0_12667 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_20 = const _<br/>_14 = &amp;(*_20)<br/>_13 = &amp;(*_14)<br/>_12 = move _13 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/></td></tr><tr><td align="left">_19 = core::fmt::rt::Argument::&lt;'_&gt;::none()</td></tr></table>>];
    bb1__0_12667 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_18 = &amp;_19<br/>_17 = &amp;(*_18)<br/>_16 = move _17 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_11 = Arguments::&lt;'_&gt;::new_v1(move _12, move _16)</td></tr></table>>];
    bb2__0_12667 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = panic_fmt(move _11)</td></tr></table>>];
    bb0__0_12667 -> bb1__0_12667 [label="return"];
    bb1__0_12667 -> bb2__0_12667 [label="return"];
}
