digraph Mir_0_1572 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_liquidate_obligation(_1: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;<br align="left"/>let _2: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _3: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _4: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _6: std::option::Option&lt;u64&gt;;<br align="left"/>let _7: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _8: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _11: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _13: std::option::Option&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _14: std::option::Option&lt;u64&gt;;<br align="left"/>let _15: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _16: std::option::Option&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _18: ();<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _21: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let _23: ();<br align="left"/>let _24: ();<br align="left"/>let mut _25: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _27: &amp;ReErased [&amp;ReErased str; 7_usize];<br align="left"/>let _28: &amp;ReErased [&amp;ReErased str; 7_usize];<br align="left"/>let _29: [&amp;ReErased str; 7_usize];<br align="left"/>let mut _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _33: [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let mut _34: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _36: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _37: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _39: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _43: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _44: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _46: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased u64;<br align="left"/>let _50: &amp;ReErased u64;<br align="left"/>let _51: u64;<br align="left"/>let mut _52: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _53: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased u64;<br align="left"/>let _56: &amp;ReErased u64;<br align="left"/>let _57: u64;<br align="left"/>let mut _58: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _59: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _60: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased u64;<br align="left"/>let _62: &amp;ReErased u64;<br align="left"/>let _63: u64;<br align="left"/>let mut _64: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _65: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _66: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _68: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _69: u16;<br align="left"/>let mut _70: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _71: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _72: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _73: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _74: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _75: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _76: state::types::LiquidationParams;<br align="left"/>let mut _77: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _78: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _80: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _81: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _82: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _83: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _84: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _85: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _86: u16;<br align="left"/>let mut _87: state::types::LiquidationReason;<br align="left"/>let mut _88: &amp;ReErased [&amp;ReErased str; 7_usize];<br align="left"/>debug lending_market =&gt; _2;<br align="left"/>debug collateral_reserve =&gt; _3;<br align="left"/>debug debt_reserve =&gt; _4;<br align="left"/>debug obligation =&gt; _5;<br align="left"/>debug max_allowed_ltv_override_pct_opt =&gt; _6;<br align="left"/>debug user_ltv =&gt; _7;<br align="left"/>debug user_no_bf_ltv =&gt; _9;<br align="left"/>debug max_allowed_ltv_user =&gt; _11;<br align="left"/>debug max_allowed_ltv_override_opt =&gt; _13;<br align="left"/>debug max_allowed_ltv =&gt; _15;<br align="left"/>debug emode_max_liquidation_bonus_bps =&gt; _69;<br align="left"/>>;
    bb0__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = ((*_1).0: &amp;state::lending_market::LendingMarket)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: &amp;state::reserve::Reserve)<br/>StorageLive(_4)<br/>_4 = ((*_1).2: &amp;state::reserve::Reserve)<br/>StorageLive(_5)<br/>_5 = ((*_1).3: &amp;state::obligation::Obligation)<br/>StorageLive(_6)<br/>_6 = ((*_1).5: std::option::Option&lt;u64&gt;)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_5)<br/></td></tr><tr><td align="left">_7 = obligation::Obligation::loan_to_value(move _8)</td></tr></table>>];
    bb1__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_5)<br/></td></tr><tr><td align="left">_9 = obligation::Obligation::no_bf_loan_to_value(move _10)</td></tr></table>>];
    bb2__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_5)<br/></td></tr><tr><td align="left">_11 = obligation::Obligation::unhealthy_loan_to_value(move _12)</td></tr></table>>];
    bb3__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _6<br/></td></tr><tr><td align="left">_13 = std::option::Option::&lt;u64&gt;::map::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, fn(u64) -&gt; FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; {&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u64&gt;}&gt;(move _14, &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u64&gt;)</td></tr></table>>];
    bb4__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _13<br/>StorageLive(_17)<br/>_17 = _11<br/></td></tr><tr><td align="left">_15 = std::option::Option::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;::unwrap_or(move _16, move _17)</td></tr></table>>];
    bb5__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;_7<br/>StorageLive(_21)<br/>_21 = &amp;_15<br/></td></tr><tr><td align="left">_19 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _20, move _21)</td></tr></table>>];
    bb6__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb7__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_88 = const _<br/>_28 = &amp;(*_88)<br/>_27 = &amp;(*_28)<br/>_26 = move _27 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = ((*_5).8: u128)<br/></td></tr><tr><td align="left">_39 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _40)</td></tr></table>>];
    bb8__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_37 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _38)</td></tr></table>>];
    bb9__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _35)</td></tr></table>>];
    bb10__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = ((*_5).11: u128)<br/></td></tr><tr><td align="left">_46 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _47)</td></tr></table>>];
    bb11__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_45 = &amp;_46<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_44 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _45)</td></tr></table>>];
    bb12__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _42)</td></tr></table>>];
    bb13__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_7<br/></td></tr><tr><td align="left">_52 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_percent::&lt;u64&gt;(move _53)</td></tr></table>>];
    bb14__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = std::option::Option::&lt;u64&gt;::unwrap(move _52)</td></tr></table>>];
    bb15__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _49)</td></tr></table>>];
    bb16__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_15<br/></td></tr><tr><td align="left">_58 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_percent::&lt;u64&gt;(move _59)</td></tr></table>>];
    bb17__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = std::option::Option::&lt;u64&gt;::unwrap(move _58)</td></tr></table>>];
    bb18__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _55)</td></tr></table>>];
    bb19__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_11<br/></td></tr><tr><td align="left">_64 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_percent::&lt;u64&gt;(move _65)</td></tr></table>>];
    bb20__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = std::option::Option::&lt;u64&gt;::unwrap(move _64)</td></tr></table>>];
    bb21__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _61)</td></tr></table>>];
    bb22__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_6<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;std::option::Option&lt;u64&gt;&gt;(move _67)</td></tr></table>>];
    bb23__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_33 = [move _34, move _41, move _48, move _54, move _60, move _66]<br/>StorageDead(_66)<br/>StorageDead(_60)<br/>StorageDead(_54)<br/>StorageDead(_48)<br/>StorageDead(_41)<br/>StorageDead(_34)<br/>_32 = &amp;_33<br/>_31 = &amp;(*_32)<br/>_30 = move _31 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_25 = Arguments::&lt;'_&gt;::new_v1(move _26, move _30)</td></tr></table>>];
    bb24__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = _print(move _25)</td></tr></table>>];
    bb25__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>_23 = const ()<br/>StorageDead(_23)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_2)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;((*_3).9: state::reserve::ReserveConfig)<br/>_71 = &amp;(*_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;((*_4).9: state::reserve::ReserveConfig)<br/>_73 = &amp;(*_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_5)<br/></td></tr><tr><td align="left">_69 = get_emode_max_liquidation_bonus(move _70, move _71, move _73, move _75)</td></tr></table>>];
    bb26__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _7<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;((*_3).9: state::reserve::ReserveConfig)<br/>_79 = &amp;(*_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;((*_4).9: state::reserve::ReserveConfig)<br/>_81 = &amp;(*_82)<br/>StorageLive(_83)<br/>_83 = _15<br/>StorageLive(_84)<br/>_84 = _7<br/>StorageLive(_85)<br/>_85 = _9<br/>StorageLive(_86)<br/>_86 = _69<br/></td></tr><tr><td align="left">_78 = calculate_liquidation_bonus(move _79, move _81, move _83, move _84, move _85, move _86)</td></tr></table>>];
    bb27__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageLive(_87)<br/>_87 = state::types::LiquidationReason::LtvExceeded<br/>_76 = state::types::LiquidationParams { user_ltv: move _77, liquidation_bonus_rate: move _78, liquidation_reason: move _87 }<br/>StorageDead(_87)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::Some(move _76)<br/>StorageDead(_76)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_69)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>_18 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1572 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1572 -> bb1__0_1572 [label="return"];
    bb1__0_1572 -> bb2__0_1572 [label="return"];
    bb2__0_1572 -> bb3__0_1572 [label="return"];
    bb3__0_1572 -> bb4__0_1572 [label="return"];
    bb4__0_1572 -> bb5__0_1572 [label="return"];
    bb5__0_1572 -> bb6__0_1572 [label="return"];
    bb6__0_1572 -> bb28__0_1572 [label="0"];
    bb6__0_1572 -> bb7__0_1572 [label="otherwise"];
    bb7__0_1572 -> bb8__0_1572 [label="return"];
    bb8__0_1572 -> bb9__0_1572 [label="return"];
    bb9__0_1572 -> bb10__0_1572 [label="return"];
    bb10__0_1572 -> bb11__0_1572 [label="return"];
    bb11__0_1572 -> bb12__0_1572 [label="return"];
    bb12__0_1572 -> bb13__0_1572 [label="return"];
    bb13__0_1572 -> bb14__0_1572 [label="return"];
    bb14__0_1572 -> bb15__0_1572 [label="return"];
    bb15__0_1572 -> bb16__0_1572 [label="return"];
    bb16__0_1572 -> bb17__0_1572 [label="return"];
    bb17__0_1572 -> bb18__0_1572 [label="return"];
    bb18__0_1572 -> bb19__0_1572 [label="return"];
    bb19__0_1572 -> bb20__0_1572 [label="return"];
    bb20__0_1572 -> bb21__0_1572 [label="return"];
    bb21__0_1572 -> bb22__0_1572 [label="return"];
    bb22__0_1572 -> bb23__0_1572 [label="return"];
    bb23__0_1572 -> bb24__0_1572 [label="return"];
    bb24__0_1572 -> bb25__0_1572 [label="return"];
    bb25__0_1572 -> bb26__0_1572 [label="return"];
    bb26__0_1572 -> bb27__0_1572 [label="return"];
    bb27__0_1572 -> bb29__0_1572 [label=""];
    bb28__0_1572 -> bb29__0_1572 [label=""];
}
