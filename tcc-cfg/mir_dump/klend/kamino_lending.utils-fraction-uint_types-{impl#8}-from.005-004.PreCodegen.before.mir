// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1310:3: 1310:66>::from` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1310:3: 1310:66>::from(_1: uint_types::U256) -> [u8; 32] {
    debug number => _1;
    let mut _0: [u8; 32];
    let mut _2: [u8; 32];
    let _3: ();
    let mut _4: &utils::fraction::uint_types::U256;
    let mut _5: &mut [u8];
    let mut _6: &mut [u8; 32];
    let mut _7: &mut [u8; 32];
    scope 1 {
        debug arr => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = [const 0_u8; 32];
        StorageLive(_3);
        StorageLive(_4);
        _4 = &_1;
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &mut _2;
        _6 = &mut (*_7);
        _5 = move _6 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_6);
        _3 = uint_types::U256::to_big_endian(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_7);
        StorageDead(_3);
        _0 = _2;
        StorageDead(_2);
        return;
    }
}
