// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:664:17: 664:24>::default` after PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:664:17: 664:24>::default() -> obligation::ObligationLiquidity {
    let mut _0: state::obligation::ObligationLiquidity;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: state::reserve::BigFractionBytes;
    let mut _3: u64;
    let mut _4: u128;
    let mut _5: u128;
    let mut _6: u128;
    let mut _7: u64;
    let mut _8: [u64; 7];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <reserve::BigFractionBytes as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u128 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u128 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <u64 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <[u64; 7] as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        _0 = obligation::ObligationLiquidity { borrow_reserve: move _1, cumulative_borrow_rate_bsf: move _2, padding: move _3, borrowed_amount_sf: move _4, market_value_sf: move _5, borrow_factor_adjusted_market_value_sf: move _6, borrowed_amount_outside_elevation_groups: move _7, padding2: move _8 };
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
