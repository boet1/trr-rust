// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:18:51: 18:60>::eq` after PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:18:51: 18:60>::eq(_1: &BorrowRateCurve, _2: &BorrowRateCurve) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: &[utils::borrow_rate_curve::CurvePoint; 11];
    let mut _4: &[utils::borrow_rate_curve::CurvePoint; 11];

    bb0: {
        StorageLive(_3);
        _3 = &((*_1).0: [utils::borrow_rate_curve::CurvePoint; 11]);
        StorageLive(_4);
        _4 = &((*_2).0: [utils::borrow_rate_curve::CurvePoint; 11]);
        _0 = <[CurvePoint; 11] as PartialEq>::eq(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
