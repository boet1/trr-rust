// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::checked_add` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::checked_add(_1: uint_types::U128, _2: uint_types::U128) -> std::option::Option<uint_types::U128> {
    debug self => _1;
    debug other => _2;
    let mut _0: std::option::Option<utils::fraction::uint_types::U128>;
    let mut _3: (utils::fraction::uint_types::U128, bool);
    let mut _4: utils::fraction::uint_types::U128;
    let mut _5: utils::fraction::uint_types::U128;
    let _6: utils::fraction::uint_types::U128;
    let mut _7: utils::fraction::uint_types::U128;
    scope 1 {
        debug val => _6;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _1;
        StorageLive(_5);
        _5 = _2;
        _3 = uint_types::U128::overflowing_add(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        switchInt((_3.1: bool)) -> [0: bb2, otherwise: bb3];
    }

    bb2: {
        StorageLive(_6);
        _6 = (_3.0: utils::fraction::uint_types::U128);
        StorageLive(_7);
        _7 = _6;
        _0 = std::option::Option::<uint_types::U128>::Some(move _7);
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb4;
    }

    bb3: {
        _0 = std::option::Option::<uint_types::U128>::None;
        goto -> bb4;
    }

    bb4: {
        StorageDead(_3);
        return;
    }
}
