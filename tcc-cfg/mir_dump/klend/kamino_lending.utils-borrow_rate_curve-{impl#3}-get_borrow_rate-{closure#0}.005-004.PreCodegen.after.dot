digraph Mir_0_2220 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn BorrowRateCurve::get_borrow_rate::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:2220 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#3}::get_borrow_rate::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased [utils::borrow_rate_curve::CurvePoint],)) -&gt; (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint), []), ()]), _2: &amp;ReErased [utils::borrow_rate_curve::CurvePoint]) -&gt; (&amp;ReErased utils::borrow_rate_curve::CurvePoint, &amp;ReErased utils::borrow_rate_curve::CurvePoint)<br align="left"/>let _3: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>let _4: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _5: &amp;ReErased [utils::borrow_rate_curve::CurvePoint; 2_usize];<br align="left"/>let mut _6: std::result::Result&lt;&amp;ReErased [utils::borrow_rate_curve::CurvePoint; 2_usize], std::array::TryFromSliceError&gt;;<br align="left"/>let mut _7: &amp;ReErased [utils::borrow_rate_curve::CurvePoint];<br align="left"/>let mut _8: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _9: &amp;ReErased utils::borrow_rate_curve::CurvePoint;<br align="left"/>debug seg =&gt; _2;<br align="left"/>debug first =&gt; _3;<br align="left"/>debug second =&gt; _4;<br align="left"/>>;
    bb0__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = &lt;&amp;[CurvePoint] as TryInto&lt;&amp;[CurvePoint; 2]&gt;&gt;::try_into(move _7)</td></tr></table>>];
    bb1__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;&amp;[CurvePoint; 2], TryFromSliceError&gt;::unwrap(move _6)</td></tr></table>>];
    bb2__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_3)<br/>_3 = &amp;(*_5)[0 of 2]<br/>StorageLive(_4)<br/>_4 = &amp;(*_5)[1 of 2]<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>_8 = _3<br/>StorageLive(_9)<br/>_9 = _4<br/>_0 = (move _8, move _9)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2220 -> bb1__0_2220 [label="return"];
    bb1__0_2220 -> bb2__0_2220 [label="return"];
}
