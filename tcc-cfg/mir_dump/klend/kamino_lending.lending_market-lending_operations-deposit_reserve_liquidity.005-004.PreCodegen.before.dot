digraph Mir_0_1282 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::deposit_reserve_liquidity(_1: &amp;ReErased mut state::reserve::Reserve, _2: &amp;ReErased anchor_lang::prelude::Clock, _3: u64) -&gt; std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: anchor_lang::error::Error;<br align="left"/>let mut _12: anchor_lang::error::AnchorError;<br align="left"/>let mut _13: std::string::String;<br align="left"/>let mut _14: &amp;ReErased LendingError;<br align="left"/>let _15: LendingError;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: LendingError;<br align="left"/>let mut _18: std::string::String;<br align="left"/>let mut _19: &amp;ReErased LendingError;<br align="left"/>let _20: LendingError;<br align="left"/>let mut _21: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _22: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _23: anchor_lang::error::Source;<br align="left"/>let mut _24: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _28: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: bool;<br align="left"/>let mut _36: !;<br align="left"/>let _37: ();<br align="left"/>let mut _38: &amp;ReErased str;<br align="left"/>let _39: &amp;ReErased str;<br align="left"/>let mut _40: anchor_lang::error::Error;<br align="left"/>let mut _41: anchor_lang::error::AnchorError;<br align="left"/>let mut _42: std::string::String;<br align="left"/>let mut _43: &amp;ReErased LendingError;<br align="left"/>let _44: LendingError;<br align="left"/>let mut _45: u32;<br align="left"/>let mut _46: LendingError;<br align="left"/>let mut _47: std::string::String;<br align="left"/>let mut _48: &amp;ReErased LendingError;<br align="left"/>let _49: LendingError;<br align="left"/>let mut _50: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _51: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _52: anchor_lang::error::Source;<br align="left"/>let mut _53: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _54: state::types::DepositLiquidityResult;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, state::types::DepositLiquidityResult&gt;;<br align="left"/>let mut _56: std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;;<br align="left"/>let mut _57: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _63: state::types::DepositLiquidityResult;<br align="left"/>let _64: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _65: u64;<br align="left"/>let _66: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _67: u64;<br align="left"/>let _68: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _69: &amp;ReErased state::reserve::ReserveLiquidity;<br align="left"/>let _70: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _71: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _72: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _73: ();<br align="left"/>let mut _74: bool;<br align="left"/>let mut _75: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _76: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased str;<br align="left"/>let _80: &amp;ReErased str;<br align="left"/>let mut _81: &amp;ReErased std::string::String;<br align="left"/>let _82: &amp;ReErased std::string::String;<br align="left"/>let _83: std::string::String;<br align="left"/>let _84: std::string::String;<br align="left"/>let mut _85: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _87: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _88: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _89: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _90: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _91: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _92: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _93: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _94: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _96: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased u64;<br align="left"/>let _99: &amp;ReErased u64;<br align="left"/>let mut _100: anchor_lang::error::Error;<br align="left"/>let mut _101: anchor_lang::error::AnchorError;<br align="left"/>let mut _102: std::string::String;<br align="left"/>let mut _103: &amp;ReErased LendingError;<br align="left"/>let _104: LendingError;<br align="left"/>let mut _105: u32;<br align="left"/>let mut _106: LendingError;<br align="left"/>let mut _107: std::string::String;<br align="left"/>let mut _108: &amp;ReErased LendingError;<br align="left"/>let _109: LendingError;<br align="left"/>let mut _110: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _111: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _112: anchor_lang::error::Source;<br align="left"/>let mut _113: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _114: ();<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, ()&gt;;<br align="left"/>let mut _116: std::result::Result&lt;(), LendingError&gt;;<br align="left"/>let mut _117: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _118: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _119: u64;<br align="left"/>let mut _120: u64;<br align="left"/>let mut _121: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _122: i64;<br align="left"/>let mut _123: isize;<br align="left"/>let _124: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _125: !;<br align="left"/>let mut _126: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _127: ();<br align="left"/>let _128: ();<br align="left"/>let mut _129: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _130: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _131: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _132: u64;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _138: ();<br align="left"/>let _139: ();<br align="left"/>let mut _140: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _141: state::types::DepositLiquidityResult;<br align="left"/>let mut _142: &amp;ReErased LendingError;<br align="left"/>let mut _143: &amp;ReErased LendingError;<br align="left"/>let mut _144: &amp;ReErased LendingError;<br align="left"/>let mut _145: &amp;ReErased LendingError;<br align="left"/>let mut _146: &amp;ReErased LendingError;<br align="left"/>let mut _147: &amp;ReErased LendingError;<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug liquidity_amount =&gt; _3;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug deposit_result =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug liquidity_amount_f =&gt; _64;<br align="left"/>debug deposit_limit_f =&gt; _66;<br align="left"/>debug reserve_liquidity_supply_f =&gt; _68;<br align="left"/>debug new_reserve_liquidity_supply_f =&gt; _70;<br align="left"/>debug res =&gt; _84;<br align="left"/>debug residual =&gt; _124;<br align="left"/>debug val =&gt; _127;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>>;
    bb0__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>_5 = Eq(move _6, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = const &quot;Liquidity amount provided cannot be zero&quot;<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb2__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_143 = const _<br/>_14 = &amp;(*_143)<br/></td></tr><tr><td align="left">_13 = LendingError::name(move _14)</td></tr></table>>];
    bb3__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = LendingError::InvalidAmount<br/></td></tr><tr><td align="left">_16 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _17)</td></tr></table>>];
    bb4__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_142 = const _<br/>_19 = &amp;(*_142)<br/></td></tr><tr><td align="left">_18 = &lt;LendingError as ToString&gt;::to_string(move _19)</td></tr></table>>];
    bb5__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 122_u32 }<br/>_22 = anchor_lang::error::ErrorOrigin::Source(move _23)<br/>StorageDead(_23)<br/>_21 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _22)<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_12 = anchor_lang::error::AnchorError { error_name: move _13, error_code_number: move _16, error_msg: move _18, error_origin: move _21, compared_values: move _24 }<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _12)</td></tr></table>>];
    bb6__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Err(move _11)<br/>StorageDead(_11)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_30)<br/>_30 = ((*_2).0: u64)<br/></td></tr><tr><td align="left">_28 = last_update::LastUpdate::is_stale(move _29, move _30, const _)</td></tr></table>>];
    bb8__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb9__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_31 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb10__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Continue).0: bool)<br/>_26 = _35<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_161 = discriminant(_27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_145 = const _<br/>_43 = &amp;(*_145)<br/></td></tr><tr><td align="left">_42 = LendingError::name(move _43)</td></tr></table>>];
    bb15__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_45 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _46)</td></tr></table>>];
    bb16__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_144 = const _<br/>_48 = &amp;(*_144)<br/></td></tr><tr><td align="left">_47 = &lt;LendingError as ToString&gt;::to_string(move _48)</td></tr></table>>];
    bb17__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 130_u32 }<br/>_51 = anchor_lang::error::ErrorOrigin::Source(move _52)<br/>StorageDead(_52)<br/>_50 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _51)<br/>StorageDead(_51)<br/>StorageLive(_53)<br/>_53 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_41 = anchor_lang::error::AnchorError { error_name: move _42, error_code_number: move _45, error_msg: move _47, error_origin: move _50, compared_values: move _53 }<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _41)</td></tr></table>>];
    bb18__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Err(move _40)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb20__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb21__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = move ((_55 as Continue).0: state::types::DepositLiquidityResult)<br/>_54 = move _63<br/>StorageDead(_63)<br/>_153 = discriminant(_55)<br/>StorageDead(_55)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = (_54.0: u64)<br/></td></tr><tr><td align="left">_64 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _65)</td></tr></table>>];
    bb22__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_62)<br/>_62 = move _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb23__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>_159 = discriminant(_55)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = (((*_1).9: state::reserve::ReserveConfig).17: u64)<br/></td></tr><tr><td align="left">_66 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _67)</td></tr></table>>];
    bb25__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;((*_1).5: state::reserve::ReserveLiquidity)<br/></td></tr><tr><td align="left">_68 = ReserveLiquidity::total_supply(move _69)</td></tr></table>>];
    bb26__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _64<br/>StorageLive(_72)<br/>_72 = _68<br/></td></tr><tr><td align="left">_70 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _71, move _72)</td></tr></table>>];
    bb27__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;_70<br/>StorageLive(_76)<br/>_76 = &amp;_66<br/></td></tr><tr><td align="left">_74 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _75, move _76)</td></tr></table>>];
    bb28__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb29__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_148 = const _<br/>_88 = &amp;(*_148)<br/>_87 = &amp;(*_88)<br/>_86 = move _87 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;_70<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _95)</td></tr></table>>];
    bb30__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(((*_1).9: state::reserve::ReserveConfig).17: u64)<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _98)</td></tr></table>>];
    bb31__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_93 = [move _94, move _97]<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>_92 = &amp;_93<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_85 = Arguments::&lt;'_&gt;::new_v1(move _86, move _90)</td></tr></table>>];
    bb32__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = format(move _85)</td></tr></table>>];
    bb33__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_88)<br/>_83 = move _84<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::string::String as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb34__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_79 = &amp;(*_80)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_78 = solana_program::log::sol_log(move _79)</td></tr></table>>];
    bb35__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb36__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_147 = const _<br/>_103 = &amp;(*_147)<br/></td></tr><tr><td align="left">_102 = LendingError::name(move _103)</td></tr></table>>];
    bb37__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = LendingError::DepositLimitExceeded<br/></td></tr><tr><td align="left">_105 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _106)</td></tr></table>>];
    bb38__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_146 = const _<br/>_108 = &amp;(*_146)<br/></td></tr><tr><td align="left">_107 = &lt;LendingError as ToString&gt;::to_string(move _108)</td></tr></table>>];
    bb39__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 149_u32 }<br/>_111 = anchor_lang::error::ErrorOrigin::Source(move _112)<br/>StorageDead(_112)<br/>_110 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _111)<br/>StorageDead(_111)<br/>StorageLive(_113)<br/>_113 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_101 = anchor_lang::error::AnchorError { error_name: move _102, error_code_number: move _105, error_msg: move _107, error_origin: move _110, compared_values: move _113 }<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _101)</td></tr></table>>];
    bb40__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Err(move _100)<br/>StorageDead(_100)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>_73 = const ()<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut (((*_1).9: state::reserve::ReserveConfig).20: state::reserve::WithdrawalCaps)<br/>_117 = &amp;mut (*_118)<br/>StorageLive(_119)<br/>_119 = (_54.0: u64)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = ((*_2).4: i64)<br/></td></tr><tr><td align="left">_121 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _122)</td></tr></table>>];
    bb42__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _121)</td></tr></table>>];
    bb43__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_116 = sub_from_withdrawal_accum(move _117, move _119, move _120)</td></tr></table>>];
    bb44__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;(), LendingError&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb45__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_123 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb46__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = ((_115 as Continue).0: ())<br/>_114 = _127<br/>StorageDead(_127)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;mut (*_1)<br/>StorageLive(_132)<br/>_132 = (_54.0: u64)<br/>StorageLive(_133)<br/>_133 = (_54.1: u64)<br/></td></tr><tr><td align="left">_130 = reserve::Reserve::deposit_liquidity(move _131, move _132, move _133)</td></tr></table>>];
    bb47__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_126)<br/>_126 = _124<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _126)</td></tr></table>>];
    bb48__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_129 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _130)</td></tr></table>>];
    bb50__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_134 = discriminant(_129)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb51__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_129 as Continue).0: ())<br/>_128 = _138<br/>StorageDead(_138)<br/>_155 = discriminant(_129)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_139 = last_update::LastUpdate::mark_stale(move _140)</td></tr></table>>];
    bb52__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = move ((_129 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_137)<br/>_137 = move _135<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb53__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>_157 = discriminant(_129)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_141)<br/>_141 = move _54<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Ok(move _141)<br/>StorageDead(_141)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">return</td></tr></table>>];
    bb59__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb60__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb61__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_42)</td></tr></table>>];
    bb62__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb63__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb64__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_149 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = const &quot;Reserve is stale and must be refreshed in the current slot&quot;<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_37 = solana_program::log::sol_log(move _38)</td></tr></table>>];
    bb65__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_151 = discriminant(_27)<br/>StorageDead(_27)<br/>_25 = const ()<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_1)<br/>StorageLive(_58)<br/>_58 = _3<br/></td></tr><tr><td align="left">_56 = reserve::Reserve::compute_depositable_amount_and_minted_collateral(move _57, move _58)</td></tr></table>>];
    bb66__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_163 = discriminant(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_164 = discriminant(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1282 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_165 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1282 -> bb7__0_1282 [label="0"];
    bb0__0_1282 -> bb1__0_1282 [label="otherwise"];
    bb1__0_1282 -> bb2__0_1282 [label="return"];
    bb2__0_1282 -> bb3__0_1282 [label="return"];
    bb3__0_1282 -> bb4__0_1282 [label="return"];
    bb3__0_1282 -> bb62__0_1282 [label="unwind"];
    bb4__0_1282 -> bb5__0_1282 [label="return"];
    bb4__0_1282 -> bb62__0_1282 [label="unwind"];
    bb5__0_1282 -> bb6__0_1282 [label="return"];
    bb5__0_1282 -> bb63__0_1282 [label="unwind"];
    bb6__0_1282 -> bb58__0_1282 [label=""];
    bb7__0_1282 -> bb8__0_1282 [label="return"];
    bb8__0_1282 -> bb9__0_1282 [label="return"];
    bb8__0_1282 -> bb63__0_1282 [label="unwind"];
    bb9__0_1282 -> bb10__0_1282 [label="0"];
    bb9__0_1282 -> bb12__0_1282 [label="1"];
    bb9__0_1282 -> bb11__0_1282 [label="otherwise"];
    bb10__0_1282 -> bb65__0_1282 [label="0"];
    bb10__0_1282 -> bb64__0_1282 [label="otherwise"];
    bb12__0_1282 -> bb13__0_1282 [label="return"];
    bb12__0_1282 -> bb68__0_1282 [label="unwind"];
    bb13__0_1282 -> bb57__0_1282 [label=""];
    bb14__0_1282 -> bb15__0_1282 [label="return"];
    bb15__0_1282 -> bb16__0_1282 [label="return"];
    bb15__0_1282 -> bb61__0_1282 [label="unwind"];
    bb16__0_1282 -> bb17__0_1282 [label="return"];
    bb16__0_1282 -> bb61__0_1282 [label="unwind"];
    bb17__0_1282 -> bb18__0_1282 [label="return"];
    bb17__0_1282 -> bb63__0_1282 [label="unwind"];
    bb18__0_1282 -> bb57__0_1282 [label=""];
    bb19__0_1282 -> bb20__0_1282 [label="return"];
    bb19__0_1282 -> bb63__0_1282 [label="unwind"];
    bb20__0_1282 -> bb21__0_1282 [label="0"];
    bb20__0_1282 -> bb22__0_1282 [label="1"];
    bb20__0_1282 -> bb11__0_1282 [label="otherwise"];
    bb21__0_1282 -> bb24__0_1282 [label="return"];
    bb22__0_1282 -> bb23__0_1282 [label="return"];
    bb22__0_1282 -> bb67__0_1282 [label="unwind"];
    bb23__0_1282 -> bb56__0_1282 [label=""];
    bb24__0_1282 -> bb25__0_1282 [label="return"];
    bb25__0_1282 -> bb26__0_1282 [label="return"];
    bb26__0_1282 -> bb27__0_1282 [label="return"];
    bb27__0_1282 -> bb28__0_1282 [label="return"];
    bb28__0_1282 -> bb41__0_1282 [label="0"];
    bb28__0_1282 -> bb29__0_1282 [label="otherwise"];
    bb29__0_1282 -> bb30__0_1282 [label="return"];
    bb30__0_1282 -> bb31__0_1282 [label="return"];
    bb31__0_1282 -> bb32__0_1282 [label="return"];
    bb32__0_1282 -> bb33__0_1282 [label="return"];
    bb33__0_1282 -> bb34__0_1282 [label="return"];
    bb33__0_1282 -> bb60__0_1282 [label="unwind"];
    bb34__0_1282 -> bb35__0_1282 [label="return"];
    bb34__0_1282 -> bb60__0_1282 [label="unwind"];
    bb35__0_1282 -> bb36__0_1282 [label="return"];
    bb35__0_1282 -> bb63__0_1282 [label="unwind"];
    bb36__0_1282 -> bb37__0_1282 [label="return"];
    bb37__0_1282 -> bb38__0_1282 [label="return"];
    bb37__0_1282 -> bb59__0_1282 [label="unwind"];
    bb38__0_1282 -> bb39__0_1282 [label="return"];
    bb38__0_1282 -> bb59__0_1282 [label="unwind"];
    bb39__0_1282 -> bb40__0_1282 [label="return"];
    bb39__0_1282 -> bb63__0_1282 [label="unwind"];
    bb40__0_1282 -> bb55__0_1282 [label=""];
    bb41__0_1282 -> bb42__0_1282 [label="return"];
    bb42__0_1282 -> bb43__0_1282 [label="return"];
    bb43__0_1282 -> bb44__0_1282 [label="return"];
    bb44__0_1282 -> bb45__0_1282 [label="return"];
    bb45__0_1282 -> bb46__0_1282 [label="0"];
    bb45__0_1282 -> bb47__0_1282 [label="1"];
    bb45__0_1282 -> bb11__0_1282 [label="otherwise"];
    bb46__0_1282 -> bb49__0_1282 [label="return"];
    bb47__0_1282 -> bb48__0_1282 [label="return"];
    bb48__0_1282 -> bb55__0_1282 [label=""];
    bb49__0_1282 -> bb50__0_1282 [label="return"];
    bb49__0_1282 -> bb63__0_1282 [label="unwind"];
    bb50__0_1282 -> bb51__0_1282 [label="0"];
    bb50__0_1282 -> bb52__0_1282 [label="1"];
    bb50__0_1282 -> bb11__0_1282 [label="otherwise"];
    bb51__0_1282 -> bb54__0_1282 [label="return"];
    bb52__0_1282 -> bb53__0_1282 [label="return"];
    bb52__0_1282 -> bb66__0_1282 [label="unwind"];
    bb53__0_1282 -> bb55__0_1282 [label=""];
    bb54__0_1282 -> bb58__0_1282 [label=""];
    bb55__0_1282 -> bb56__0_1282 [label=""];
    bb56__0_1282 -> bb58__0_1282 [label=""];
    bb57__0_1282 -> bb58__0_1282 [label=""];
    bb59__0_1282 -> bb63__0_1282 [label="return"];
    bb60__0_1282 -> bb63__0_1282 [label="return"];
    bb61__0_1282 -> bb63__0_1282 [label="return"];
    bb62__0_1282 -> bb63__0_1282 [label="return"];
    bb64__0_1282 -> bb14__0_1282 [label="return"];
    bb65__0_1282 -> bb19__0_1282 [label="return"];
    bb66__0_1282 -> bb63__0_1282 [label=""];
    bb67__0_1282 -> bb63__0_1282 [label=""];
    bb68__0_1282 -> bb63__0_1282 [label=""];
}
