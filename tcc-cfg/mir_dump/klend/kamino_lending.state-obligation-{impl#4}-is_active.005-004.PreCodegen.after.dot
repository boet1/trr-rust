digraph Mir_0_1738 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::ObligationLiquidity::is_active(_1: &amp;ReErased state::obligation::ObligationLiquidity) -&gt; bool<br align="left"/>let mut _2: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _4: anchor_lang::prelude::Pubkey;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_1738 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb1__0_1738 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = &amp;_4<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _2, move _3)</td></tr></table>>];
    bb2__0_1738 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1738 -> bb1__0_1738 [label="return"];
    bb1__0_1738 -> bb2__0_1738 [label="return"];
}
