digraph Mir_0_2474 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn utils::fraction::&lt;impl From&lt;uint_types::U128&gt; for uint_types::U256&gt;::from(_1: utils::fraction::uint_types::U128) -&gt; utils::fraction::uint_types::U256<br align="left"/>let mut _2: [u64; 4_usize];<br align="left"/>let mut _3: u64;<br align="left"/>let _4: usize;<br align="left"/>let mut _5: usize;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u64;<br align="left"/>let _8: usize;<br align="left"/>let mut _9: usize;<br align="left"/>let mut _10: bool;<br align="left"/>debug value =&gt; _1;<br align="left"/>>;
    bb0__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = const 0_usize<br/>_5 = Len((_1.0: [u64; 2]))<br/>_6 = Lt(_4, _5)<br/></td></tr><tr><td align="left">assert(move _6, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _5, _4)</td></tr></table>>];
    bb1__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = (_1.0: [u64; 2])[_4]<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const 1_usize<br/>_9 = Len((_1.0: [u64; 2]))<br/>_10 = Lt(_8, _9)<br/></td></tr><tr><td align="left">assert(move _10, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _9, _8)</td></tr></table>>];
    bb2__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = (_1.0: [u64; 2])[_8]<br/>_2 = [move _3, move _7, const 0_u64, const 0_u64]<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>_0 = uint_types::U256(move _2)<br/>StorageDead(_2)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2474 -> bb1__0_2474 [label="success"];
    bb1__0_2474 -> bb2__0_2474 [label="success"];
}
