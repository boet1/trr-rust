digraph Mir_0_1663 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::max_withdraw_value(_1: &amp;ReErased state::obligation::Obligation, _2: &amp;ReErased state::obligation::ObligationCollateral, _3: u8, _4: u8, _5: state::types::LtvMaxWithdrawalCheck) -&gt; fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;<br align="left"/>let _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _7: u8;<br align="left"/>let mut _8: (fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, u8);<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _11: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>let _12: state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: u8;<br align="left"/>let mut _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: u8;<br align="left"/>let _20: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let _22: ();<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _25: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let _27: ();<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: u8;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _33: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _34: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _35: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: u8;<br align="left"/>let mut _38: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug obligation_collateral =&gt; _2;<br align="left"/>debug reserve_max_ltv_pct =&gt; _3;<br align="left"/>debug reserve_liq_threshold_pct =&gt; _4;<br align="left"/>debug ltv_max_withdrawal_check =&gt; _5;<br align="left"/>debug highest_allowed_borrow_value =&gt; _6;<br align="left"/>debug withdraw_collateral_ltv_pct =&gt; _7;<br align="left"/>debug borrow_factor_adjusted_debt_value =&gt; _20;<br align="left"/>>;
    bb0__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_5<br/>StorageLive(_11)<br/>_38 = const _<br/>_11 = &amp;(*_38)<br/></td></tr><tr><td align="left">_9 = &lt;state::types::LtvMaxWithdrawalCheck as PartialEq&gt;::eq(move _10, move _11)</td></tr></table>>];
    bb1__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb2__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_1).11: u128)<br/></td></tr><tr><td align="left">_14 = core::num::&lt;impl u128&gt;::saturating_sub(move _15, const 1_u128)</td></tr></table>>];
    bb3__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _14)</td></tr></table>>];
    bb4__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>_16 = _4<br/>_8 = (move _13, move _16)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_1).10: u128)<br/></td></tr><tr><td align="left">_17 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _18)</td></tr></table>>];
    bb6__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/>_8 = (move _17, move _19)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_6)<br/>_6 = (_8.0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_7)<br/>_7 = (_8.1: u8)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((*_1).8: u128)<br/></td></tr><tr><td align="left">_20 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _21)</td></tr></table>>];
    bb8__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;_6<br/>StorageLive(_25)<br/>_25 = &amp;_20<br/></td></tr><tr><td align="left">_23 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::le(move _24, move _25)</td></tr></table>>];
    bb9__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>_0 = const _<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>_22 = const ()<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _7<br/>_28 = Eq(move _29, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = ((*_2).2: u128)<br/></td></tr><tr><td align="left">_0 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _31)</td></tr></table>>];
    bb13__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _6<br/>StorageLive(_35)<br/>_35 = _20<br/></td></tr><tr><td align="left">_33 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_sub(move _34, move _35)</td></tr></table>>];
    bb14__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&lt;u128&gt;&gt;::mul(move _33, const 100_u128)</td></tr></table>>];
    bb16__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _7<br/></td></tr><tr><td align="left">_36 = &lt;u128 as From&lt;u8&gt;&gt;::from(move _37)</td></tr></table>>];
    bb17__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_0 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&lt;u128&gt;&gt;::div(move _32, move _36)</td></tr></table>>];
    bb18__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1663 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1663 -> bb1__0_1663 [label="return"];
    bb1__0_1663 -> bb5__0_1663 [label="0"];
    bb1__0_1663 -> bb2__0_1663 [label="otherwise"];
    bb2__0_1663 -> bb3__0_1663 [label="return"];
    bb3__0_1663 -> bb4__0_1663 [label="return"];
    bb4__0_1663 -> bb7__0_1663 [label=""];
    bb5__0_1663 -> bb6__0_1663 [label="return"];
    bb6__0_1663 -> bb7__0_1663 [label=""];
    bb7__0_1663 -> bb8__0_1663 [label="return"];
    bb8__0_1663 -> bb9__0_1663 [label="return"];
    bb9__0_1663 -> bb11__0_1663 [label="0"];
    bb9__0_1663 -> bb10__0_1663 [label="otherwise"];
    bb10__0_1663 -> bb19__0_1663 [label=""];
    bb11__0_1663 -> bb13__0_1663 [label="0"];
    bb11__0_1663 -> bb12__0_1663 [label="otherwise"];
    bb12__0_1663 -> bb14__0_1663 [label="return"];
    bb13__0_1663 -> bb15__0_1663 [label="return"];
    bb14__0_1663 -> bb19__0_1663 [label=""];
    bb15__0_1663 -> bb16__0_1663 [label="return"];
    bb16__0_1663 -> bb17__0_1663 [label="return"];
    bb17__0_1663 -> bb18__0_1663 [label="return"];
    bb18__0_1663 -> bb20__0_1663 [label=""];
    bb19__0_1663 -> bb20__0_1663 [label=""];
}
