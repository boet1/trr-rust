digraph Mir_0_111 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_deposit_obligation_collateral::process_v2(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;ReErased&gt;;<br align="left"/>let _7: &amp;ReErased handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;ReErased&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: ();<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _17: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _21: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _22: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _23: state::reserve::ReserveFarmKind;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _25: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _27: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: ();<br align="left"/>let mut _35: ();<br align="left"/>let mut _36: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;ReErased&gt;;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>>;
    bb0__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_36 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_7 = &amp;((*_36).0: handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;'_&gt;)<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_5 = handlers::handler_deposit_obligation_collateral::process_impl(move _6, move _8)</td></tr></table>>];
    bb1__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_4 as Continue).0: ())<br/>_3 = _13<br/>StorageDead(_13)<br/>_42 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_37 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_20 = &amp;(((*_37).0: handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_19 = &amp;(*_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_38 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_22 = &amp;((*_38).2: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_21 = &amp;(*_22)<br/>StorageLive(_23)<br/>_23 = reserve::ReserveFarmKind::Collateral<br/>_18 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _19, farms_accounts: move _21, farm_kind: move _23 }<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_39 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_25 = &amp;(((*_39).0: handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_24 = &amp;(*_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_40 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_27 = &amp;((*_40).1: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_26 = &amp;(*_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_41 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_obligation_collateral::DepositObligationCollateralV2&lt;'_&gt;)<br/>_29 = &amp;(((*_41).0: handlers::handler_deposit_obligation_collateral::DepositObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_17 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _18, move _24, move _26, move _28)</td></tr></table>>];
    bb4__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_48 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_30 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb9__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_16 as Continue).0: ())<br/>_15 = _34<br/>StorageDead(_34)<br/>_44 = discriminant(_16)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>_14 = const ()<br/>StorageDead(_14)<br/>StorageLive(_35)<br/>_35 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb11__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_46 = discriminant(_16)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb13__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb14__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left" balign="left">_50 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_111 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left" balign="left">_51 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_111 -> bb1__0_111 [label="return"];
    bb1__0_111 -> bb2__0_111 [label="return"];
    bb1__0_111 -> bb13__0_111 [label="unwind"];
    bb2__0_111 -> bb3__0_111 [label="0"];
    bb2__0_111 -> bb5__0_111 [label="1"];
    bb2__0_111 -> bb4__0_111 [label="otherwise"];
    bb3__0_111 -> bb7__0_111 [label="return"];
    bb5__0_111 -> bb6__0_111 [label="return"];
    bb5__0_111 -> bb15__0_111 [label="unwind"];
    bb6__0_111 -> bb12__0_111 [label=""];
    bb7__0_111 -> bb8__0_111 [label="return"];
    bb7__0_111 -> bb13__0_111 [label="unwind"];
    bb8__0_111 -> bb9__0_111 [label="0"];
    bb8__0_111 -> bb10__0_111 [label="1"];
    bb8__0_111 -> bb4__0_111 [label="otherwise"];
    bb9__0_111 -> bb12__0_111 [label=""];
    bb10__0_111 -> bb11__0_111 [label="return"];
    bb10__0_111 -> bb14__0_111 [label="unwind"];
    bb11__0_111 -> bb12__0_111 [label=""];
    bb14__0_111 -> bb13__0_111 [label=""];
    bb15__0_111 -> bb13__0_111 [label=""];
}
