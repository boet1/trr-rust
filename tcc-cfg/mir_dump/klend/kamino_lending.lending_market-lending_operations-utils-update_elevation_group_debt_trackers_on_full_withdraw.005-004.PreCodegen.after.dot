digraph Mir_0_1378 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_elevation_group_debt_trackers_on_full_withdraw(_1: u64, _2: u8, _3: &amp;ReErased mut state::reserve::Reserve) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u8;<br align="left"/>let _7: usize;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: u8;<br align="left"/>let mut _10: (usize, bool);<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let _13: usize;<br align="left"/>let mut _14: usize;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u64;<br align="left"/>let _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: ();<br align="left"/>debug previous_debt_in_elevation_group =&gt; _1;<br align="left"/>debug elevation_group_id =&gt; _2;<br align="left"/>debug deposit_reserve =&gt; _3;<br align="left"/>debug elevation_group_index =&gt; _7;<br align="left"/>>;
    bb0__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_5 = Ne(move _6, const _)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/>_8 = move _9 as usize (IntToInt)<br/>StorageDead(_9)<br/>_10 = CheckedSub(_8, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_10.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _8, const 1_usize)</td></tr></table>>];
    bb2__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = move (_10.0: usize)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _7<br/>_14 = Len(((*_3).12: [u64; 32]))<br/>_15 = Lt(_13, _14)<br/></td></tr><tr><td align="left">assert(move _15, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _14, _13)</td></tr></table>>];
    bb3__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_12 = ((*_3).12: [u64; 32])[_13]<br/>StorageLive(_16)<br/>_16 = _1<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl u64&gt;::saturating_sub(move _12, move _16)</td></tr></table>>];
    bb4__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_12)<br/>StorageLive(_17)<br/>_17 = _7<br/>_18 = Len(((*_3).12: [u64; 32]))<br/>_19 = Lt(_17, _18)<br/></td></tr><tr><td align="left">assert(move _19, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _18, _17)</td></tr></table>>];
    bb5__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">((*_3).12: [u64; 32])[_17] = move _11<br/>StorageDead(_11)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>_4 = const ()<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1378 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_20)<br/>_20 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1378 -> bb6__0_1378 [label="0"];
    bb0__0_1378 -> bb1__0_1378 [label="otherwise"];
    bb1__0_1378 -> bb2__0_1378 [label="success"];
    bb2__0_1378 -> bb3__0_1378 [label="success"];
    bb3__0_1378 -> bb4__0_1378 [label="return"];
    bb4__0_1378 -> bb5__0_1378 [label="success"];
    bb5__0_1378 -> bb7__0_1378 [label=""];
    bb6__0_1378 -> bb7__0_1378 [label=""];
}
