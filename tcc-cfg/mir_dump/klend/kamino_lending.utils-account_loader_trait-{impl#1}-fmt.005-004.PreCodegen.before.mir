// MIR for `account_loader_trait::<impl at programs\klend\src\utils\account_loader_trait.rs:41:1: 41:88>::fmt` before PreCodegen

fn account_loader_trait::<impl at programs\klend\src\utils\account_loader_trait.rs:41:1: 41:88>::fmt(_1: &account_loader_trait::FatAccountLoader<'_, T>, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _4: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _5: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _6: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _7: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _8: std::fmt::DebugStruct<'_, '_>;
    let mut _9: &mut std::fmt::Formatter<'_>;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &dyn std::fmt::Debug;
    let mut _15: &anchor_lang::prelude::AccountInfo<'_>;
    let _16: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _17: &str;
    let _18: &str;
    let mut _19: &dyn std::fmt::Debug;
    let mut _20: &std::marker::PhantomData<&T>;
    let _21: &std::marker::PhantomData<&T>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut (*_2);
        StorageLive(_10);
        StorageLive(_11);
        _11 = const "AccountLoader";
        _10 = &(*_11);
        _8 = Formatter::<'_>::debug_struct(move _9, move _10) -> [return: bb1, unwind continue];
    }

    bb1: {
        _7 = &mut _8;
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_12);
        StorageLive(_13);
        _13 = const "acc_info";
        _12 = &(*_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).0: anchor_lang::prelude::AccountInfo<'_>);
        _15 = &(*_16);
        _14 = move _15 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_15);
        _6 = DebugStruct::<'_, '_>::field(move _7, move _12, move _14) -> [return: bb2, unwind continue];
    }

    bb2: {
        _5 = &mut (*_6);
        StorageDead(_14);
        StorageDead(_12);
        StorageDead(_7);
        StorageLive(_17);
        StorageLive(_18);
        _18 = const "phantom";
        _17 = &(*_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = &((*_1).1: std::marker::PhantomData<&T>);
        _20 = &(*_21);
        _19 = move _20 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_20);
        _4 = DebugStruct::<'_, '_>::field(move _5, move _17, move _19) -> [return: bb3, unwind continue];
    }

    bb3: {
        _3 = &mut (*_4);
        StorageDead(_19);
        StorageDead(_17);
        StorageDead(_5);
        _0 = DebugStruct::<'_, '_>::finish(move _3) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_3);
        StorageDead(_21);
        StorageDead(_18);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        return;
    }
}
