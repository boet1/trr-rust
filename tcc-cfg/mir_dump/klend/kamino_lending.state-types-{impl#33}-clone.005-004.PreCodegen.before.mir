// MIR for `state::types::<impl at programs\klend\src\state\types.rs:86:17: 86:22>::clone` before PreCodegen

fn state::types::<impl at programs\klend\src\state\types.rs:86:17: 86:22>::clone(_1: &state::types::LiquidateAndRedeemResult) -> state::types::LiquidateAndRedeemResult {
    debug self => _1;
    let mut _0: state::types::LiquidateAndRedeemResult;
    let mut _2: u64;
    let mut _3: &u64;
    let _4: &u64;
    let mut _5: u64;
    let mut _6: &u64;
    let _7: &u64;
    let mut _8: u64;
    let mut _9: &u64;
    let _10: &u64;
    let mut _11: std::option::Option<(u64, u64)>;
    let mut _12: &std::option::Option<(u64, u64)>;
    let _13: &std::option::Option<(u64, u64)>;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: u64);
        _3 = &(*_4);
        _2 = <u64 as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: u64);
        _6 = &(*_7);
        _5 = <u64 as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: u64);
        _9 = &(*_10);
        _8 = <u64 as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: std::option::Option<(u64, u64)>);
        _12 = &(*_13);
        _11 = <std::option::Option<(u64, u64)> as Clone>::clone(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_12);
        _0 = state::types::LiquidateAndRedeemResult { repay_amount: move _2, withdraw_amount: move _5, withdraw_collateral_amount: move _8, total_withdraw_liquidity_amount: move _11 };
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
