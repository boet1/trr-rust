// MIR for `state::<impl at programs\klend\src\state\mod.rs:196:5: 196:21>::try_from_primitive` before PreCodegen

fn state::<impl at programs\klend\src\state\mod.rs:196:5: 196:21>::try_from_primitive(_1: u64) -> std::result::Result<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>> {
    debug number => _1;
    let mut _0: std::result::Result<state::UpdateLendingMarketMode, num_enum::TryFromPrimitiveError<state::UpdateLendingMarketMode>>;
    let mut _2: state::UpdateLendingMarketMode;
    let mut _3: state::UpdateLendingMarketMode;
    let mut _4: state::UpdateLendingMarketMode;
    let mut _5: state::UpdateLendingMarketMode;
    let mut _6: state::UpdateLendingMarketMode;
    let mut _7: state::UpdateLendingMarketMode;
    let mut _8: state::UpdateLendingMarketMode;
    let mut _9: state::UpdateLendingMarketMode;
    let mut _10: state::UpdateLendingMarketMode;
    let mut _11: state::UpdateLendingMarketMode;
    let mut _12: state::UpdateLendingMarketMode;
    let mut _13: state::UpdateLendingMarketMode;
    let mut _14: state::UpdateLendingMarketMode;
    let mut _15: state::UpdateLendingMarketMode;
    let mut _16: state::UpdateLendingMarketMode;
    let mut _17: state::UpdateLendingMarketMode;
    let mut _18: state::UpdateLendingMarketMode;
    let mut _19: state::UpdateLendingMarketMode;
    let mut _20: state::UpdateLendingMarketMode;
    let mut _21: state::UpdateLendingMarketMode;
    let mut _22: state::UpdateLendingMarketMode;
    let mut _23: state::UpdateLendingMarketMode;
    let mut _24: state::UpdateLendingMarketMode;
    let mut _25: state::UpdateLendingMarketMode;
    let mut _26: state::UpdateLendingMarketMode;
    let mut _27: num_enum::TryFromPrimitiveError<state::UpdateLendingMarketMode>;
    let mut _28: u64;
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        switchInt(_1) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, 12: bb14, 13: bb15, 14: bb16, 15: bb17, 16: bb18, 17: bb19, 18: bb20, 19: bb21, 20: bb22, 21: bb23, 22: bb24, 23: bb25, 24: bb26, otherwise: bb1];
    }

    bb1: {
        StorageLive(_27);
        StorageLive(_28);
        _28 = _1;
        _27 = TryFromPrimitiveError::<state::UpdateLendingMarketMode>::new(move _28) -> [return: bb27, unwind continue];
    }

    bb2: {
        StorageLive(_2);
        _2 = state::UpdateLendingMarketMode::UpdateOwner;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _2);
        StorageDead(_2);
        goto -> bb28;
    }

    bb3: {
        StorageLive(_3);
        _3 = state::UpdateLendingMarketMode::UpdateEmergencyMode;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _3);
        StorageDead(_3);
        goto -> bb28;
    }

    bb4: {
        StorageLive(_4);
        _4 = state::UpdateLendingMarketMode::UpdateLiquidationCloseFactor;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _4);
        StorageDead(_4);
        goto -> bb28;
    }

    bb5: {
        StorageLive(_5);
        _5 = state::UpdateLendingMarketMode::UpdateLiquidationMaxValue;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _5);
        StorageDead(_5);
        goto -> bb28;
    }

    bb6: {
        StorageLive(_6);
        _6 = state::UpdateLendingMarketMode::DeprecatedUpdateGlobalUnhealthyBorrow;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _6);
        StorageDead(_6);
        goto -> bb28;
    }

    bb7: {
        StorageLive(_7);
        _7 = state::UpdateLendingMarketMode::UpdateGlobalAllowedBorrow;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _7);
        StorageDead(_7);
        goto -> bb28;
    }

    bb8: {
        StorageLive(_8);
        _8 = state::UpdateLendingMarketMode::UpdateRiskCouncil;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _8);
        StorageDead(_8);
        goto -> bb28;
    }

    bb9: {
        StorageLive(_9);
        _9 = state::UpdateLendingMarketMode::UpdateMinFullLiquidationThreshold;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _9);
        StorageDead(_9);
        goto -> bb28;
    }

    bb10: {
        StorageLive(_10);
        _10 = state::UpdateLendingMarketMode::UpdateInsolvencyRiskLtv;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _10);
        StorageDead(_10);
        goto -> bb28;
    }

    bb11: {
        StorageLive(_11);
        _11 = state::UpdateLendingMarketMode::UpdateElevationGroup;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _11);
        StorageDead(_11);
        goto -> bb28;
    }

    bb12: {
        StorageLive(_12);
        _12 = state::UpdateLendingMarketMode::UpdateReferralFeeBps;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _12);
        StorageDead(_12);
        goto -> bb28;
    }

    bb13: {
        StorageLive(_13);
        _13 = state::UpdateLendingMarketMode::DeprecatedUpdateMultiplierPoints;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _13);
        StorageDead(_13);
        goto -> bb28;
    }

    bb14: {
        StorageLive(_14);
        _14 = state::UpdateLendingMarketMode::UpdatePriceRefreshTriggerToMaxAgePct;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _14);
        StorageDead(_14);
        goto -> bb28;
    }

    bb15: {
        StorageLive(_15);
        _15 = state::UpdateLendingMarketMode::UpdateAutodeleverageEnabled;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _15);
        StorageDead(_15);
        goto -> bb28;
    }

    bb16: {
        StorageLive(_16);
        _16 = state::UpdateLendingMarketMode::UpdateBorrowingDisabled;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _16);
        StorageDead(_16);
        goto -> bb28;
    }

    bb17: {
        StorageLive(_17);
        _17 = state::UpdateLendingMarketMode::UpdateMinNetValueObligationPostAction;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _17);
        StorageDead(_17);
        goto -> bb28;
    }

    bb18: {
        StorageLive(_18);
        _18 = state::UpdateLendingMarketMode::UpdateMinValueLtvSkipPriorityLiqCheck;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _18);
        StorageDead(_18);
        goto -> bb28;
    }

    bb19: {
        StorageLive(_19);
        _19 = state::UpdateLendingMarketMode::UpdateMinValueBfSkipPriorityLiqCheck;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _19);
        StorageDead(_19);
        goto -> bb28;
    }

    bb20: {
        StorageLive(_20);
        _20 = state::UpdateLendingMarketMode::UpdatePaddingFields;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _20);
        StorageDead(_20);
        goto -> bb28;
    }

    bb21: {
        StorageLive(_21);
        _21 = state::UpdateLendingMarketMode::UpdateName;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _21);
        StorageDead(_21);
        goto -> bb28;
    }

    bb22: {
        StorageLive(_22);
        _22 = state::UpdateLendingMarketMode::UpdateIndividualAutodeleverageMarginCallPeriodSecs;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _22);
        StorageDead(_22);
        goto -> bb28;
    }

    bb23: {
        StorageLive(_23);
        _23 = state::UpdateLendingMarketMode::UpdateInitialDepositAmount;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _23);
        StorageDead(_23);
        goto -> bb28;
    }

    bb24: {
        StorageLive(_24);
        _24 = state::UpdateLendingMarketMode::UpdateObligationOrderExecutionEnabled;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _24);
        StorageDead(_24);
        goto -> bb28;
    }

    bb25: {
        StorageLive(_25);
        _25 = state::UpdateLendingMarketMode::UpdateImmutableFlag;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _25);
        StorageDead(_25);
        goto -> bb28;
    }

    bb26: {
        StorageLive(_26);
        _26 = state::UpdateLendingMarketMode::UpdateObligationOrderCreationEnabled;
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Ok(move _26);
        StorageDead(_26);
        goto -> bb28;
    }

    bb27: {
        StorageDead(_28);
        _0 = std::result::Result::<state::UpdateLendingMarketMode, TryFromPrimitiveError<state::UpdateLendingMarketMode>>::Err(move _27);
        StorageDead(_27);
        goto -> bb28;
    }

    bb28: {
        return;
    }
}
