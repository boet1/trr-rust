digraph Mir_0_81 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_deposit_and_withdraw::process::{closure#1}(_1: &amp;ReErased mut Closure(DefId(0:81 ~ kamino_lending[6389]::handlers::handler_deposit_and_withdraw::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, []), (&amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;, &amp;ReErased mut bool)]), _2: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _5: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _14: &amp;ReErased mut bool;<br align="left"/>let mut _15: &amp;ReErased mut bool;<br align="left"/>debug account =&gt; _2;<br align="left"/>debug ctx__accounts__withdraw_accounts__withdraw_reserve =&gt; (*((*_1).0: &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;));<br align="left"/>debug withdraw_reserve_found =&gt; (*((*_1).1: &amp;mut bool));<br align="left"/>>;
    bb0__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_2)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _6)</td></tr></table>>];
    bb1__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;_5<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_13 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_9 = &amp;(*_13)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Key&gt;::key(move _9)</td></tr></table>>];
    bb2__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = &amp;_8<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_3 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _4, move _7)</td></tr></table>>];
    bb3__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb4__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_10)<br/>_14 = deref_copy ((*_1).1: &amp;mut bool)<br/>_10 = (*_14)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb5__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_15 = deref_copy ((*_1).1: &amp;mut bool)<br/>(*_15) = const true<br/>_0 = std::option::Option::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _12)</td></tr></table>>];
    bb8__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::option::Option::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::Some(move _11)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_81 -> bb1__0_81 [label="return"];
    bb1__0_81 -> bb2__0_81 [label="return"];
    bb2__0_81 -> bb3__0_81 [label="return"];
    bb3__0_81 -> bb6__0_81 [label="0"];
    bb3__0_81 -> bb4__0_81 [label="otherwise"];
    bb4__0_81 -> bb5__0_81 [label="0"];
    bb4__0_81 -> bb7__0_81 [label="otherwise"];
    bb5__0_81 -> bb9__0_81 [label=""];
    bb6__0_81 -> bb7__0_81 [label=""];
    bb7__0_81 -> bb8__0_81 [label="return"];
    bb8__0_81 -> bb9__0_81 [label=""];
}
