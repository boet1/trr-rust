digraph Mir_0_2605 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_base_price(_1: &amp;ReErased scope_types::OraclePrices, _2: u16) -&gt; std::option::Option&lt;(utils::prices::types::Price&lt;u64&gt;, u64)&gt;<br align="left"/>let mut _3: std::option::Option&lt;&amp;ReErased scope_types::DatedPrice&gt;;<br align="left"/>let mut _4: &amp;ReErased [scope_types::DatedPrice];<br align="left"/>let mut _5: &amp;ReErased [scope_types::DatedPrice; 512_usize];<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: u16;<br align="left"/>let mut _8: Closure(DefId(0:2606 ~ kamino_lending[6389]::utils::prices::scope::get_base_price::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased scope_types::DatedPrice,)) -&gt; (utils::prices::types::Price&lt;u64&gt;, u64), []), ()]);<br align="left"/>debug scope_prices =&gt; _1;<br align="left"/>debug token =&gt; _2;<br align="left"/>>;
    bb0__0_2605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_1).1: [scope_types::DatedPrice; 512])<br/>_4 = move _5 as &amp;[scope_types::DatedPrice] (PointerCoercion(Unsize))<br/>StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_6 = &lt;usize as From&lt;u16&gt;&gt;::from(move _7)</td></tr></table>>];
    bb1__0_2605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_3 = core::slice::&lt;impl [scope_types::DatedPrice]&gt;::get::&lt;usize&gt;(move _4, move _6)</td></tr></table>>];
    bb2__0_2605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>_8 = {closure@programs\klend\src\utils\prices\scope.rs:154:14: 154:21}<br/></td></tr><tr><td align="left">_0 = std::option::Option::&lt;&amp;scope_types::DatedPrice&gt;::map::&lt;(prices::types::Price&lt;u64&gt;, u64), {closure@programs\klend\src\utils\prices\scope.rs:154:14: 154:21}&gt;(move _3, move _8)</td></tr></table>>];
    bb3__0_2605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2605 -> bb1__0_2605 [label="return"];
    bb1__0_2605 -> bb2__0_2605 [label="return"];
    bb2__0_2605 -> bb3__0_2605 [label="return"];
}
