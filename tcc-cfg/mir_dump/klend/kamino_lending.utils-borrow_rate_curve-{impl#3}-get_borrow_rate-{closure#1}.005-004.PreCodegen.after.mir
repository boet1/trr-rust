// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate::{closure#1}` after PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate::{closure#1}(_1: &mut {closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36}, _2: &(&CurvePoint, &CurvePoint)) -> bool {
    debug utilization_rate_bps => (*((*_1).0: &u32));
    let mut _0: bool;
    let _3: &&utils::borrow_rate_curve::CurvePoint;
    let _4: &&utils::borrow_rate_curve::CurvePoint;
    let mut _5: bool;
    let mut _6: u32;
    let mut _7: u32;
    let mut _8: u32;
    let mut _9: u32;
    let mut _10: &u32;
    let mut _11: &utils::borrow_rate_curve::CurvePoint;
    let mut _12: &u32;
    let mut _13: &utils::borrow_rate_curve::CurvePoint;
    scope 1 {
        debug first => _3;
        debug second => _4;
    }

    bb0: {
        StorageLive(_3);
        _3 = &((*_2).0: &utils::borrow_rate_curve::CurvePoint);
        StorageLive(_4);
        _4 = &((*_2).1: &utils::borrow_rate_curve::CurvePoint);
        StorageLive(_5);
        StorageLive(_6);
        _10 = deref_copy ((*_1).0: &u32);
        _6 = (*_10);
        StorageLive(_7);
        _11 = deref_copy (*_3);
        _7 = ((*_11).0: u32);
        _5 = Ge(move _6, move _7);
        switchInt(move _5) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_8);
        _12 = deref_copy ((*_1).0: &u32);
        _8 = (*_12);
        StorageLive(_9);
        _13 = deref_copy (*_4);
        _9 = ((*_13).0: u32);
        _0 = Le(move _8, move _9);
        StorageDead(_9);
        StorageDead(_8);
        goto -> bb3;
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_6);
        _0 = const false;
        goto -> bb3;
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
