digraph Mir_0_1736 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::ObligationLiquidity::accrue_interest(_1: &amp;ReErased mut state::obligation::ObligationLiquidity, _2: utils::fraction::BigFraction) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: utils::fraction::uint_types::U256;<br align="left"/>let mut _4: [u64; 4_usize];<br align="left"/>let _5: utils::fraction::uint_types::U256;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::cmp::Ordering;<br align="left"/>let mut _8: &amp;ReErased utils::fraction::uint_types::U256;<br align="left"/>let mut _9: &amp;ReErased utils::fraction::uint_types::U256;<br align="left"/>let _10: &amp;ReErased utils::fraction::uint_types::U256;<br align="left"/>let mut _11: i8;<br align="left"/>let mut _12: !;<br align="left"/>let _13: ();<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _17: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _18: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _19: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _20: anchor_lang::error::Error;<br align="left"/>let mut _21: anchor_lang::error::AnchorError;<br align="left"/>let mut _22: std::string::String;<br align="left"/>let mut _23: &amp;ReErased LendingError;<br align="left"/>let _24: LendingError;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: LendingError;<br align="left"/>let mut _27: std::string::String;<br align="left"/>let mut _28: &amp;ReErased LendingError;<br align="left"/>let _29: LendingError;<br align="left"/>let mut _30: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _31: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _32: anchor_lang::error::Source;<br align="left"/>let mut _33: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _34: utils::fraction::uint_types::U256;<br align="left"/>let mut _35: utils::fraction::uint_types::U256;<br align="left"/>let mut _36: utils::fraction::uint_types::U256;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: utils::fraction::uint_types::U256;<br align="left"/>let mut _39: utils::fraction::uint_types::U256;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, anchor_lang::error::Error&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, &amp;ReErased str&gt;;<br align="left"/>let mut _44: utils::fraction::uint_types::U256;<br align="left"/>let mut _45: Closure(DefId(0:1737 ~ kamino_lending[6389]::state::obligation::{impl#4}::accrue_interest::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased str,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: u128;<br align="left"/>let mut _51: [u64; 4_usize];<br align="left"/>let mut _52: ();<br align="left"/>let mut _53: &amp;ReErased LendingError;<br align="left"/>let mut _54: &amp;ReErased LendingError;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug new_cumulative_borrow_rate =&gt; _2;<br align="left"/>debug former_cumulative_borrow_rate_bsf =&gt; _3;<br align="left"/>debug new_cumulative_borrow_rate_bsf =&gt; _5;<br align="left"/>debug borrowed_amount_sf_u256 =&gt; _34;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>>;
    bb0__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = (((*_1).1: state::reserve::BigFractionBytes).0: [u64; 4])<br/>_3 = uint_types::U256(move _4)<br/>StorageDead(_4)<br/>StorageLive(_5)<br/>_5 = (_2.0: utils::fraction::uint_types::U256)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_5<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_3<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_7 = &lt;uint_types::U256 as Ord&gt;::cmp(move _8, move _9)</td></tr></table>>];
    bb1__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb2__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = ((*_1).3: u128)<br/></td></tr><tr><td align="left">_36 = &lt;uint_types::U256 as From&lt;u128&gt;&gt;::from(move _37)</td></tr></table>>];
    bb3__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_55 = const _<br/>_18 = &amp;(*_55)<br/>_17 = &amp;(*_18)<br/>_16 = move _17 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = Arguments::&lt;'_&gt;::new_const(move _16)</td></tr></table>>];
    bb5__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = _print(move _15)</td></tr></table>>];
    bb6__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>_13 = const ()<br/>StorageDead(_13)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_54 = const _<br/>_23 = &amp;(*_54)<br/></td></tr><tr><td align="left">_22 = LendingError::name(move _23)</td></tr></table>>];
    bb7__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = LendingError::NegativeInterestRate<br/></td></tr><tr><td align="left">_25 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _26)</td></tr></table>>];
    bb8__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_53 = const _<br/>_28 = &amp;(*_53)<br/></td></tr><tr><td align="left">_27 = &lt;LendingError as ToString&gt;::to_string(move _28)</td></tr></table>>];
    bb9__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\obligation.rs&quot;, line: const 727_u32 }<br/>_31 = anchor_lang::error::ErrorOrigin::Source(move _32)<br/>StorageDead(_32)<br/>_30 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _31)<br/>StorageDead(_31)<br/>StorageLive(_33)<br/>_33 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_21 = anchor_lang::error::AnchorError { error_name: move _22, error_code_number: move _25, error_msg: move _27, error_origin: move _30, compared_values: move _33 }<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _21)</td></tr></table>>];
    bb10__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = _5<br/></td></tr><tr><td align="left">_35 = &lt;uint_types::U256 as std::ops::Mul&gt;::mul(move _36, move _38)</td></tr></table>>];
    bb13__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>_39 = _3<br/></td></tr><tr><td align="left">_34 = &lt;uint_types::U256 as std::ops::Div&gt;::div(move _35, move _39)</td></tr></table>>];
    bb14__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _34<br/></td></tr><tr><td align="left">_43 = &lt;uint_types::U256 as TryInto&lt;u128&gt;&gt;::try_into(move _44)</td></tr></table>>];
    bb15__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_45)<br/>_45 = {closure@programs\klend\src\state\obligation.rs:736:30: 736:33}<br/></td></tr><tr><td align="left">_42 = std::result::Result::&lt;u128, &amp;str&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\state\obligation.rs:736:30: 736:33}&gt;(move _43, move _45)</td></tr></table>>];
    bb16__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, anchor_lang::error::Error&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb17__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_46 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb18__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_41 as Continue).0: u128)<br/>_40 = _50<br/>StorageDead(_50)<br/>((*_1).3: u128) = move _40<br/>StorageDead(_40)<br/>_56 = discriminant(_41)<br/>StorageDead(_41)<br/>StorageLive(_51)<br/>_51 = (_5.0: [u64; 4])<br/>(((*_1).1: state::reserve::BigFractionBytes).0: [u64; 4]) = move _51<br/>StorageDead(_51)<br/>_6 = const ()<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb20__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_40)<br/>_58 = discriminant(_41)<br/>StorageDead(_41)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_52)<br/>_52 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _52)<br/>StorageDead(_52)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb24__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb25__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb26__0_1736 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_60 = discriminant(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1736 -> bb1__0_1736 [label="return"];
    bb1__0_1736 -> bb4__0_1736 [label="255"];
    bb1__0_1736 -> bb11__0_1736 [label="0"];
    bb1__0_1736 -> bb2__0_1736 [label="1"];
    bb1__0_1736 -> bb3__0_1736 [label="otherwise"];
    bb2__0_1736 -> bb12__0_1736 [label="return"];
    bb4__0_1736 -> bb5__0_1736 [label="return"];
    bb5__0_1736 -> bb6__0_1736 [label="return"];
    bb6__0_1736 -> bb7__0_1736 [label="return"];
    bb7__0_1736 -> bb8__0_1736 [label="return"];
    bb7__0_1736 -> bb24__0_1736 [label="unwind"];
    bb8__0_1736 -> bb9__0_1736 [label="return"];
    bb8__0_1736 -> bb24__0_1736 [label="unwind"];
    bb9__0_1736 -> bb10__0_1736 [label="return"];
    bb9__0_1736 -> bb25__0_1736 [label="unwind"];
    bb10__0_1736 -> bb22__0_1736 [label=""];
    bb11__0_1736 -> bb21__0_1736 [label=""];
    bb12__0_1736 -> bb13__0_1736 [label="return"];
    bb13__0_1736 -> bb14__0_1736 [label="return"];
    bb14__0_1736 -> bb15__0_1736 [label="return"];
    bb15__0_1736 -> bb16__0_1736 [label="return"];
    bb16__0_1736 -> bb17__0_1736 [label="return"];
    bb16__0_1736 -> bb25__0_1736 [label="unwind"];
    bb17__0_1736 -> bb18__0_1736 [label="0"];
    bb17__0_1736 -> bb19__0_1736 [label="1"];
    bb17__0_1736 -> bb3__0_1736 [label="otherwise"];
    bb18__0_1736 -> bb21__0_1736 [label=""];
    bb19__0_1736 -> bb20__0_1736 [label="return"];
    bb19__0_1736 -> bb26__0_1736 [label="unwind"];
    bb20__0_1736 -> bb22__0_1736 [label=""];
    bb21__0_1736 -> bb23__0_1736 [label=""];
    bb22__0_1736 -> bb23__0_1736 [label=""];
    bb24__0_1736 -> bb25__0_1736 [label="return"];
    bb26__0_1736 -> bb25__0_1736 [label=""];
}
