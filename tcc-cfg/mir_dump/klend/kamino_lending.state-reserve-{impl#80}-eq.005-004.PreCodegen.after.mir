// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:994:44: 994:53>::eq` after PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:994:44: 994:53>::eq(_1: &reserve::ReserveConfig, _2: &reserve::ReserveConfig) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: u8;
    let mut _5: u8;
    let mut _6: bool;
    let mut _7: u8;
    let mut _8: u8;
    let mut _9: bool;
    let mut _10: u16;
    let mut _11: u16;
    let mut _12: bool;
    let mut _13: &[u8; 9];
    let mut _14: &[u8; 9];
    let mut _15: bool;
    let mut _16: u8;
    let mut _17: u8;
    let mut _18: bool;
    let mut _19: u8;
    let mut _20: u8;
    let mut _21: bool;
    let mut _22: u8;
    let mut _23: u8;
    let mut _24: bool;
    let mut _25: u8;
    let mut _26: u8;
    let mut _27: bool;
    let mut _28: u8;
    let mut _29: u8;
    let mut _30: bool;
    let mut _31: u16;
    let mut _32: u16;
    let mut _33: bool;
    let mut _34: u16;
    let mut _35: u16;
    let mut _36: bool;
    let mut _37: u16;
    let mut _38: u16;
    let mut _39: bool;
    let mut _40: u64;
    let mut _41: u64;
    let mut _42: bool;
    let mut _43: u64;
    let mut _44: u64;
    let mut _45: bool;
    let mut _46: &state::reserve::ReserveFees;
    let mut _47: &state::reserve::ReserveFees;
    let mut _48: bool;
    let mut _49: &utils::borrow_rate_curve::BorrowRateCurve;
    let mut _50: &utils::borrow_rate_curve::BorrowRateCurve;
    let mut _51: bool;
    let mut _52: u64;
    let mut _53: u64;
    let mut _54: bool;
    let mut _55: u64;
    let mut _56: u64;
    let mut _57: bool;
    let mut _58: u64;
    let mut _59: u64;
    let mut _60: bool;
    let mut _61: &state::token_info::TokenInfo;
    let mut _62: &state::token_info::TokenInfo;
    let mut _63: bool;
    let mut _64: &state::reserve::WithdrawalCaps;
    let mut _65: &state::reserve::WithdrawalCaps;
    let mut _66: bool;
    let mut _67: &state::reserve::WithdrawalCaps;
    let mut _68: &state::reserve::WithdrawalCaps;
    let mut _69: bool;
    let mut _70: &[u8; 20];
    let mut _71: &[u8; 20];
    let mut _72: bool;
    let mut _73: u8;
    let mut _74: u8;
    let mut _75: bool;
    let mut _76: u8;
    let mut _77: u8;
    let mut _78: bool;
    let mut _79: u8;
    let mut _80: u8;
    let mut _81: bool;
    let mut _82: &[u8; 1];
    let mut _83: &[u8; 1];
    let mut _84: bool;
    let mut _85: u64;
    let mut _86: u64;
    let mut _87: bool;
    let mut _88: &[u64; 32];
    let mut _89: &[u64; 32];
    let mut _90: u64;
    let mut _91: u64;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).0: u8);
        StorageLive(_5);
        _5 = ((*_2).0: u8);
        _3 = Eq(move _4, move _5);
        switchInt(move _3) -> [0: bb67, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = ((*_1).1: u8);
        StorageLive(_8);
        _8 = ((*_2).1: u8);
        _6 = Eq(move _7, move _8);
        switchInt(move _6) -> [0: bb66, otherwise: bb2];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = ((*_1).2: u16);
        StorageLive(_11);
        _11 = ((*_2).2: u16);
        _9 = Eq(move _10, move _11);
        switchInt(move _9) -> [0: bb65, otherwise: bb3];
    }

    bb3: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: [u8; 9]);
        StorageLive(_14);
        _14 = &((*_2).3: [u8; 9]);
        _12 = <[u8; 9] as PartialEq>::eq(move _13, move _14) -> [return: bb4, unwind continue];
    }

    bb4: {
        switchInt(move _12) -> [0: bb64, otherwise: bb5];
    }

    bb5: {
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_15);
        StorageLive(_16);
        _16 = ((*_1).4: u8);
        StorageLive(_17);
        _17 = ((*_2).4: u8);
        _15 = Eq(move _16, move _17);
        switchInt(move _15) -> [0: bb63, otherwise: bb6];
    }

    bb6: {
        StorageDead(_17);
        StorageDead(_16);
        StorageLive(_18);
        StorageLive(_19);
        _19 = ((*_1).5: u8);
        StorageLive(_20);
        _20 = ((*_2).5: u8);
        _18 = Eq(move _19, move _20);
        switchInt(move _18) -> [0: bb62, otherwise: bb7];
    }

    bb7: {
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_21);
        StorageLive(_22);
        _22 = ((*_1).6: u8);
        StorageLive(_23);
        _23 = ((*_2).6: u8);
        _21 = Eq(move _22, move _23);
        switchInt(move _21) -> [0: bb61, otherwise: bb8];
    }

    bb8: {
        StorageDead(_23);
        StorageDead(_22);
        StorageLive(_24);
        StorageLive(_25);
        _25 = ((*_1).7: u8);
        StorageLive(_26);
        _26 = ((*_2).7: u8);
        _24 = Eq(move _25, move _26);
        switchInt(move _24) -> [0: bb60, otherwise: bb9];
    }

    bb9: {
        StorageDead(_26);
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        _28 = ((*_1).8: u8);
        StorageLive(_29);
        _29 = ((*_2).8: u8);
        _27 = Eq(move _28, move _29);
        switchInt(move _27) -> [0: bb59, otherwise: bb10];
    }

    bb10: {
        StorageDead(_29);
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = ((*_1).9: u16);
        StorageLive(_32);
        _32 = ((*_2).9: u16);
        _30 = Eq(move _31, move _32);
        switchInt(move _30) -> [0: bb58, otherwise: bb11];
    }

    bb11: {
        StorageDead(_32);
        StorageDead(_31);
        StorageLive(_33);
        StorageLive(_34);
        _34 = ((*_1).10: u16);
        StorageLive(_35);
        _35 = ((*_2).10: u16);
        _33 = Eq(move _34, move _35);
        switchInt(move _33) -> [0: bb57, otherwise: bb12];
    }

    bb12: {
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_36);
        StorageLive(_37);
        _37 = ((*_1).11: u16);
        StorageLive(_38);
        _38 = ((*_2).11: u16);
        _36 = Eq(move _37, move _38);
        switchInt(move _36) -> [0: bb56, otherwise: bb13];
    }

    bb13: {
        StorageDead(_38);
        StorageDead(_37);
        StorageLive(_39);
        StorageLive(_40);
        _40 = ((*_1).12: u64);
        StorageLive(_41);
        _41 = ((*_2).12: u64);
        _39 = Eq(move _40, move _41);
        switchInt(move _39) -> [0: bb55, otherwise: bb14];
    }

    bb14: {
        StorageDead(_41);
        StorageDead(_40);
        StorageLive(_42);
        StorageLive(_43);
        _43 = ((*_1).13: u64);
        StorageLive(_44);
        _44 = ((*_2).13: u64);
        _42 = Eq(move _43, move _44);
        switchInt(move _42) -> [0: bb54, otherwise: bb15];
    }

    bb15: {
        StorageDead(_44);
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).14: state::reserve::ReserveFees);
        StorageLive(_47);
        _47 = &((*_2).14: state::reserve::ReserveFees);
        _45 = <ReserveFees as PartialEq>::eq(move _46, move _47) -> [return: bb16, unwind continue];
    }

    bb16: {
        switchInt(move _45) -> [0: bb53, otherwise: bb17];
    }

    bb17: {
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &((*_1).15: utils::borrow_rate_curve::BorrowRateCurve);
        StorageLive(_50);
        _50 = &((*_2).15: utils::borrow_rate_curve::BorrowRateCurve);
        _48 = <BorrowRateCurve as PartialEq>::eq(move _49, move _50) -> [return: bb18, unwind continue];
    }

    bb18: {
        switchInt(move _48) -> [0: bb52, otherwise: bb19];
    }

    bb19: {
        StorageDead(_50);
        StorageDead(_49);
        StorageLive(_51);
        StorageLive(_52);
        _52 = ((*_1).16: u64);
        StorageLive(_53);
        _53 = ((*_2).16: u64);
        _51 = Eq(move _52, move _53);
        switchInt(move _51) -> [0: bb51, otherwise: bb20];
    }

    bb20: {
        StorageDead(_53);
        StorageDead(_52);
        StorageLive(_54);
        StorageLive(_55);
        _55 = ((*_1).17: u64);
        StorageLive(_56);
        _56 = ((*_2).17: u64);
        _54 = Eq(move _55, move _56);
        switchInt(move _54) -> [0: bb50, otherwise: bb21];
    }

    bb21: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_57);
        StorageLive(_58);
        _58 = ((*_1).18: u64);
        StorageLive(_59);
        _59 = ((*_2).18: u64);
        _57 = Eq(move _58, move _59);
        switchInt(move _57) -> [0: bb49, otherwise: bb22];
    }

    bb22: {
        StorageDead(_59);
        StorageDead(_58);
        StorageLive(_60);
        StorageLive(_61);
        _61 = &((*_1).19: state::token_info::TokenInfo);
        StorageLive(_62);
        _62 = &((*_2).19: state::token_info::TokenInfo);
        _60 = <token_info::TokenInfo as PartialEq>::eq(move _61, move _62) -> [return: bb23, unwind continue];
    }

    bb23: {
        switchInt(move _60) -> [0: bb48, otherwise: bb24];
    }

    bb24: {
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &((*_1).20: state::reserve::WithdrawalCaps);
        StorageLive(_65);
        _65 = &((*_2).20: state::reserve::WithdrawalCaps);
        _63 = <reserve::WithdrawalCaps as PartialEq>::eq(move _64, move _65) -> [return: bb25, unwind continue];
    }

    bb25: {
        switchInt(move _63) -> [0: bb47, otherwise: bb26];
    }

    bb26: {
        StorageDead(_65);
        StorageDead(_64);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &((*_1).21: state::reserve::WithdrawalCaps);
        StorageLive(_68);
        _68 = &((*_2).21: state::reserve::WithdrawalCaps);
        _66 = <reserve::WithdrawalCaps as PartialEq>::eq(move _67, move _68) -> [return: bb27, unwind continue];
    }

    bb27: {
        switchInt(move _66) -> [0: bb46, otherwise: bb28];
    }

    bb28: {
        StorageDead(_68);
        StorageDead(_67);
        StorageLive(_69);
        StorageLive(_70);
        _70 = &((*_1).22: [u8; 20]);
        StorageLive(_71);
        _71 = &((*_2).22: [u8; 20]);
        _69 = <[u8; 20] as PartialEq>::eq(move _70, move _71) -> [return: bb29, unwind continue];
    }

    bb29: {
        switchInt(move _69) -> [0: bb45, otherwise: bb30];
    }

    bb30: {
        StorageDead(_71);
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        _73 = ((*_1).23: u8);
        StorageLive(_74);
        _74 = ((*_2).23: u8);
        _72 = Eq(move _73, move _74);
        switchInt(move _72) -> [0: bb44, otherwise: bb31];
    }

    bb31: {
        StorageDead(_74);
        StorageDead(_73);
        StorageLive(_75);
        StorageLive(_76);
        _76 = ((*_1).24: u8);
        StorageLive(_77);
        _77 = ((*_2).24: u8);
        _75 = Eq(move _76, move _77);
        switchInt(move _75) -> [0: bb43, otherwise: bb32];
    }

    bb32: {
        StorageDead(_77);
        StorageDead(_76);
        StorageLive(_78);
        StorageLive(_79);
        _79 = ((*_1).25: u8);
        StorageLive(_80);
        _80 = ((*_2).25: u8);
        _78 = Eq(move _79, move _80);
        switchInt(move _78) -> [0: bb42, otherwise: bb33];
    }

    bb33: {
        StorageDead(_80);
        StorageDead(_79);
        StorageLive(_81);
        StorageLive(_82);
        _82 = &((*_1).26: [u8; 1]);
        StorageLive(_83);
        _83 = &((*_2).26: [u8; 1]);
        _81 = <[u8; 1] as PartialEq>::eq(move _82, move _83) -> [return: bb34, unwind continue];
    }

    bb34: {
        switchInt(move _81) -> [0: bb41, otherwise: bb35];
    }

    bb35: {
        StorageDead(_83);
        StorageDead(_82);
        StorageLive(_84);
        StorageLive(_85);
        _85 = ((*_1).27: u64);
        StorageLive(_86);
        _86 = ((*_2).27: u64);
        _84 = Eq(move _85, move _86);
        switchInt(move _84) -> [0: bb40, otherwise: bb36];
    }

    bb36: {
        StorageDead(_86);
        StorageDead(_85);
        StorageLive(_87);
        StorageLive(_88);
        _88 = &((*_1).28: [u64; 32]);
        StorageLive(_89);
        _89 = &((*_2).28: [u64; 32]);
        _87 = <[u64; 32] as PartialEq>::eq(move _88, move _89) -> [return: bb37, unwind continue];
    }

    bb37: {
        switchInt(move _87) -> [0: bb39, otherwise: bb38];
    }

    bb38: {
        StorageDead(_89);
        StorageDead(_88);
        StorageLive(_90);
        _90 = ((*_1).29: u64);
        StorageLive(_91);
        _91 = ((*_2).29: u64);
        _0 = Eq(move _90, move _91);
        StorageDead(_91);
        StorageDead(_90);
        goto -> bb69;
    }

    bb39: {
        StorageDead(_89);
        StorageDead(_88);
        goto -> bb68;
    }

    bb40: {
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb68;
    }

    bb41: {
        StorageDead(_83);
        StorageDead(_82);
        goto -> bb68;
    }

    bb42: {
        StorageDead(_80);
        StorageDead(_79);
        goto -> bb68;
    }

    bb43: {
        StorageDead(_77);
        StorageDead(_76);
        goto -> bb68;
    }

    bb44: {
        StorageDead(_74);
        StorageDead(_73);
        goto -> bb68;
    }

    bb45: {
        StorageDead(_71);
        StorageDead(_70);
        goto -> bb68;
    }

    bb46: {
        StorageDead(_68);
        StorageDead(_67);
        goto -> bb68;
    }

    bb47: {
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb68;
    }

    bb48: {
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb68;
    }

    bb49: {
        StorageDead(_59);
        StorageDead(_58);
        goto -> bb68;
    }

    bb50: {
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb68;
    }

    bb51: {
        StorageDead(_53);
        StorageDead(_52);
        goto -> bb68;
    }

    bb52: {
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb68;
    }

    bb53: {
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb68;
    }

    bb54: {
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb68;
    }

    bb55: {
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb68;
    }

    bb56: {
        StorageDead(_38);
        StorageDead(_37);
        goto -> bb68;
    }

    bb57: {
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb68;
    }

    bb58: {
        StorageDead(_32);
        StorageDead(_31);
        goto -> bb68;
    }

    bb59: {
        StorageDead(_29);
        StorageDead(_28);
        goto -> bb68;
    }

    bb60: {
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb68;
    }

    bb61: {
        StorageDead(_23);
        StorageDead(_22);
        goto -> bb68;
    }

    bb62: {
        StorageDead(_20);
        StorageDead(_19);
        goto -> bb68;
    }

    bb63: {
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb68;
    }

    bb64: {
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb68;
    }

    bb65: {
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb68;
    }

    bb66: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb68;
    }

    bb67: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb68;
    }

    bb68: {
        _0 = const false;
        goto -> bb69;
    }

    bb69: {
        StorageDead(_87);
        StorageDead(_84);
        StorageDead(_81);
        StorageDead(_78);
        StorageDead(_75);
        StorageDead(_72);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_60);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_21);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
