// MIR for `last_update::_::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\bitflags-2.4.1\src\lib.rs:618:9: 618:29>::symmetric_difference` before PreCodegen

fn last_update::_::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\bitflags-2.4.1\src\lib.rs:618:9: 618:29>::symmetric_difference(_1: last_update::PriceStatusFlags, _2: last_update::PriceStatusFlags) -> last_update::PriceStatusFlags {
    debug self => _1;
    debug other => _2;
    let mut _0: state::last_update::PriceStatusFlags;
    let _3: state::last_update::PriceStatusFlags;
    let mut _5: u8;
    let mut _6: u8;
    let mut _7: &state::last_update::PriceStatusFlags;
    let mut _8: u8;
    let mut _9: &state::last_update::PriceStatusFlags;
    scope 1 {
        debug f => _3;
        let _4: state::last_update::PriceStatusFlags;
        scope 2 {
            debug other => _4;
        }
    }

    bb0: {
        StorageLive(_3);
        _3 = _1;
        StorageLive(_4);
        _4 = _2;
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &_3;
        _6 = last_update::_::<impl last_update::PriceStatusFlags>::bits(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &_4;
        _8 = last_update::_::<impl last_update::PriceStatusFlags>::bits(move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        _5 = BitXor(move _6, move _8);
        StorageDead(_8);
        StorageDead(_6);
        _0 = last_update::_::<impl last_update::PriceStatusFlags>::from_bits_retain(move _5) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
