digraph Mir_0_1288 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::redeem_reserve_collateral(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64, _3: &amp;ReErased anchor_lang::prelude::Clock, _4: bool) -&gt; std::result::Result&lt;u64, anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: !;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: anchor_lang::error::Error;<br align="left"/>let mut _13: anchor_lang::error::AnchorError;<br align="left"/>let mut _14: std::string::String;<br align="left"/>let mut _15: &amp;ReErased LendingError;<br align="left"/>let _16: LendingError;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: LendingError;<br align="left"/>let mut _19: std::string::String;<br align="left"/>let mut _20: &amp;ReErased LendingError;<br align="left"/>let _21: LendingError;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _23: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _24: anchor_lang::error::Source;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: bool;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _29: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _30: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _36: bool;<br align="left"/>let mut _37: !;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: anchor_lang::error::Error;<br align="left"/>let mut _42: anchor_lang::error::AnchorError;<br align="left"/>let mut _43: std::string::String;<br align="left"/>let mut _44: &amp;ReErased LendingError;<br align="left"/>let _45: LendingError;<br align="left"/>let mut _46: u32;<br align="left"/>let mut _47: LendingError;<br align="left"/>let mut _48: std::string::String;<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let _50: LendingError;<br align="left"/>let mut _51: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _52: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _53: anchor_lang::error::Source;<br align="left"/>let mut _54: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u64, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: u64;<br align="left"/>let _65: u64;<br align="left"/>let mut _66: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _67: i64;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _70: u64;<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _73: ();<br align="left"/>let mut _74: bool;<br align="left"/>let _75: ();<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, ()&gt;;<br align="left"/>let mut _77: std::result::Result&lt;(), LendingError&gt;;<br align="left"/>let mut _78: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _79: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _88: ();<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: &amp;ReErased LendingError;<br align="left"/>let mut _91: &amp;ReErased LendingError;<br align="left"/>let mut _92: &amp;ReErased LendingError;<br align="left"/>let mut _93: &amp;ReErased LendingError;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug add_amount_to_withdrawal_caps =&gt; _4;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug liquidity_amount =&gt; _55;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug timestamp =&gt; _65;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>>;
    bb0__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_6 = Eq(move _7, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = const &quot;Collateral amount provided cannot be zero&quot;<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = solana_program::log::sol_log(move _10)</td></tr></table>>];
    bb2__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_91 = const _<br/>_15 = &amp;(*_91)<br/></td></tr><tr><td align="left">_14 = LendingError::name(move _15)</td></tr></table>>];
    bb3__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = LendingError::InvalidAmount<br/></td></tr><tr><td align="left">_17 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _18)</td></tr></table>>];
    bb4__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_90 = const _<br/>_20 = &amp;(*_90)<br/></td></tr><tr><td align="left">_19 = &lt;LendingError as ToString&gt;::to_string(move _20)</td></tr></table>>];
    bb5__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 627_u32 }<br/>_23 = anchor_lang::error::ErrorOrigin::Source(move _24)<br/>StorageDead(_24)<br/>_22 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _23)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>_25 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_13 = anchor_lang::error::AnchorError { error_name: move _14, error_code_number: move _17, error_msg: move _19, error_origin: move _22, compared_values: move _25 }<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _13)</td></tr></table>>];
    bb6__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _12)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_31)<br/>_31 = ((*_3).0: u64)<br/></td></tr><tr><td align="left">_29 = last_update::LastUpdate::is_stale(move _30, move _31, const _)</td></tr></table>>];
    bb8__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb9__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb10__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: bool)<br/>_27 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb11__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb13__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_102 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_93 = const _<br/>_44 = &amp;(*_93)<br/></td></tr><tr><td align="left">_43 = LendingError::name(move _44)</td></tr></table>>];
    bb15__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_46 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _47)</td></tr></table>>];
    bb16__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_92 = const _<br/>_49 = &amp;(*_92)<br/></td></tr><tr><td align="left">_48 = &lt;LendingError as ToString&gt;::to_string(move _49)</td></tr></table>>];
    bb17__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 635_u32 }<br/>_52 = anchor_lang::error::ErrorOrigin::Source(move _53)<br/>StorageDead(_53)<br/>_51 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _52)<br/>StorageDead(_52)<br/>StorageLive(_54)<br/>_54 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_42 = anchor_lang::error::AnchorError { error_name: move _43, error_code_number: move _46, error_msg: move _48, error_origin: move _51, compared_values: move _54 }<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _42)</td></tr></table>>];
    bb18__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _41)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb20__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_60 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb21__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_56 as Continue).0: u64)<br/>_55 = _64<br/>StorageDead(_64)<br/>_98 = discriminant(_56)<br/>StorageDead(_56)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = ((*_3).4: i64)<br/></td></tr><tr><td align="left">_66 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _67)</td></tr></table>>];
    bb22__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb23__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_100 = discriminant(_56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _66)</td></tr></table>>];
    bb25__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_1)<br/>StorageLive(_70)<br/>_70 = _65<br/></td></tr><tr><td align="left">_68 = refresh_reserve_limit_timestamps(move _69, move _70)</td></tr></table>>];
    bb26__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_71 = last_update::LastUpdate::mark_stale(move _72)</td></tr></table>>];
    bb27__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _4<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb28__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;mut (((*_1).9: state::reserve::ReserveConfig).20: state::reserve::WithdrawalCaps)<br/>_78 = &amp;mut (*_79)<br/>StorageLive(_80)<br/>_80 = _55<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = ((*_3).4: i64)<br/></td></tr><tr><td align="left">_82 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _83)</td></tr></table>>];
    bb29__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _82)</td></tr></table>>];
    bb30__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_77 = add_to_withdrawal_accum(move _78, move _80, move _81)</td></tr></table>>];
    bb31__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;(), LendingError&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb32__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_84 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb33__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_76 as Continue).0: ())<br/>_75 = _88<br/>StorageDead(_88)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>_73 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb35__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_73 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_89)<br/>_89 = _55<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Ok(move _89)<br/>StorageDead(_89)<br/>StorageDead(_65)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb42__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb43__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_94 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = const &quot;Reserve is stale and must be refreshed in the current slot&quot;<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb45__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_96 = discriminant(_28)<br/>StorageDead(_28)<br/>_26 = const ()<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_1)<br/>StorageLive(_59)<br/>_59 = _2<br/></td></tr><tr><td align="left">_57 = reserve::Reserve::redeem_collateral(move _58, move _59)</td></tr></table>>];
    bb46__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_104 = discriminant(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1288 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_105 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1288 -> bb7__0_1288 [label="0"];
    bb0__0_1288 -> bb1__0_1288 [label="otherwise"];
    bb1__0_1288 -> bb2__0_1288 [label="return"];
    bb2__0_1288 -> bb3__0_1288 [label="return"];
    bb3__0_1288 -> bb4__0_1288 [label="return"];
    bb3__0_1288 -> bb42__0_1288 [label="unwind"];
    bb4__0_1288 -> bb5__0_1288 [label="return"];
    bb4__0_1288 -> bb42__0_1288 [label="unwind"];
    bb5__0_1288 -> bb6__0_1288 [label="return"];
    bb5__0_1288 -> bb43__0_1288 [label="unwind"];
    bb6__0_1288 -> bb40__0_1288 [label=""];
    bb7__0_1288 -> bb8__0_1288 [label="return"];
    bb8__0_1288 -> bb9__0_1288 [label="return"];
    bb8__0_1288 -> bb43__0_1288 [label="unwind"];
    bb9__0_1288 -> bb10__0_1288 [label="0"];
    bb9__0_1288 -> bb12__0_1288 [label="1"];
    bb9__0_1288 -> bb11__0_1288 [label="otherwise"];
    bb10__0_1288 -> bb45__0_1288 [label="0"];
    bb10__0_1288 -> bb44__0_1288 [label="otherwise"];
    bb12__0_1288 -> bb13__0_1288 [label="return"];
    bb12__0_1288 -> bb47__0_1288 [label="unwind"];
    bb13__0_1288 -> bb39__0_1288 [label=""];
    bb14__0_1288 -> bb15__0_1288 [label="return"];
    bb15__0_1288 -> bb16__0_1288 [label="return"];
    bb15__0_1288 -> bb41__0_1288 [label="unwind"];
    bb16__0_1288 -> bb17__0_1288 [label="return"];
    bb16__0_1288 -> bb41__0_1288 [label="unwind"];
    bb17__0_1288 -> bb18__0_1288 [label="return"];
    bb17__0_1288 -> bb43__0_1288 [label="unwind"];
    bb18__0_1288 -> bb39__0_1288 [label=""];
    bb19__0_1288 -> bb20__0_1288 [label="return"];
    bb19__0_1288 -> bb43__0_1288 [label="unwind"];
    bb20__0_1288 -> bb21__0_1288 [label="0"];
    bb20__0_1288 -> bb22__0_1288 [label="1"];
    bb20__0_1288 -> bb11__0_1288 [label="otherwise"];
    bb21__0_1288 -> bb24__0_1288 [label="return"];
    bb22__0_1288 -> bb23__0_1288 [label="return"];
    bb22__0_1288 -> bb46__0_1288 [label="unwind"];
    bb23__0_1288 -> bb38__0_1288 [label=""];
    bb24__0_1288 -> bb25__0_1288 [label="return"];
    bb25__0_1288 -> bb26__0_1288 [label="return"];
    bb26__0_1288 -> bb27__0_1288 [label="return"];
    bb27__0_1288 -> bb36__0_1288 [label="0"];
    bb27__0_1288 -> bb28__0_1288 [label="otherwise"];
    bb28__0_1288 -> bb29__0_1288 [label="return"];
    bb29__0_1288 -> bb30__0_1288 [label="return"];
    bb30__0_1288 -> bb31__0_1288 [label="return"];
    bb31__0_1288 -> bb32__0_1288 [label="return"];
    bb32__0_1288 -> bb33__0_1288 [label="0"];
    bb32__0_1288 -> bb34__0_1288 [label="1"];
    bb32__0_1288 -> bb11__0_1288 [label="otherwise"];
    bb33__0_1288 -> bb37__0_1288 [label=""];
    bb34__0_1288 -> bb35__0_1288 [label="return"];
    bb35__0_1288 -> bb38__0_1288 [label=""];
    bb36__0_1288 -> bb37__0_1288 [label=""];
    bb37__0_1288 -> bb40__0_1288 [label=""];
    bb38__0_1288 -> bb40__0_1288 [label=""];
    bb39__0_1288 -> bb40__0_1288 [label=""];
    bb41__0_1288 -> bb43__0_1288 [label="return"];
    bb42__0_1288 -> bb43__0_1288 [label="return"];
    bb44__0_1288 -> bb14__0_1288 [label="return"];
    bb45__0_1288 -> bb19__0_1288 [label="return"];
    bb46__0_1288 -> bb43__0_1288 [label=""];
    bb47__0_1288 -> bb43__0_1288 [label=""];
}
