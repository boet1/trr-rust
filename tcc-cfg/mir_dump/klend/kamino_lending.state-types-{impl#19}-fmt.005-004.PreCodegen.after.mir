// MIR for `state::types::<impl at programs\klend\src\state\types.rs:52:10: 52:15>::fmt` after PreCodegen

fn state::types::<impl at programs\klend\src\state\types.rs:52:10: 52:15>::fmt(_1: &state::types::LiquidationReason, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: isize;
    let mut _4: &mut std::fmt::Formatter<'_>;
    let mut _5: &str;
    let _6: &str;
    let mut _7: &mut std::fmt::Formatter<'_>;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &mut std::fmt::Formatter<'_>;
    let mut _11: &str;
    let _12: &str;
    let _13: &usize;
    let mut _14: &mut std::fmt::Formatter<'_>;
    let mut _15: &str;
    let _16: &str;
    let mut _17: &dyn std::fmt::Debug;
    let mut _18: &&usize;
    let _19: &&usize;
    scope 1 {
        debug __self_0 => _13;
    }

    bb0: {
        _3 = discriminant((*_1));
        switchInt(move _3) -> [0: bb3, 1: bb5, 2: bb7, 3: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_13);
        _13 = &(((*_1) as ObligationOrder).0: usize);
        StorageLive(_14);
        _14 = &mut (*_2);
        StorageLive(_15);
        StorageLive(_16);
        _16 = const "ObligationOrder";
        _15 = &(*_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &_13;
        _18 = &(*_19);
        _17 = move _18 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_18);
        _0 = Formatter::<'_>::debug_tuple_field1_finish(move _14, move _15, move _17) -> [return: bb9, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        _4 = &mut (*_2);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const "LtvExceeded";
        _5 = &(*_6);
        _0 = Formatter::<'_>::write_str(move _4, move _5) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb10;
    }

    bb5: {
        StorageLive(_7);
        _7 = &mut (*_2);
        StorageLive(_8);
        StorageLive(_9);
        _9 = const "IndividualDeleveraging";
        _8 = &(*_9);
        _0 = Formatter::<'_>::write_str(move _7, move _8) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb10;
    }

    bb7: {
        StorageLive(_10);
        _10 = &mut (*_2);
        StorageLive(_11);
        StorageLive(_12);
        _12 = const "MarketWideDeleveraging";
        _11 = &(*_12);
        _0 = Formatter::<'_>::write_str(move _10, move _11) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb10;
    }

    bb9: {
        StorageDead(_19);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb10;
    }

    bb10: {
        return;
    }
}
