digraph Mir_0_2970 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;'info&gt; as anchor_lang::Accounts&lt;'info, BorrowObligationLiquidityV2Bumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2Bumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased mut handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityBumps;<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _19: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;ReErased&gt;;<br align="left"/>let _20: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [u8];<br align="left"/>let mut _26: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps;<br align="left"/>let mut _27: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _33: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _34: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;&gt;;<br align="left"/>let mut _36: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [u8];<br align="left"/>let mut _41: &amp;ReErased mut handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2Bumps;<br align="left"/>let mut _42: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _43: Closure(DefId(0:2971 ~ kamino_lending[6389]::handlers::handler_borrow_obligation_liquidity::{impl#7}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _48: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _49: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;ReErased&gt;;<br align="left"/>let mut _50: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;ReErased&gt;;<br align="left"/>let mut _51: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _52: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug borrow_accounts =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug farms_accounts =&gt; _20;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug farms_program =&gt; _34;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>>;
    bb0__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_2)<br/>StorageLive(_11)<br/>_11 = &amp;(*_3)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut ((*_4).0: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityBumps)<br/>_12 = &amp;mut (*_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_8 = &lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;'_&gt; as anchor_lang::Accounts&lt;'_, BorrowObligationLiquidityBumps&gt;&gt;::try_accounts(move _9, move _10, move _11, move _12, move _14)</td></tr></table>>];
    bb1__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_7 as Continue).0: handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidity&lt;'_&gt;)<br/>_6 = move _19<br/>StorageDead(_19)<br/>_53 = discriminant(_7)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;(*_1)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_2)<br/>StorageLive(_25)<br/>_25 = &amp;(*_3)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;mut ((*_4).1: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps)<br/>_26 = &amp;mut (*_27)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_22 = &lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt; as anchor_lang::Accounts&lt;'_, handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps&gt;&gt;::try_accounts(move _23, move _24, move _25, move _26, move _28)</td></tr></table>>];
    bb4__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_63 = discriminant(_7)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb8__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_29 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_21 as Continue).0: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_20 = move _33<br/>StorageDead(_33)<br/>_55 = discriminant(_21)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_1)<br/>StorageLive(_39)<br/>_39 = &amp;mut (*_2)<br/>StorageLive(_40)<br/>_40 = &amp;(*_3)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_4)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::Program&lt;'_, Farms&gt; as anchor_lang::Accounts&lt;'_, BorrowObligationLiquidityV2Bumps&gt;&gt;::try_accounts(move _38, move _39, move _40, move _41, move _42)</td></tr></table>>];
    bb10__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb11__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_61 = discriminant(_21)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_43)<br/>_43 = {closure@programs\klend\src\handlers\handler_borrow_obligation_liquidity.rs:211:10: 211:18}<br/></td></tr><tr><td align="left">_36 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_borrow_obligation_liquidity.rs:211:10: 211:18}&gt;(move _37, move _43)</td></tr></table>>];
    bb13__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb14__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_44 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb15__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = move ((_35 as Continue).0: anchor_lang::prelude::Program&lt;'_, farms::program::Farms&gt;)<br/>_34 = move _48<br/>StorageDead(_48)<br/>_57 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = move _6<br/>StorageLive(_51)<br/>_51 = move _20<br/>StorageLive(_52)<br/>_52 = move _34<br/>_49 = handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2::&lt;'_&gt; { borrow_accounts: move _50, farms_accounts: move _51, farms_program: move _52 }<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_0 = std::result::Result::&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _49)<br/>StorageDead(_49)<br/>StorageDead(_34)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = move ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_47)<br/>_47 = move _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_borrow_obligation_liquidity::BorrowObligationLiquidityV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb17__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>_59 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb18__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb19__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb22__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb23__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb24__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_65 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_66 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2970 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_67 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2970 -> bb1__0_2970 [label="return"];
    bb1__0_2970 -> bb2__0_2970 [label="return"];
    bb1__0_2970 -> bb23__0_2970 [label="unwind"];
    bb2__0_2970 -> bb3__0_2970 [label="0"];
    bb2__0_2970 -> bb5__0_2970 [label="1"];
    bb2__0_2970 -> bb4__0_2970 [label="otherwise"];
    bb3__0_2970 -> bb7__0_2970 [label="return"];
    bb3__0_2970 -> bb22__0_2970 [label="unwind"];
    bb5__0_2970 -> bb6__0_2970 [label="return"];
    bb5__0_2970 -> bb26__0_2970 [label="unwind"];
    bb6__0_2970 -> bb19__0_2970 [label=""];
    bb7__0_2970 -> bb8__0_2970 [label="return"];
    bb7__0_2970 -> bb22__0_2970 [label="unwind"];
    bb8__0_2970 -> bb9__0_2970 [label="0"];
    bb8__0_2970 -> bb10__0_2970 [label="1"];
    bb8__0_2970 -> bb4__0_2970 [label="otherwise"];
    bb9__0_2970 -> bb12__0_2970 [label="return"];
    bb9__0_2970 -> bb21__0_2970 [label="unwind"];
    bb10__0_2970 -> bb11__0_2970 [label="return"];
    bb10__0_2970 -> bb25__0_2970 [label="unwind"];
    bb11__0_2970 -> bb18__0_2970 [label=""];
    bb12__0_2970 -> bb13__0_2970 [label="return"];
    bb12__0_2970 -> bb21__0_2970 [label="unwind"];
    bb13__0_2970 -> bb14__0_2970 [label="return"];
    bb13__0_2970 -> bb21__0_2970 [label="unwind"];
    bb14__0_2970 -> bb15__0_2970 [label="0"];
    bb14__0_2970 -> bb16__0_2970 [label="1"];
    bb14__0_2970 -> bb4__0_2970 [label="otherwise"];
    bb15__0_2970 -> bb20__0_2970 [label=""];
    bb16__0_2970 -> bb17__0_2970 [label="return"];
    bb16__0_2970 -> bb24__0_2970 [label="unwind"];
    bb17__0_2970 -> bb18__0_2970 [label="return"];
    bb17__0_2970 -> bb22__0_2970 [label="unwind"];
    bb18__0_2970 -> bb19__0_2970 [label="return"];
    bb18__0_2970 -> bb23__0_2970 [label="unwind"];
    bb19__0_2970 -> bb20__0_2970 [label=""];
    bb21__0_2970 -> bb22__0_2970 [label="return"];
    bb22__0_2970 -> bb23__0_2970 [label="return"];
    bb24__0_2970 -> bb21__0_2970 [label=""];
    bb25__0_2970 -> bb22__0_2970 [label=""];
    bb26__0_2970 -> bb23__0_2970 [label=""];
}
