// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:608:17: 608:24>::default` after PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:608:17: 608:24>::default() -> obligation::ObligationCollateral {
    let mut _0: state::obligation::ObligationCollateral;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: u64;
    let mut _3: u128;
    let mut _4: u64;
    let mut _5: [u64; 9];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <[u64; 9] as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        _0 = obligation::ObligationCollateral { deposit_reserve: move _1, deposited_amount: move _2, market_value_sf: move _3, borrowed_amount_against_this_collateral_in_elevation_group: move _4, padding: move _5 };
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
