digraph Mir_0_981 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_lte::{closure#0}(_1: &amp;ReErased Closure(DefId(0:981 ~ kamino_lending[6389]::lending_market::config_items::validations::check_lte::{closure#0}), [T/#0, U/#1, i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) U/#1,)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, [Region(BrAnon)]), (T/#0,)]), _2: &amp;ReErased U/#1) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: T/#0;<br align="left"/>let mut _4: U/#1;<br align="left"/>let mut _5: &amp;ReErased U/#1;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: &amp;ReErased T/#0;<br align="left"/>let mut _9: &amp;ReErased T/#0;<br align="left"/>let mut _10: !;<br align="left"/>let _11: ();<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased std::string::String;<br align="left"/>let _15: &amp;ReErased std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let mut _18: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _26: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _27: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased T/#0;<br align="left"/>let _29: &amp;ReErased T/#0;<br align="left"/>let mut _30: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased T/#0;<br align="left"/>let _32: &amp;ReErased T/#0;<br align="left"/>let mut _33: anchor_lang::error::Error;<br align="left"/>let mut _34: anchor_lang::error::AnchorError;<br align="left"/>let mut _35: std::string::String;<br align="left"/>let mut _36: &amp;ReErased LendingError;<br align="left"/>let _37: LendingError;<br align="left"/>let mut _38: u32;<br align="left"/>let mut _39: LendingError;<br align="left"/>let mut _40: std::string::String;<br align="left"/>let mut _41: &amp;ReErased LendingError;<br align="left"/>let _42: LendingError;<br align="left"/>let mut _43: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _44: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _45: anchor_lang::error::Source;<br align="left"/>let mut _46: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _47: ();<br align="left"/>let mut _48: &amp;ReErased LendingError;<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug value =&gt; _2;<br align="left"/>debug max =&gt; ((*_1).0: T);<br align="left"/>debug value_t =&gt; _3;<br align="left"/>debug res =&gt; _17;<br align="left"/>>;
    bb0__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_2)<br/></td></tr><tr><td align="left">_4 = &lt;U as Clone&gt;::clone(move _5)</td></tr></table>>];
    bb1__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;U as Into&lt;T&gt;&gt;::into(move _4)</td></tr></table>>];
    bb2__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_3<br/>StorageLive(_9)<br/>_9 = &amp;((*_1).0: T)<br/></td></tr><tr><td align="left">_7 = &lt;T as PartialOrd&gt;::gt(move _8, move _9)</td></tr></table>>];
    bb3__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb4__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_50 = const _<br/>_21 = &amp;(*_50)<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;((*_1).0: T)<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;T&gt;(move _28)</td></tr></table>>];
    bb5__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_3<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;T&gt;(move _31)</td></tr></table>>];
    bb6__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_26 = [move _27, move _30]<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_18 = Arguments::&lt;'_&gt;::new_v1(move _19, move _23)</td></tr></table>>];
    bb7__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = format(move _18)</td></tr></table>>];
    bb8__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>_16 = move _17<br/>StorageDead(_17)<br/>_15 = &amp;_16<br/>_14 = &amp;(*_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::string::String as Deref&gt;::deref(move _14)</td></tr></table>>];
    bb9__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = solana_program::log::sol_log(move _12)</td></tr></table>>];
    bb10__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb11__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_49 = const _<br/>_36 = &amp;(*_49)<br/></td></tr><tr><td align="left">_35 = LendingError::name(move _36)</td></tr></table>>];
    bb12__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = LendingError::InvalidConfig<br/></td></tr><tr><td align="left">_38 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _39)</td></tr></table>>];
    bb13__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_48 = const _<br/>_41 = &amp;(*_48)<br/></td></tr><tr><td align="left">_40 = &lt;LendingError as ToString&gt;::to_string(move _41)</td></tr></table>>];
    bb14__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\config_items.rs&quot;, line: const 281_u32 }<br/>_44 = anchor_lang::error::ErrorOrigin::Source(move _45)<br/>StorageDead(_45)<br/>_43 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _44)<br/>StorageDead(_44)<br/>StorageLive(_46)<br/>_46 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_34 = anchor_lang::error::AnchorError { error_name: move _35, error_code_number: move _38, error_msg: move _40, error_origin: move _43, compared_values: move _46 }<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _34)</td></tr></table>>];
    bb15__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _33)<br/>StorageDead(_33)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb16__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_6 = const ()<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_47)<br/>_47 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _47)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb17__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb21__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb22__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb23__0_981 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_981 -> bb1__0_981 [label="return"];
    bb1__0_981 -> bb2__0_981 [label="return"];
    bb1__0_981 -> bb23__0_981 [label="unwind"];
    bb2__0_981 -> bb3__0_981 [label="return"];
    bb2__0_981 -> bb22__0_981 [label="unwind"];
    bb3__0_981 -> bb16__0_981 [label="0"];
    bb3__0_981 -> bb4__0_981 [label="otherwise"];
    bb4__0_981 -> bb5__0_981 [label="return"];
    bb4__0_981 -> bb22__0_981 [label="unwind"];
    bb5__0_981 -> bb6__0_981 [label="return"];
    bb5__0_981 -> bb22__0_981 [label="unwind"];
    bb6__0_981 -> bb7__0_981 [label="return"];
    bb6__0_981 -> bb22__0_981 [label="unwind"];
    bb7__0_981 -> bb8__0_981 [label="return"];
    bb7__0_981 -> bb22__0_981 [label="unwind"];
    bb8__0_981 -> bb9__0_981 [label="return"];
    bb8__0_981 -> bb21__0_981 [label="unwind"];
    bb9__0_981 -> bb10__0_981 [label="return"];
    bb9__0_981 -> bb21__0_981 [label="unwind"];
    bb10__0_981 -> bb11__0_981 [label="return"];
    bb10__0_981 -> bb22__0_981 [label="unwind"];
    bb11__0_981 -> bb12__0_981 [label="return"];
    bb11__0_981 -> bb22__0_981 [label="unwind"];
    bb12__0_981 -> bb13__0_981 [label="return"];
    bb12__0_981 -> bb20__0_981 [label="unwind"];
    bb13__0_981 -> bb14__0_981 [label="return"];
    bb13__0_981 -> bb20__0_981 [label="unwind"];
    bb14__0_981 -> bb15__0_981 [label="return"];
    bb14__0_981 -> bb22__0_981 [label="unwind"];
    bb15__0_981 -> bb18__0_981 [label="return"];
    bb15__0_981 -> bb23__0_981 [label="unwind"];
    bb16__0_981 -> bb17__0_981 [label="return"];
    bb16__0_981 -> bb23__0_981 [label="unwind"];
    bb17__0_981 -> bb19__0_981 [label=""];
    bb18__0_981 -> bb19__0_981 [label=""];
    bb20__0_981 -> bb22__0_981 [label="return"];
    bb21__0_981 -> bb22__0_981 [label="return"];
    bb22__0_981 -> bb23__0_981 [label="return"];
}
