digraph Mir_0_284 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_init_obligation::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;&gt;, _2: state::obligation::InitObligationArgs) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _4: anchor_lang::prelude::Clock;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _6: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _11: anchor_lang::prelude::Clock;<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: u8;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _19: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _20: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _29: &amp;ReErased std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;;<br align="left"/>let _30: std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;&gt;;<br align="left"/>let mut _32: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::referral::UserMetadata&gt;;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _38: std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;;<br align="left"/>let _39: ();<br align="left"/>let mut _40: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _41: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _42: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _43: state::obligation::InitObligationParams;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _47: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _49: [state::obligation::ObligationCollateral; 8_usize];<br align="left"/>let mut _50: state::obligation::ObligationCollateral;<br align="left"/>let mut _51: [state::obligation::ObligationLiquidity; 5_usize];<br align="left"/>let mut _52: state::obligation::ObligationLiquidity;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: u8;<br align="left"/>let mut _55: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased state::referral::UserMetadata;<br align="left"/>let mut _57: &amp;ReErased std::cell::Ref&lt;ReErased, state::referral::UserMetadata&gt;;<br align="left"/>let mut _58: ();<br align="left"/>let mut _59: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased mut handlers::handler_init_obligation::InitObligation&lt;ReErased&gt;;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug args =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug obligation =&gt; _19;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug owner_user_metadata =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>>;
    bb0__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_7 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_5 as Continue).0: anchor_lang::prelude::Clock)<br/>_4 = move _11<br/>StorageDead(_11)<br/>_3 = &amp;_4<br/>_65 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = (_2.0: u8)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_59 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_16 = &amp;((*_59).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_60 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_18 = &amp;((*_60).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_13 = check_obligation_seeds(move _14, move _15, move _17)</td></tr></table>>];
    bb4__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_75 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::unwrap(move _13)</td></tr></table>>];
    bb8__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_61 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_23 = &amp;((*_61).2: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_22 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_init(move _23)</td></tr></table>>];
    bb9__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_24 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_21 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_20 = move _28<br/>StorageDead(_28)<br/>_19 = &amp;mut _20<br/>_67 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_62 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_33 = &amp;((*_62).6: anchor_lang::prelude::AccountLoader&lt;'_, state::referral::UserMetadata&gt;)<br/></td></tr><tr><td align="left">_32 = anchor_lang::prelude::AccountLoader::&lt;'_, referral::UserMetadata&gt;::load(move _33)</td></tr></table>>];
    bb12__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_73 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;Ref&lt;'_, referral::UserMetadata&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb15__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb16__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_31 as Continue).0: std::cell::Ref&lt;'_, state::referral::UserMetadata&gt;)<br/>_30 = move _38<br/>StorageDead(_38)<br/>_29 = &amp;_30<br/>_69 = discriminant(_31)<br/>StorageDead(_31)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_19)<br/></td></tr><tr><td align="left">_41 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _42)</td></tr></table>>];
    bb17__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb18__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_71 = discriminant(_31)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb19__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_40 = &amp;mut (*_41)<br/>StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = ((*_3).0: u64)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_63 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_46 = &amp;((*_63).3: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _46)</td></tr></table>>];
    bb20__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_64 = deref_copy (_1.1: &amp;mut handlers::handler_init_obligation::InitObligation&lt;'_&gt;)<br/>_48 = &amp;((*_64).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _48)</td></tr></table>>];
    bb21__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/></td></tr><tr><td align="left">_50 = &lt;obligation::ObligationCollateral as Default&gt;::default()</td></tr></table>>];
    bb22__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_49 = [move _50; 8]<br/>StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/></td></tr><tr><td align="left">_52 = &lt;obligation::ObligationLiquidity as Default&gt;::default()</td></tr></table>>];
    bb23__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_51 = [move _52; 5]<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = (_2.0: u8)<br/>_53 = move _54 as u64 (IntToInt)<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_29)<br/></td></tr><tr><td align="left">_56 = &lt;Ref&lt;'_, referral::UserMetadata&gt; as Deref&gt;::deref(move _57)</td></tr></table>>];
    bb24__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_55 = ((*_56).0: anchor_lang::prelude::Pubkey)<br/>_43 = InitObligationParams { current_slot: move _44, lending_market: move _45, owner: move _47, deposits: move _49, borrows: move _51, tag: move _53, referrer: move _55 }<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_39 = obligation::Obligation::init(move _40, move _43)</td></tr></table>>];
    bb25__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_56)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageLive(_58)<br/>_58 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb26__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb27__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb31__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb32__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb33__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb34__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left" balign="left">_77 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_78 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_284 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_79 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_284 -> bb1__0_284 [label="return"];
    bb1__0_284 -> bb2__0_284 [label="return"];
    bb1__0_284 -> bb33__0_284 [label="unwind"];
    bb2__0_284 -> bb3__0_284 [label="0"];
    bb2__0_284 -> bb5__0_284 [label="1"];
    bb2__0_284 -> bb4__0_284 [label="otherwise"];
    bb3__0_284 -> bb7__0_284 [label="return"];
    bb5__0_284 -> bb6__0_284 [label="return"];
    bb5__0_284 -> bb36__0_284 [label="unwind"];
    bb6__0_284 -> bb29__0_284 [label=""];
    bb7__0_284 -> bb8__0_284 [label="return"];
    bb7__0_284 -> bb33__0_284 [label="unwind"];
    bb8__0_284 -> bb9__0_284 [label="return"];
    bb9__0_284 -> bb10__0_284 [label="return"];
    bb9__0_284 -> bb33__0_284 [label="unwind"];
    bb10__0_284 -> bb11__0_284 [label="0"];
    bb10__0_284 -> bb12__0_284 [label="1"];
    bb10__0_284 -> bb4__0_284 [label="otherwise"];
    bb11__0_284 -> bb14__0_284 [label="return"];
    bb11__0_284 -> bb32__0_284 [label="unwind"];
    bb12__0_284 -> bb13__0_284 [label="return"];
    bb12__0_284 -> bb35__0_284 [label="unwind"];
    bb13__0_284 -> bb28__0_284 [label=""];
    bb14__0_284 -> bb15__0_284 [label="return"];
    bb14__0_284 -> bb32__0_284 [label="unwind"];
    bb15__0_284 -> bb16__0_284 [label="0"];
    bb15__0_284 -> bb17__0_284 [label="1"];
    bb15__0_284 -> bb4__0_284 [label="otherwise"];
    bb16__0_284 -> bb19__0_284 [label="return"];
    bb16__0_284 -> bb31__0_284 [label="unwind"];
    bb17__0_284 -> bb18__0_284 [label="return"];
    bb17__0_284 -> bb34__0_284 [label="unwind"];
    bb18__0_284 -> bb28__0_284 [label="return"];
    bb18__0_284 -> bb33__0_284 [label="unwind"];
    bb19__0_284 -> bb20__0_284 [label="return"];
    bb19__0_284 -> bb31__0_284 [label="unwind"];
    bb20__0_284 -> bb21__0_284 [label="return"];
    bb20__0_284 -> bb31__0_284 [label="unwind"];
    bb21__0_284 -> bb22__0_284 [label="return"];
    bb21__0_284 -> bb31__0_284 [label="unwind"];
    bb22__0_284 -> bb23__0_284 [label="return"];
    bb22__0_284 -> bb31__0_284 [label="unwind"];
    bb23__0_284 -> bb24__0_284 [label="return"];
    bb23__0_284 -> bb31__0_284 [label="unwind"];
    bb24__0_284 -> bb25__0_284 [label="return"];
    bb24__0_284 -> bb31__0_284 [label="unwind"];
    bb25__0_284 -> bb26__0_284 [label="return"];
    bb25__0_284 -> bb32__0_284 [label="unwind"];
    bb26__0_284 -> bb27__0_284 [label="return"];
    bb26__0_284 -> bb33__0_284 [label="unwind"];
    bb27__0_284 -> bb30__0_284 [label=""];
    bb28__0_284 -> bb29__0_284 [label=""];
    bb29__0_284 -> bb30__0_284 [label=""];
    bb31__0_284 -> bb32__0_284 [label="return"];
    bb32__0_284 -> bb33__0_284 [label="return"];
    bb34__0_284 -> bb32__0_284 [label=""];
    bb35__0_284 -> bb33__0_284 [label=""];
    bb36__0_284 -> bb33__0_284 [label=""];
}
