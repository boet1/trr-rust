digraph Mir_0_1081 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn cpi_set_stake_delegated(_1: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;, _2: &amp;ReErased state::reserve::Reserve, _3: state::reserve::ReserveFarmKind, _4: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _14: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _16: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _18: state::reserve::ReserveFarmKind;<br align="left"/>let _19: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, farms::state::UserState&gt;;<br align="left"/>let _21: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _22: &amp;ReErased farms::accounts::SetStakeDelegated;<br align="left"/>let _23: farms::accounts::SetStakeDelegated;<br align="left"/>let mut _24: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _26: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: std::option::Option&lt;bool&gt;;<br align="left"/>let _31: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _32: &amp;ReErased farms::instruction::SetStakeDelegated;<br align="left"/>let _33: farms::instruction::SetStakeDelegated;<br align="left"/>let mut _34: u64;<br align="left"/>let _35: solana_program::instruction::Instruction;<br align="left"/>let mut _36: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _37: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _38: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _39: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _40: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let _43: &amp;ReErased [u8];<br align="left"/>let mut _44: &amp;ReErased [u8];<br align="left"/>let _45: &amp;ReErased [u8];<br align="left"/>let mut _46: &amp;ReErased [u8];<br align="left"/>let _47: &amp;ReErased [u8];<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _49: &amp;ReErased [u8];<br align="left"/>let mut _50: &amp;ReErased [u8; 1_usize];<br align="left"/>let _51: &amp;ReErased [u8; 1_usize];<br align="left"/>let _52: [u8; 1_usize];<br align="left"/>let mut _53: u8;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _56: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _57: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _58: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let mut _59: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _60: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let _61: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let mut _62: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _63: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _64: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _65: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _69: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>debug accounts_ctx =&gt; _1;<br align="left"/>debug reserve =&gt; _2;<br align="left"/>debug mode =&gt; _3;<br align="left"/>debug amount =&gt; _4;<br align="left"/>debug lending_market =&gt; _5;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug lending_market_key =&gt; _14;<br align="left"/>debug farm =&gt; _16;<br align="left"/>debug farmer =&gt; _19;<br align="left"/>debug accounts =&gt; _21;<br align="left"/>debug data =&gt; _31;<br align="left"/>debug instruction =&gt; _35;<br align="left"/>debug lending_market_authority_signer_seeds =&gt; _39;<br align="left"/>debug account_infos =&gt; _57;<br align="left"/>>;
    bb0__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_73 = const false<br/>_72 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).5: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _8)</td></tr></table>>];
    bb1__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_5 = move _13<br/>StorageDead(_13)<br/>_74 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_1).5: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _15)</td></tr></table>>];
    bb4__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_76 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_2)<br/>StorageLive(_18)<br/>_18 = _3<br/></td></tr><tr><td align="left">_16 = reserve::Reserve::get_farm(move _17, move _18)</td></tr></table>>];
    bb8__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_1).4: anchor_lang::prelude::AccountLoader&lt;'_, farms::state::UserState&gt;)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserState&gt; as anchor_lang::Key&gt;::key(move _20)</td></tr></table>>];
    bb9__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_1).1: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _27)</td></tr></table>>];
    bb10__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_25 = &amp;_26<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _25)</td></tr></table>>];
    bb11__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_28)<br/>_28 = _19<br/>StorageLive(_29)<br/>_29 = _16<br/>_23 = farms::accounts::SetStakeDelegated { delegate_authority: move _24, user_state: move _28, farm_state: move _29 }<br/>_22 = &amp;_23<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageLive(_30)<br/>_30 = std::option::Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_21 = &lt;farms::accounts::SetStakeDelegated as anchor_lang::ToAccountMetas&gt;::to_account_metas(move _22, move _30)</td></tr></table>>];
    bb12__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_73 = const true<br/>StorageDead(_30)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb13__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _4<br/>_33 = farms::instruction::SetStakeDelegated { new_amount: move _34 }<br/>_32 = &amp;_33<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_31 = &lt;farms::instruction::SetStakeDelegated as InstructionData&gt;::data(move _32)</td></tr></table>>];
    bb14__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_72 = const true<br/>StorageDead(_32)<br/>StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/></td></tr><tr><td align="left">_36 = farms::id()</td></tr></table>>];
    bb15__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_73 = const false<br/>_37 = move _21<br/>StorageLive(_38)<br/>_72 = const false<br/>_38 = move _31<br/>_35 = Instruction { program_id: move _36, accounts: move _37, data: move _38 }<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = const _<br/>_42 = &amp;(*_43)<br/>_41 = _42<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_14<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _48)</td></tr></table>>];
    bb16__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_46 = &amp;(*_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_45 = &lt;[u8] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _46)</td></tr></table>>];
    bb17__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_44 = &amp;(*_45)<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_5<br/></td></tr><tr><td align="left">_55 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _56)</td></tr></table>>];
    bb18__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = ((*_55).1: u64)<br/>_53 = move _54 as u8 (IntToInt)<br/>StorageDead(_54)<br/>_52 = [move _53]<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/>_49 = move _50 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_50)<br/>_40 = [move _41, move _44, move _49]<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;(*_1)<br/></td></tr><tr><td align="left">_57 = &lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;'_&gt; as anchor_lang::ToAccountInfos&lt;'_&gt;&gt;::to_account_infos(move _58)</td></tr></table>>];
    bb19__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_35<br/>_60 = &amp;(*_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_57<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = &lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb20__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_62 = &amp;(*_63)<br/>StorageDead(_64)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;(*_39)<br/>_70 = move _71 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/>_69 = [move _70]<br/>StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_59 = invoke_signed(move _60, move _62, move _66)</td></tr></table>>];
    bb21__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::map_err::&lt;anchor_lang::error::Error, fn(anchor_lang::prelude::ProgramError) -&gt; anchor_lang::error::Error {&lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::error::Error&gt;&gt;::into}&gt;(move _59, &lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::error::Error&gt;&gt;::into)</td></tr></table>>];
    bb22__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb23__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb24__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_72 = const false<br/>StorageDead(_31)<br/>_73 = const false<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb25__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb27__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb28__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb29__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb30__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb31__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb32__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb33__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">switchInt(_72)</td></tr></table>>];
    bb34__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb35__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">switchInt(_73)</td></tr></table>>];
    bb36__0_1081 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_78 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1081 -> bb1__0_1081 [label="return"];
    bb1__0_1081 -> bb2__0_1081 [label="return"];
    bb1__0_1081 -> bb31__0_1081 [label="unwind"];
    bb2__0_1081 -> bb3__0_1081 [label="0"];
    bb2__0_1081 -> bb5__0_1081 [label="1"];
    bb2__0_1081 -> bb4__0_1081 [label="otherwise"];
    bb3__0_1081 -> bb7__0_1081 [label="return"];
    bb3__0_1081 -> bb30__0_1081 [label="unwind"];
    bb5__0_1081 -> bb6__0_1081 [label="return"];
    bb5__0_1081 -> bb36__0_1081 [label="unwind"];
    bb6__0_1081 -> bb26__0_1081 [label=""];
    bb7__0_1081 -> bb8__0_1081 [label="return"];
    bb7__0_1081 -> bb30__0_1081 [label="unwind"];
    bb8__0_1081 -> bb9__0_1081 [label="return"];
    bb8__0_1081 -> bb30__0_1081 [label="unwind"];
    bb9__0_1081 -> bb10__0_1081 [label="return"];
    bb9__0_1081 -> bb30__0_1081 [label="unwind"];
    bb10__0_1081 -> bb11__0_1081 [label="return"];
    bb10__0_1081 -> bb29__0_1081 [label="unwind"];
    bb11__0_1081 -> bb12__0_1081 [label="return"];
    bb11__0_1081 -> bb29__0_1081 [label="unwind"];
    bb12__0_1081 -> bb13__0_1081 [label="return"];
    bb12__0_1081 -> bb35__0_1081 [label="unwind"];
    bb13__0_1081 -> bb14__0_1081 [label="return"];
    bb13__0_1081 -> bb35__0_1081 [label="unwind"];
    bb14__0_1081 -> bb15__0_1081 [label="return"];
    bb14__0_1081 -> bb33__0_1081 [label="unwind"];
    bb15__0_1081 -> bb16__0_1081 [label="return"];
    bb15__0_1081 -> bb28__0_1081 [label="unwind"];
    bb16__0_1081 -> bb17__0_1081 [label="return"];
    bb16__0_1081 -> bb28__0_1081 [label="unwind"];
    bb17__0_1081 -> bb18__0_1081 [label="return"];
    bb17__0_1081 -> bb28__0_1081 [label="unwind"];
    bb18__0_1081 -> bb19__0_1081 [label="return"];
    bb18__0_1081 -> bb28__0_1081 [label="unwind"];
    bb19__0_1081 -> bb20__0_1081 [label="return"];
    bb19__0_1081 -> bb27__0_1081 [label="unwind"];
    bb20__0_1081 -> bb21__0_1081 [label="return"];
    bb20__0_1081 -> bb27__0_1081 [label="unwind"];
    bb21__0_1081 -> bb22__0_1081 [label="return"];
    bb21__0_1081 -> bb27__0_1081 [label="unwind"];
    bb22__0_1081 -> bb23__0_1081 [label="return"];
    bb22__0_1081 -> bb28__0_1081 [label="unwind"];
    bb23__0_1081 -> bb24__0_1081 [label="return"];
    bb23__0_1081 -> bb33__0_1081 [label="unwind"];
    bb24__0_1081 -> bb25__0_1081 [label="return"];
    bb24__0_1081 -> bb31__0_1081 [label="unwind"];
    bb25__0_1081 -> bb26__0_1081 [label=""];
    bb27__0_1081 -> bb28__0_1081 [label="return"];
    bb28__0_1081 -> bb33__0_1081 [label="return"];
    bb29__0_1081 -> bb30__0_1081 [label="return"];
    bb30__0_1081 -> bb31__0_1081 [label="return"];
    bb32__0_1081 -> bb35__0_1081 [label="return"];
    bb33__0_1081 -> bb35__0_1081 [label="0"];
    bb33__0_1081 -> bb32__0_1081 [label="otherwise"];
    bb34__0_1081 -> bb30__0_1081 [label="return"];
    bb35__0_1081 -> bb30__0_1081 [label="0"];
    bb35__0_1081 -> bb34__0_1081 [label="otherwise"];
    bb36__0_1081 -> bb31__0_1081 [label=""];
}
