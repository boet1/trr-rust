// MIR for `validate_switchboard_confidence::{closure#1}` after PreCodegen

fn validate_switchboard_confidence::{closure#1}(_1: {closure@programs\klend\src\utils\prices\switchboard.rs:130:19: 130:22}, _2: u128) -> std::option::Option<u128> {
    debug a => _2;
    debug scale_op => (*(_1.0: &dyn std::ops::Fn(u128, u128) -> std::option::Option<u128>));
    debug scaling_factor => (*(_1.1: &u128));
    let mut _0: std::option::Option<u128>;
    let mut _3: &dyn std::ops::Fn(u128, u128) -> std::option::Option<u128>;
    let mut _4: (u128, u128);
    let mut _5: u128;
    let mut _6: u128;
    let mut _7: &dyn std::ops::Fn(u128, u128) -> std::option::Option<u128>;
    let mut _8: &u128;

    bb0: {
        StorageLive(_3);
        _7 = deref_copy (_1.0: &dyn std::ops::Fn(u128, u128) -> std::option::Option<u128>);
        _3 = &(*_7);
        StorageLive(_4);
        StorageLive(_5);
        _5 = _2;
        StorageLive(_6);
        _8 = deref_copy (_1.1: &u128);
        _6 = (*_8);
        _4 = (move _5, move _6);
        _0 = <dyn Fn(u128, u128) -> std::option::Option<u128> as Fn<(u128, u128)>>::call(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
