digraph Mir_0_1379 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_non_elevation_group_borrowing_enabled(_1: &amp;ReErased state::obligation::Obligation) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: u8;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u8;<br align="left"/>let mut _6: anchor_lang::error::Error;<br align="left"/>let mut _7: anchor_lang::error::AnchorError;<br align="left"/>let mut _8: std::string::String;<br align="left"/>let mut _9: &amp;ReErased LendingError;<br align="left"/>let _10: LendingError;<br align="left"/>let mut _11: u32;<br align="left"/>let mut _12: LendingError;<br align="left"/>let mut _13: std::string::String;<br align="left"/>let mut _14: &amp;ReErased LendingError;<br align="left"/>let _15: LendingError;<br align="left"/>let mut _16: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _17: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _18: anchor_lang::error::Source;<br align="left"/>let mut _19: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _20: ();<br align="left"/>let mut _21: &amp;ReErased LendingError;<br align="left"/>let mut _22: &amp;ReErased LendingError;<br align="left"/>debug obligation =&gt; _1;<br align="left"/>>;
    bb0__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).14: u8)<br/>_2 = Eq(move _3, const _)<br/></td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb1__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).18: u8)<br/>_4 = Gt(move _5, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_22 = const _<br/>_9 = &amp;(*_22)<br/></td></tr><tr><td align="left">_8 = LendingError::name(move _9)</td></tr></table>>];
    bb3__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = LendingError::BorrowingDisabledOutsideElevationGroup<br/></td></tr><tr><td align="left">_11 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _12)</td></tr></table>>];
    bb4__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_21 = const _<br/>_14 = &amp;(*_21)<br/></td></tr><tr><td align="left">_13 = &lt;LendingError as ToString&gt;::to_string(move _14)</td></tr></table>>];
    bb5__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2744_u32 }<br/>_17 = anchor_lang::error::ErrorOrigin::Source(move _18)<br/>StorageDead(_18)<br/>_16 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _17)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_7 = anchor_lang::error::AnchorError { error_name: move _8, error_code_number: move _11, error_msg: move _13, error_origin: move _16, compared_values: move _19 }<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _7)</td></tr></table>>];
    bb6__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb12__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1379 -> bb8__0_1379 [label="0"];
    bb0__0_1379 -> bb1__0_1379 [label="otherwise"];
    bb1__0_1379 -> bb7__0_1379 [label="0"];
    bb1__0_1379 -> bb2__0_1379 [label="otherwise"];
    bb2__0_1379 -> bb3__0_1379 [label="return"];
    bb3__0_1379 -> bb4__0_1379 [label="return"];
    bb3__0_1379 -> bb11__0_1379 [label="unwind"];
    bb4__0_1379 -> bb5__0_1379 [label="return"];
    bb4__0_1379 -> bb11__0_1379 [label="unwind"];
    bb5__0_1379 -> bb6__0_1379 [label="return"];
    bb5__0_1379 -> bb12__0_1379 [label="unwind"];
    bb6__0_1379 -> bb10__0_1379 [label=""];
    bb7__0_1379 -> bb9__0_1379 [label=""];
    bb8__0_1379 -> bb9__0_1379 [label=""];
    bb9__0_1379 -> bb10__0_1379 [label=""];
    bb11__0_1379 -> bb12__0_1379 [label="return"];
}
