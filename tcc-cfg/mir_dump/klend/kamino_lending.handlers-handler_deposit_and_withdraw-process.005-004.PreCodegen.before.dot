digraph Mir_0_79 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_deposit_and_withdraw::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;&gt;, _2: u64, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _5: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _14: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _15: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _16: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _17: ();<br align="left"/>let _18: ();<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _20: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: &amp;ReErased handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;ReErased&gt;;<br align="left"/>let _22: &amp;ReErased handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;ReErased&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _29: ();<br align="left"/>let _30: ();<br align="left"/>let _31: anchor_lang::prelude::Clock;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _33: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _38: anchor_lang::prelude::Clock;<br align="left"/>let _39: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _41: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _47: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _48: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _50: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _56: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _59: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _60: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _61: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _62: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _63: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _64: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _65: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _66: std::option::Option&lt;utils::prices::GetPriceResult&gt;;<br align="left"/>let mut _67: u16;<br align="left"/>let mut _68: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _69: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _74: ();<br align="left"/>let _75: u64;<br align="left"/>let mut _76: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _80: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _81: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _82: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _83: u64;<br align="left"/>let _84: ();<br align="left"/>let _85: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;&gt;;<br align="left"/>let mut _86: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _87: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _89: handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _90: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _91: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _92: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _94: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _95: handlers::handler_refresh_obligation::RefreshObligationBumps;<br align="left"/>let _96: ();<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _98: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;&gt;;<br align="left"/>let mut _100: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _105: ();<br align="left"/>let _106: bool;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _108: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _109: &amp;ReErased handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let _110: &amp;ReErased handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _111: u64;<br align="left"/>let mut _112: state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _117: bool;<br align="left"/>let _118: ();<br align="left"/>let _119: anchor_lang::prelude::Clock;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _121: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _126: anchor_lang::prelude::Clock;<br align="left"/>let _127: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _129: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _135: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _136: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _138: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _139: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _144: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _145: ();<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _147: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _148: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _149: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _150: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _151: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _152: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _153: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _154: std::option::Option&lt;utils::prices::GetPriceResult&gt;;<br align="left"/>let mut _155: u16;<br align="left"/>let mut _156: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _157: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _162: ();<br align="left"/>let _163: u64;<br align="left"/>let mut _164: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _165: i64;<br align="left"/>let _166: ();<br align="left"/>let mut _167: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _168: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _169: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _170: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _171: u64;<br align="left"/>let _172: ();<br align="left"/>let mut _173: bool;<br align="left"/>let _174: bool;<br align="left"/>let _175: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _177: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _178: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _179: isize;<br align="left"/>let _180: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let mut _182: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _183: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _184: u64;<br align="left"/>let mut _185: std::result::Result&lt;&amp;ReErased state::obligation::ObligationCollateral, anchor_lang::error::Error&gt;;<br align="left"/>let mut _186: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _187: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _188: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _191: Closure(DefId(0:80 ~ kamino_lending[6389]::handlers::handler_deposit_and_withdraw::process::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::obligation::ObligationCollateral,)) -&gt; u64, []), ()]);<br align="left"/>let mut _192: u64;<br align="left"/>let _193: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _194: bool;<br align="left"/>let mut _195: bool;<br align="left"/>let mut _196: std::iter::FilterMap&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, Closure(DefId(0:81 ~ kamino_lending[6389]::handlers::handler_deposit_and_withdraw::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, []), (&amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;, &amp;ReErased mut bool)])&gt;;<br align="left"/>let mut _197: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _198: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _199: Closure(DefId(0:81 ~ kamino_lending[6389]::handlers::handler_deposit_and_withdraw::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, []), (&amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;, &amp;ReErased mut bool)]);<br align="left"/>let mut _200: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _201: &amp;ReErased mut bool;<br align="left"/>let mut _202: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _203: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;&gt;;<br align="left"/>let mut _204: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _205: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _206: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _207: handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _208: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _210: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _212: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _213: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _214: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _215: handlers::handler_refresh_obligation::RefreshObligationBumps;<br align="left"/>let _216: ();<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _218: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _219: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;&gt;;<br align="left"/>let mut _220: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _221: isize;<br align="left"/>let _222: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _223: !;<br align="left"/>let mut _224: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _225: ();<br align="left"/>let mut _226: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _227: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _228: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _234: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _235: ();<br align="left"/>let mut _236: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _237: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _238: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _239: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _240: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _241: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _242: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _247: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _248: ();<br align="left"/>let mut _249: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _250: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _251: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _252: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _253: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _254: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _255: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _256: isize;<br align="left"/>let _257: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _258: !;<br align="left"/>let mut _259: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _260: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _261: ();<br align="left"/>let mut _262: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _263: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _264: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _265: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _266: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _267: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _268: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _269: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _270: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _271: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _272: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _273: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _274: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _275: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _276: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _281: ();<br align="left"/>let _282: ();<br align="left"/>let _283: ();<br align="left"/>let mut _284: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _285: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _286: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _287: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _288: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _289: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _290: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _291: state::reserve::ReserveFarmKind;<br align="left"/>let mut _292: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _293: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _294: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _295: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _296: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _297: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _298: isize;<br align="left"/>let _299: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _302: ();<br align="left"/>let _303: ();<br align="left"/>let _304: ();<br align="left"/>let mut _305: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _306: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _307: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _308: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _309: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _310: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _311: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _312: state::reserve::ReserveFarmKind;<br align="left"/>let mut _313: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _314: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _315: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _316: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _317: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _318: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _319: isize;<br align="left"/>let _320: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _321: !;<br align="left"/>let mut _322: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _323: ();<br align="left"/>let mut _324: ();<br align="left"/>let mut _325: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _326: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _327: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _328: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _329: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _330: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _331: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _332: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _333: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _334: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _335: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _336: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _337: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _338: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _339: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _340: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _341: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _342: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _343: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _344: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _346: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _347: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _348: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _349: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _350: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _351: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _353: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _354: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _355: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _356: &amp;ReErased mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>let mut _365: isize;<br align="left"/>let mut _366: isize;<br align="left"/>let mut _367: isize;<br align="left"/>let mut _368: isize;<br align="left"/>let mut _369: isize;<br align="left"/>let mut _370: isize;<br align="left"/>let mut _371: isize;<br align="left"/>let mut _372: isize;<br align="left"/>let mut _373: isize;<br align="left"/>let mut _374: isize;<br align="left"/>let mut _375: isize;<br align="left"/>let mut _376: isize;<br align="left"/>let mut _377: isize;<br align="left"/>let mut _378: isize;<br align="left"/>let mut _379: isize;<br align="left"/>let mut _380: isize;<br align="left"/>let mut _381: isize;<br align="left"/>let mut _382: isize;<br align="left"/>let mut _383: isize;<br align="left"/>let mut _384: isize;<br align="left"/>let mut _385: isize;<br align="left"/>let mut _386: isize;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: isize;<br align="left"/>let mut _389: isize;<br align="left"/>let mut _390: isize;<br align="left"/>let mut _391: isize;<br align="left"/>let mut _392: isize;<br align="left"/>let mut _393: isize;<br align="left"/>let mut _394: isize;<br align="left"/>let mut _395: isize;<br align="left"/>let mut _396: isize;<br align="left"/>let mut _397: isize;<br align="left"/>let mut _398: isize;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: isize;<br align="left"/>let mut _408: isize;<br align="left"/>let mut _409: isize;<br align="left"/>let mut _410: isize;<br align="left"/>let mut _411: isize;<br align="left"/>let mut _412: isize;<br align="left"/>let mut _413: isize;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: isize;<br align="left"/>let mut _421: isize;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>let mut _429: isize;<br align="left"/>let mut _430: isize;<br align="left"/>let mut _431: isize;<br align="left"/>let mut _432: isize;<br align="left"/>let mut _433: isize;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>let mut _454: isize;<br align="left"/>let mut _455: isize;<br align="left"/>let mut _456: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug withdraw_collateral_amount =&gt; _3;<br align="left"/>debug initial_ltv =&gt; _4;<br align="left"/>debug obligation =&gt; _5;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug clock =&gt; _31;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug lending_market =&gt; _39;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug reserve =&gt; _48;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug timestamp =&gt; _75;<br align="left"/>debug refresh_obligation_ctx =&gt; _85;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug is_obligation_closed =&gt; _106;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug clock =&gt; _119;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug lending_market =&gt; _127;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug reserve =&gt; _136;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug timestamp =&gt; _163;<br align="left"/>debug is_full_withdrawal =&gt; _174;<br align="left"/>debug obligation =&gt; _175;<br align="left"/>debug residual =&gt; _180;<br align="left"/>debug val =&gt; _183;<br align="left"/>debug final_deposit_amount =&gt; _184;<br align="left"/>debug remaining_accounts =&gt; _193;<br align="left"/>debug withdraw_reserve_found =&gt; _195;<br align="left"/>debug refresh_obligation_ctx =&gt; _203;<br align="left"/>debug residual =&gt; _222;<br align="left"/>debug val =&gt; _225;<br align="left"/>debug obligation =&gt; _226;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug withdraw_reserve =&gt; _239;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug lending_market =&gt; _252;<br align="left"/>debug residual =&gt; _257;<br align="left"/>debug val =&gt; _260;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug residual =&gt; _299;<br align="left"/>debug val =&gt; _302;<br align="left"/>debug residual =&gt; _320;<br align="left"/>debug val =&gt; _323;<br align="left"/>>;
    bb0__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_325 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_8 = &amp;(((*_325).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _8)</td></tr></table>>];
    bb1__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_5 = move _13<br/>StorageDead(_13)<br/>_357 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;_5<br/></td></tr><tr><td align="left">_15 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _16)</td></tr></table>>];
    bb4__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_435 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_14 = &amp;(*_15)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_4 = obligation::Obligation::loan_to_value(move _14)</td></tr></table>>];
    bb8__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb9__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_326 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_22 = &amp;((*_326).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;)<br/>_21 = &amp;(*_22)<br/>StorageLive(_23)<br/>_23 = _2<br/>StorageLive(_24)<br/>_24 = state::types::MaxReservesAsCollateralCheck::Skip<br/></td></tr><tr><td align="left">_20 = handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::process_impl(move _21, move _23, move _24)</td></tr></table>>];
    bb10__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb11__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_25 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_19 as Continue).0: ())<br/>_18 = _29<br/>StorageDead(_29)<br/>_359 = discriminant(_19)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_17 = const ()<br/>StorageDead(_17)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb13__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>_433 = discriminant(_19)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb16__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_34 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb17__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_32 as Continue).0: anchor_lang::prelude::Clock)<br/>_31 = move _38<br/>StorageDead(_38)<br/>_361 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_327 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_42 = &amp;(((*_327).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_41 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _42)</td></tr></table>>];
    bb18__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb19__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_431 = discriminant(_32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb21__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_40 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_39 = move _47<br/>StorageDead(_47)<br/>_363 = discriminant(_40)<br/>StorageDead(_40)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_328 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_51 = &amp;(((*_328).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_50 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load_mut(move _51)</td></tr></table>>];
    bb23__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_429 = discriminant(_40)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb26__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb27__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_49 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_48 = move _56<br/>StorageDead(_56)<br/>_365 = discriminant(_49)<br/>StorageDead(_49)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut _48<br/>_62 = &amp;mut (*_63)<br/></td></tr><tr><td align="left">_61 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _62)</td></tr></table>>];
    bb28__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb29__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_427 = discriminant(_49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_60 = &amp;mut (*_61)<br/>StorageDead(_62)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_31<br/>_64 = &amp;(*_65)<br/>StorageLive(_66)<br/>_66 = std::option::Option::&lt;prices::GetPriceResult&gt;::None<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_39<br/></td></tr><tr><td align="left">_68 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb31__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = ((*_68).5: u16)<br/></td></tr><tr><td align="left">_59 = lending_operations::refresh_reserve(move _60, move _64, move _66, move _67)</td></tr></table>>];
    bb32__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb33__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_70 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb34__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_58 as Continue).0: ())<br/>_57 = _74<br/>StorageDead(_74)<br/>_367 = discriminant(_58)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = (_31.4: i64)<br/></td></tr><tr><td align="left">_76 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _77)</td></tr></table>>];
    bb35__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_73)<br/>_73 = move _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb36__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>_425 = discriminant(_58)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb37__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _76)</td></tr></table>>];
    bb38__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;mut _48<br/>_81 = &amp;mut (*_82)<br/></td></tr><tr><td align="left">_80 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _81)</td></tr></table>>];
    bb39__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_79 = &amp;mut (*_80)<br/>StorageDead(_81)<br/>StorageLive(_83)<br/>_83 = _75<br/></td></tr><tr><td align="left">_78 = refresh_reserve_limit_timestamps(move _79, move _83)</td></tr></table>>];
    bb40__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_79)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>_30 = const ()<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb41__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb42__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_329 = deref_copy (_1.0: &amp;anchor_lang::prelude::Pubkey)<br/>_86 = &amp;(*_329)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_330 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_91 = &amp;(((*_330).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_90 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as Clone&gt;::clone(move _91)</td></tr></table>>];
    bb43__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_331 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_93 = &amp;(((*_331).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_92 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as Clone&gt;::clone(move _93)</td></tr></table>>];
    bb44__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_89 = handlers::handler_refresh_obligation::RefreshObligation::&lt;'_&gt; { lending_market: move _92, obligation: move _90 }<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>_88 = &amp;mut _89<br/>_87 = &amp;mut (*_88)<br/>StorageLive(_94)<br/>_332 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_94 = &amp;(*_332)<br/>StorageLive(_95)<br/>_95 = handlers::handler_refresh_obligation::RefreshObligationBumps<br/>_85 = anchor_lang::context::Context::&lt;'_, '_, '_, '_, handlers::handler_refresh_obligation::RefreshObligation&lt;'_&gt;&gt; { program_id: move _86, accounts: move _87, remaining_accounts: move _94, bumps: move _95 }<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_88)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = move _85<br/>StorageLive(_100)<br/>_100 = state::types::MaxReservesAsCollateralCheck::Skip<br/></td></tr><tr><td align="left">_98 = handlers::handler_refresh_obligation::process(move _99, move _100)</td></tr></table>>];
    bb45__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb46__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_101 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb47__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_97 as Continue).0: ())<br/>_96 = _105<br/>StorageDead(_105)<br/>_369 = discriminant(_97)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>_84 = const ()<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_333 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_110 = &amp;((*_333).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_109 = &amp;(*_110)<br/>StorageLive(_111)<br/>_111 = _3<br/>StorageLive(_112)<br/>_112 = state::types::LtvMaxWithdrawalCheck::LiquidationThreshold<br/></td></tr><tr><td align="left">_108 = handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::process_impl(move _109, move _111, move _112)</td></tr></table>>];
    bb48__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = move ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_104)<br/>_104 = move _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb49__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>_423 = discriminant(_97)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb51__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_113 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb52__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_107 as Continue).0: bool)<br/>_106 = _117<br/>StorageDead(_117)<br/>_371 = discriminant(_107)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/></td></tr><tr><td align="left">_121 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb53__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = move ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_116)<br/>_116 = move _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb54__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/>_421 = discriminant(_107)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb56__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_122 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb57__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = move ((_120 as Continue).0: anchor_lang::prelude::Clock)<br/>_119 = move _126<br/>StorageDead(_126)<br/>_373 = discriminant(_120)<br/>StorageDead(_120)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_334 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_130 = &amp;(((*_334).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_129 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _130)</td></tr></table>>];
    bb58__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = move ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_125)<br/>_125 = move _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb59__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>_419 = discriminant(_120)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb61__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_131 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb62__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = move ((_128 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_127 = move _135<br/>StorageDead(_135)<br/>_375 = discriminant(_128)<br/>StorageDead(_128)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_335 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_139 = &amp;(((*_335).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_138 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load_mut(move _139)</td></tr></table>>];
    bb63__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = move ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_134)<br/>_134 = move _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb64__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>_417 = discriminant(_128)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb66__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_140 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb67__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = move ((_137 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_136 = move _144<br/>StorageDead(_144)<br/>_377 = discriminant(_137)<br/>StorageDead(_137)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;mut _136<br/>_150 = &amp;mut (*_151)<br/></td></tr><tr><td align="left">_149 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _150)</td></tr></table>>];
    bb68__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = move ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_143)<br/>_143 = move _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb69__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>_415 = discriminant(_137)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_148 = &amp;mut (*_149)<br/>StorageDead(_150)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_119<br/>_152 = &amp;(*_153)<br/>StorageLive(_154)<br/>_154 = std::option::Option::&lt;prices::GetPriceResult&gt;::None<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;_127<br/></td></tr><tr><td align="left">_156 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _157)</td></tr></table>>];
    bb71__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_155 = ((*_156).5: u16)<br/></td></tr><tr><td align="left">_147 = lending_operations::refresh_reserve(move _148, move _152, move _154, move _155)</td></tr></table>>];
    bb72__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb73__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_158 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb74__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_146 as Continue).0: ())<br/>_145 = _162<br/>StorageDead(_162)<br/>_379 = discriminant(_146)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = (_119.4: i64)<br/></td></tr><tr><td align="left">_164 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _165)</td></tr></table>>];
    bb75__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = move ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_161)<br/>_161 = move _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb76__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>_413 = discriminant(_146)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb77__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _164)</td></tr></table>>];
    bb78__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;mut _136<br/>_169 = &amp;mut (*_170)<br/></td></tr><tr><td align="left">_168 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _169)</td></tr></table>>];
    bb79__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_167 = &amp;mut (*_168)<br/>StorageDead(_169)<br/>StorageLive(_171)<br/>_171 = _163<br/></td></tr><tr><td align="left">_166 = refresh_reserve_limit_timestamps(move _167, move _171)</td></tr></table>>];
    bb80__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_167)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>_118 = const ()<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb81__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_127)</td></tr></table>>];
    bb82__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _106<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb83__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_336 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_178 = &amp;(((*_336).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_177 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _178)</td></tr></table>>];
    bb84__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb85__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_179 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb86__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = move ((_176 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_175 = move _183<br/>StorageDead(_183)<br/>_381 = discriminant(_176)<br/>StorageDead(_176)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_175<br/></td></tr><tr><td align="left">_187 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb87__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = move ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_182)<br/>_182 = move _180<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _182)</td></tr></table>>];
    bb88__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_180)<br/>_411 = discriminant(_176)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_186 = &amp;(*_187)<br/>StorageDead(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_337 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_190 = &amp;(((*_337).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_189 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Key&gt;::key(move _190)</td></tr></table>>];
    bb90__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">_185 = obligation::Obligation::find_collateral_in_deposits(move _186, move _189)</td></tr></table>>];
    bb91__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_186)<br/>StorageLive(_191)<br/>_191 = {closure@programs\klend\src\handlers\handler_deposit_and_withdraw.rs:91:28: 91:40}<br/></td></tr><tr><td align="left">_184 = std::result::Result::&lt;&amp;obligation::ObligationCollateral, anchor_lang::error::Error&gt;::map_or::&lt;u64, {closure@programs\klend\src\handlers\handler_deposit_and_withdraw.rs:91:28: 91:40}&gt;(move _185, const 0_u64, move _191)</td></tr></table>>];
    bb92__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_185)<br/>StorageDead(_187)<br/>StorageLive(_192)<br/>_192 = _184<br/>_174 = Eq(move _192, const 0_u64)<br/>StorageDead(_192)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb93__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = _174<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb94__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = const false<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_338 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_198 = &amp;(*_338)<br/></td></tr><tr><td align="left">_197 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _198)</td></tr></table>>];
    bb95__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_339 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_200 = &amp;(((*_339).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>StorageLive(_201)<br/>_201 = &amp;mut _195<br/>_199 = {closure@programs\klend\src\handlers\handler_deposit_and_withdraw.rs:99:29: 99:38} { ctx: move _200, withdraw_reserve_found: move _201 }<br/>StorageDead(_201)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_196 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::filter_map::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, {closure@programs\klend\src\handlers\handler_deposit_and_withdraw.rs:99:29: 99:38}&gt;(move _197, move _199)</td></tr></table>>];
    bb96__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_193 = &lt;FilterMap&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;, {closure@programs\klend\src\handlers\handler_deposit_and_withdraw.rs:99:29: 99:38}&gt; as Iterator&gt;::collect::&lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;(move _196)</td></tr></table>>];
    bb97__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_340 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_202 = &amp;(*_340)<br/></td></tr><tr><td align="left">_193 = std::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::to_vec(move _202)</td></tr></table>>];
    bb99__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_341 = deref_copy (_1.0: &amp;anchor_lang::prelude::Pubkey)<br/>_204 = &amp;(*_341)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_342 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_209 = &amp;(((*_342).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_208 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as Clone&gt;::clone(move _209)</td></tr></table>>];
    bb101__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_343 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_211 = &amp;(((*_343).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_210 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as Clone&gt;::clone(move _211)</td></tr></table>>];
    bb102__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_207 = handlers::handler_refresh_obligation::RefreshObligation::&lt;'_&gt; { lending_market: move _210, obligation: move _208 }<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>_206 = &amp;mut _207<br/>_205 = &amp;mut (*_206)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_193<br/></td></tr><tr><td align="left">_213 = Vec::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::as_slice(move _214)</td></tr></table>>];
    bb103__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_212 = &amp;(*_213)<br/>StorageDead(_214)<br/>StorageLive(_215)<br/>_215 = handlers::handler_refresh_obligation::RefreshObligationBumps<br/>_203 = anchor_lang::context::Context::&lt;'_, '_, '_, '_, handlers::handler_refresh_obligation::RefreshObligation&lt;'_&gt;&gt; { program_id: move _204, accounts: move _205, remaining_accounts: move _212, bumps: move _215 }<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_213)<br/>StorageDead(_206)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = move _203<br/>StorageLive(_220)<br/>_220 = state::types::MaxReservesAsCollateralCheck::Perform<br/></td></tr><tr><td align="left">_218 = handlers::handler_refresh_obligation::process(move _219, move _220)</td></tr></table>>];
    bb104__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb105__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_221 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _221)</td></tr></table>>];
    bb106__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_217 as Continue).0: ())<br/>_216 = _225<br/>StorageDead(_225)<br/>_383 = discriminant(_217)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_344 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_229 = &amp;(((*_344).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_228 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_mut(move _229)</td></tr></table>>];
    bb107__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = move ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_224)<br/>_224 = move _222<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _224)</td></tr></table>>];
    bb108__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_222)<br/>_409 = discriminant(_217)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">_227 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _228)</td></tr></table>>];
    bb110__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>_230 = discriminant(_227)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb111__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = move ((_227 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_226 = move _234<br/>StorageDead(_234)<br/>_385 = discriminant(_227)<br/>StorageDead(_227)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;mut _226<br/></td></tr><tr><td align="left">_237 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _238)</td></tr></table>>];
    bb112__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = move ((_227 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_233)<br/>_233 = move _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb113__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>_407 = discriminant(_227)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_236 = &amp;mut ((*_237).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_235 = last_update::LastUpdate::mark_stale(move _236)</td></tr></table>>];
    bb115__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_345 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_242 = &amp;(((*_345).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_241 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load_mut(move _242)</td></tr></table>>];
    bb116__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _241)</td></tr></table>>];
    bb117__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_243 = discriminant(_240)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb118__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = move ((_240 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_239 = move _247<br/>StorageDead(_247)<br/>_387 = discriminant(_240)<br/>StorageDead(_240)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;mut _239<br/></td></tr><tr><td align="left">_250 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _251)</td></tr></table>>];
    bb119__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = move ((_240 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_246)<br/>_246 = move _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb120__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>_405 = discriminant(_240)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_249 = &amp;mut ((*_250).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_248 = last_update::LastUpdate::mark_stale(move _249)</td></tr></table>>];
    bb122__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_346 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_255 = &amp;(((*_346).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_254 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _255)</td></tr></table>>];
    bb123__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _254)</td></tr></table>>];
    bb124__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>_256 = discriminant(_253)<br/></td></tr><tr><td align="left">switchInt(move _256)</td></tr></table>>];
    bb125__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = move ((_253 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_252 = move _260<br/>StorageDead(_260)<br/>_389 = discriminant(_253)<br/>StorageDead(_253)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = &amp;_226<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb126__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>_257 = move ((_253 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_259)<br/>_259 = move _257<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _259)</td></tr></table>>];
    bb127__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_257)<br/>_403 = discriminant(_253)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = &amp;_239<br/>_270 = &amp;(*_271)<br/></td></tr><tr><td align="left">_269 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _270)</td></tr></table>>];
    bb129__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_268 = &amp;(*_269)<br/>StorageDead(_270)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_252<br/>_274 = &amp;(*_275)<br/></td></tr><tr><td align="left">_273 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb130__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_272 = &amp;(*_273)<br/>StorageDead(_274)<br/>StorageLive(_276)<br/>_276 = _4<br/></td></tr><tr><td align="left">_263 = post_deposit_and_withdraw_obligation_enforcements(move _264, move _268, move _272, move _276)</td></tr></table>>];
    bb131__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageDead(_272)<br/>StorageDead(_268)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_262 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _263)</td></tr></table>>];
    bb132__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>_277 = discriminant(_262)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb133__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_262 as Continue).0: ())<br/>_261 = _281<br/>StorageDead(_281)<br/>_391 = discriminant(_262)<br/>StorageDead(_275)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>_172 = const ()<br/></td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb134__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = move ((_262 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_280)<br/>_280 = move _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb135__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>_401 = discriminant(_262)<br/>StorageDead(_275)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb136__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">drop(_239)</td></tr></table>>];
    bb137__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/></td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb138__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">drop(_193)</td></tr></table>>];
    bb139__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">_172 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_347 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_288 = &amp;(((*_347).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_287 = &amp;(*_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_348 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_290 = &amp;((*_348).2: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_289 = &amp;(*_290)<br/>StorageLive(_291)<br/>_291 = reserve::ReserveFarmKind::Collateral<br/>_286 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _287, farms_accounts: move _289, farm_kind: move _291 }<br/>StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_287)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_349 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_293 = &amp;(((*_349).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_292 = &amp;(*_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_350 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_295 = &amp;(((*_350).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_294 = &amp;(*_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_351 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_297 = &amp;(((*_351).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_296 = &amp;(*_297)<br/></td></tr><tr><td align="left">_285 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _286, move _292, move _294, move _296)</td></tr></table>>];
    bb142__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _285)</td></tr></table>>];
    bb143__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_298 = discriminant(_284)<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb144__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_284 as Continue).0: ())<br/>_283 = _302<br/>StorageDead(_302)<br/>_393 = discriminant(_284)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_352 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_309 = &amp;(((*_352).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_308 = &amp;(*_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_353 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_311 = &amp;((*_353).3: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_310 = &amp;(*_311)<br/>StorageLive(_312)<br/>_312 = reserve::ReserveFarmKind::Collateral<br/>_307 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _308, farms_accounts: move _310, farm_kind: move _312 }<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_308)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_354 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_314 = &amp;(((*_354).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_313 = &amp;(*_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_355 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_316 = &amp;(((*_355).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_315 = &amp;(*_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_356 = deref_copy (_1.1: &amp;mut handlers::handler_deposit_and_withdraw::DepositAndWithdraw&lt;'_&gt;)<br/>_318 = &amp;(((*_356).0: handlers::handler_deposit_reserve_liquidity_and_obligation_collateral::DepositReserveLiquidityAndObligationCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_317 = &amp;(*_318)<br/></td></tr><tr><td align="left">_306 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _307, move _313, move _315, move _317)</td></tr></table>>];
    bb145__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = move ((_284 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_301)<br/>_301 = move _299<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _301)</td></tr></table>>];
    bb146__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>_399 = discriminant(_284)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_315)<br/>StorageDead(_313)<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">_305 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _306)</td></tr></table>>];
    bb148__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>_319 = discriminant(_305)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb149__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_305 as Continue).0: ())<br/>_304 = _323<br/>StorageDead(_323)<br/>_395 = discriminant(_305)<br/>StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>_303 = const ()<br/>StorageDead(_303)<br/>_282 = const ()<br/>StorageDead(_282)<br/>StorageLive(_324)<br/>_324 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _324)<br/>StorageDead(_324)<br/>StorageDead(_106)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = move ((_305 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_322)<br/>_322 = move _320<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _322)</td></tr></table>>];
    bb151__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>_397 = discriminant(_305)<br/>StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">drop(_239)</td></tr></table>>];
    bb154__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/></td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb155__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">drop(_193)</td></tr></table>>];
    bb157__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_127)</td></tr></table>>];
    bb160__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb164__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left">return</td></tr></table>>];
    bb168__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">168 (cleanup)</td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb169__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">169 (cleanup)</td></tr><tr><td align="left">drop(_239)</td></tr></table>>];
    bb170__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">170 (cleanup)</td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb171__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left">drop(_193)</td></tr></table>>];
    bb172__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb173__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb174__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">174 (cleanup)</td></tr><tr><td align="left">drop(_127)</td></tr></table>>];
    bb175__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">175 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb176__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">176 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb177__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">177 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb178__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">178 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb179__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">179 (cleanup)</td></tr><tr><td align="left" balign="left">_437 = discriminant(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left" balign="left">_438 = discriminant(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left" balign="left">_439 = discriminant(_262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left" balign="left">_440 = discriminant(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left" balign="left">_441 = discriminant(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left" balign="left">_442 = discriminant(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">185 (cleanup)</td></tr><tr><td align="left" balign="left">_443 = discriminant(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">186 (cleanup)</td></tr><tr><td align="left" balign="left">_444 = discriminant(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">187 (cleanup)</td></tr><tr><td align="left" balign="left">_445 = discriminant(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left" balign="left">_446 = discriminant(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left" balign="left">_447 = discriminant(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left" balign="left">_448 = discriminant(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left" balign="left">_449 = discriminant(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left" balign="left">_450 = discriminant(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left" balign="left">_451 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left" balign="left">_452 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left" balign="left">_453 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left" balign="left">_454 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left" balign="left">_455 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_79 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left" balign="left">_456 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_79 -> bb1__0_79 [label="return"];
    bb1__0_79 -> bb2__0_79 [label="return"];
    bb1__0_79 -> bb178__0_79 [label="unwind"];
    bb2__0_79 -> bb3__0_79 [label="0"];
    bb2__0_79 -> bb5__0_79 [label="1"];
    bb2__0_79 -> bb4__0_79 [label="otherwise"];
    bb3__0_79 -> bb7__0_79 [label="return"];
    bb3__0_79 -> bb177__0_79 [label="unwind"];
    bb5__0_79 -> bb6__0_79 [label="return"];
    bb5__0_79 -> bb198__0_79 [label="unwind"];
    bb6__0_79 -> bb166__0_79 [label=""];
    bb7__0_79 -> bb8__0_79 [label="return"];
    bb7__0_79 -> bb177__0_79 [label="unwind"];
    bb8__0_79 -> bb9__0_79 [label="return"];
    bb8__0_79 -> bb178__0_79 [label="unwind"];
    bb9__0_79 -> bb10__0_79 [label="return"];
    bb10__0_79 -> bb11__0_79 [label="return"];
    bb10__0_79 -> bb178__0_79 [label="unwind"];
    bb11__0_79 -> bb12__0_79 [label="0"];
    bb11__0_79 -> bb13__0_79 [label="1"];
    bb11__0_79 -> bb4__0_79 [label="otherwise"];
    bb12__0_79 -> bb15__0_79 [label="return"];
    bb13__0_79 -> bb14__0_79 [label="return"];
    bb13__0_79 -> bb197__0_79 [label="unwind"];
    bb14__0_79 -> bb166__0_79 [label=""];
    bb15__0_79 -> bb16__0_79 [label="return"];
    bb15__0_79 -> bb178__0_79 [label="unwind"];
    bb16__0_79 -> bb17__0_79 [label="0"];
    bb16__0_79 -> bb18__0_79 [label="1"];
    bb16__0_79 -> bb4__0_79 [label="otherwise"];
    bb17__0_79 -> bb20__0_79 [label="return"];
    bb18__0_79 -> bb19__0_79 [label="return"];
    bb18__0_79 -> bb196__0_79 [label="unwind"];
    bb19__0_79 -> bb165__0_79 [label=""];
    bb20__0_79 -> bb21__0_79 [label="return"];
    bb20__0_79 -> bb178__0_79 [label="unwind"];
    bb21__0_79 -> bb22__0_79 [label="0"];
    bb21__0_79 -> bb23__0_79 [label="1"];
    bb21__0_79 -> bb4__0_79 [label="otherwise"];
    bb22__0_79 -> bb25__0_79 [label="return"];
    bb22__0_79 -> bb176__0_79 [label="unwind"];
    bb23__0_79 -> bb24__0_79 [label="return"];
    bb23__0_79 -> bb195__0_79 [label="unwind"];
    bb24__0_79 -> bb164__0_79 [label=""];
    bb25__0_79 -> bb26__0_79 [label="return"];
    bb25__0_79 -> bb176__0_79 [label="unwind"];
    bb26__0_79 -> bb27__0_79 [label="0"];
    bb26__0_79 -> bb28__0_79 [label="1"];
    bb26__0_79 -> bb4__0_79 [label="otherwise"];
    bb27__0_79 -> bb30__0_79 [label="return"];
    bb27__0_79 -> bb175__0_79 [label="unwind"];
    bb28__0_79 -> bb29__0_79 [label="return"];
    bb28__0_79 -> bb194__0_79 [label="unwind"];
    bb29__0_79 -> bb163__0_79 [label=""];
    bb30__0_79 -> bb31__0_79 [label="return"];
    bb30__0_79 -> bb175__0_79 [label="unwind"];
    bb31__0_79 -> bb32__0_79 [label="return"];
    bb31__0_79 -> bb175__0_79 [label="unwind"];
    bb32__0_79 -> bb33__0_79 [label="return"];
    bb32__0_79 -> bb175__0_79 [label="unwind"];
    bb33__0_79 -> bb34__0_79 [label="0"];
    bb33__0_79 -> bb35__0_79 [label="1"];
    bb33__0_79 -> bb4__0_79 [label="otherwise"];
    bb34__0_79 -> bb37__0_79 [label="return"];
    bb34__0_79 -> bb175__0_79 [label="unwind"];
    bb35__0_79 -> bb36__0_79 [label="return"];
    bb35__0_79 -> bb193__0_79 [label="unwind"];
    bb36__0_79 -> bb163__0_79 [label="return"];
    bb36__0_79 -> bb176__0_79 [label="unwind"];
    bb37__0_79 -> bb38__0_79 [label="return"];
    bb37__0_79 -> bb175__0_79 [label="unwind"];
    bb38__0_79 -> bb39__0_79 [label="return"];
    bb38__0_79 -> bb175__0_79 [label="unwind"];
    bb39__0_79 -> bb40__0_79 [label="return"];
    bb39__0_79 -> bb175__0_79 [label="unwind"];
    bb40__0_79 -> bb41__0_79 [label="return"];
    bb40__0_79 -> bb176__0_79 [label="unwind"];
    bb41__0_79 -> bb42__0_79 [label="return"];
    bb41__0_79 -> bb178__0_79 [label="unwind"];
    bb42__0_79 -> bb43__0_79 [label="return"];
    bb43__0_79 -> bb44__0_79 [label="return"];
    bb44__0_79 -> bb45__0_79 [label="return"];
    bb45__0_79 -> bb46__0_79 [label="return"];
    bb45__0_79 -> bb178__0_79 [label="unwind"];
    bb46__0_79 -> bb47__0_79 [label="0"];
    bb46__0_79 -> bb48__0_79 [label="1"];
    bb46__0_79 -> bb4__0_79 [label="otherwise"];
    bb47__0_79 -> bb50__0_79 [label="return"];
    bb48__0_79 -> bb49__0_79 [label="return"];
    bb48__0_79 -> bb192__0_79 [label="unwind"];
    bb49__0_79 -> bb166__0_79 [label=""];
    bb50__0_79 -> bb51__0_79 [label="return"];
    bb50__0_79 -> bb178__0_79 [label="unwind"];
    bb51__0_79 -> bb52__0_79 [label="0"];
    bb51__0_79 -> bb53__0_79 [label="1"];
    bb51__0_79 -> bb4__0_79 [label="otherwise"];
    bb52__0_79 -> bb55__0_79 [label="return"];
    bb53__0_79 -> bb54__0_79 [label="return"];
    bb53__0_79 -> bb191__0_79 [label="unwind"];
    bb54__0_79 -> bb162__0_79 [label=""];
    bb55__0_79 -> bb56__0_79 [label="return"];
    bb55__0_79 -> bb178__0_79 [label="unwind"];
    bb56__0_79 -> bb57__0_79 [label="0"];
    bb56__0_79 -> bb58__0_79 [label="1"];
    bb56__0_79 -> bb4__0_79 [label="otherwise"];
    bb57__0_79 -> bb60__0_79 [label="return"];
    bb58__0_79 -> bb59__0_79 [label="return"];
    bb58__0_79 -> bb190__0_79 [label="unwind"];
    bb59__0_79 -> bb161__0_79 [label=""];
    bb60__0_79 -> bb61__0_79 [label="return"];
    bb60__0_79 -> bb178__0_79 [label="unwind"];
    bb61__0_79 -> bb62__0_79 [label="0"];
    bb61__0_79 -> bb63__0_79 [label="1"];
    bb61__0_79 -> bb4__0_79 [label="otherwise"];
    bb62__0_79 -> bb65__0_79 [label="return"];
    bb62__0_79 -> bb174__0_79 [label="unwind"];
    bb63__0_79 -> bb64__0_79 [label="return"];
    bb63__0_79 -> bb189__0_79 [label="unwind"];
    bb64__0_79 -> bb160__0_79 [label=""];
    bb65__0_79 -> bb66__0_79 [label="return"];
    bb65__0_79 -> bb174__0_79 [label="unwind"];
    bb66__0_79 -> bb67__0_79 [label="0"];
    bb66__0_79 -> bb68__0_79 [label="1"];
    bb66__0_79 -> bb4__0_79 [label="otherwise"];
    bb67__0_79 -> bb70__0_79 [label="return"];
    bb67__0_79 -> bb173__0_79 [label="unwind"];
    bb68__0_79 -> bb69__0_79 [label="return"];
    bb68__0_79 -> bb188__0_79 [label="unwind"];
    bb69__0_79 -> bb159__0_79 [label=""];
    bb70__0_79 -> bb71__0_79 [label="return"];
    bb70__0_79 -> bb173__0_79 [label="unwind"];
    bb71__0_79 -> bb72__0_79 [label="return"];
    bb71__0_79 -> bb173__0_79 [label="unwind"];
    bb72__0_79 -> bb73__0_79 [label="return"];
    bb72__0_79 -> bb173__0_79 [label="unwind"];
    bb73__0_79 -> bb74__0_79 [label="0"];
    bb73__0_79 -> bb75__0_79 [label="1"];
    bb73__0_79 -> bb4__0_79 [label="otherwise"];
    bb74__0_79 -> bb77__0_79 [label="return"];
    bb74__0_79 -> bb173__0_79 [label="unwind"];
    bb75__0_79 -> bb76__0_79 [label="return"];
    bb75__0_79 -> bb187__0_79 [label="unwind"];
    bb76__0_79 -> bb159__0_79 [label="return"];
    bb76__0_79 -> bb174__0_79 [label="unwind"];
    bb77__0_79 -> bb78__0_79 [label="return"];
    bb77__0_79 -> bb173__0_79 [label="unwind"];
    bb78__0_79 -> bb79__0_79 [label="return"];
    bb78__0_79 -> bb173__0_79 [label="unwind"];
    bb79__0_79 -> bb80__0_79 [label="return"];
    bb79__0_79 -> bb173__0_79 [label="unwind"];
    bb80__0_79 -> bb81__0_79 [label="return"];
    bb80__0_79 -> bb174__0_79 [label="unwind"];
    bb81__0_79 -> bb82__0_79 [label="return"];
    bb81__0_79 -> bb178__0_79 [label="unwind"];
    bb82__0_79 -> bb83__0_79 [label="0"];
    bb82__0_79 -> bb140__0_79 [label="otherwise"];
    bb83__0_79 -> bb84__0_79 [label="return"];
    bb84__0_79 -> bb85__0_79 [label="return"];
    bb84__0_79 -> bb178__0_79 [label="unwind"];
    bb85__0_79 -> bb86__0_79 [label="0"];
    bb85__0_79 -> bb87__0_79 [label="1"];
    bb85__0_79 -> bb4__0_79 [label="otherwise"];
    bb86__0_79 -> bb89__0_79 [label="return"];
    bb86__0_79 -> bb172__0_79 [label="unwind"];
    bb87__0_79 -> bb88__0_79 [label="return"];
    bb87__0_79 -> bb186__0_79 [label="unwind"];
    bb88__0_79 -> bb158__0_79 [label=""];
    bb89__0_79 -> bb90__0_79 [label="return"];
    bb89__0_79 -> bb172__0_79 [label="unwind"];
    bb90__0_79 -> bb91__0_79 [label="return"];
    bb90__0_79 -> bb172__0_79 [label="unwind"];
    bb91__0_79 -> bb92__0_79 [label="return"];
    bb91__0_79 -> bb172__0_79 [label="unwind"];
    bb92__0_79 -> bb93__0_79 [label="return"];
    bb92__0_79 -> bb178__0_79 [label="unwind"];
    bb93__0_79 -> bb98__0_79 [label="0"];
    bb93__0_79 -> bb94__0_79 [label="otherwise"];
    bb94__0_79 -> bb95__0_79 [label="return"];
    bb95__0_79 -> bb96__0_79 [label="return"];
    bb96__0_79 -> bb97__0_79 [label="return"];
    bb97__0_79 -> bb100__0_79 [label=""];
    bb98__0_79 -> bb99__0_79 [label="return"];
    bb99__0_79 -> bb100__0_79 [label=""];
    bb100__0_79 -> bb101__0_79 [label="return"];
    bb100__0_79 -> bb171__0_79 [label="unwind"];
    bb101__0_79 -> bb102__0_79 [label="return"];
    bb101__0_79 -> bb171__0_79 [label="unwind"];
    bb102__0_79 -> bb103__0_79 [label="return"];
    bb102__0_79 -> bb171__0_79 [label="unwind"];
    bb103__0_79 -> bb104__0_79 [label="return"];
    bb103__0_79 -> bb171__0_79 [label="unwind"];
    bb104__0_79 -> bb105__0_79 [label="return"];
    bb104__0_79 -> bb171__0_79 [label="unwind"];
    bb105__0_79 -> bb106__0_79 [label="0"];
    bb105__0_79 -> bb107__0_79 [label="1"];
    bb105__0_79 -> bb4__0_79 [label="otherwise"];
    bb106__0_79 -> bb109__0_79 [label="return"];
    bb106__0_79 -> bb171__0_79 [label="unwind"];
    bb107__0_79 -> bb108__0_79 [label="return"];
    bb107__0_79 -> bb185__0_79 [label="unwind"];
    bb108__0_79 -> bb156__0_79 [label=""];
    bb109__0_79 -> bb110__0_79 [label="return"];
    bb109__0_79 -> bb171__0_79 [label="unwind"];
    bb110__0_79 -> bb111__0_79 [label="0"];
    bb110__0_79 -> bb112__0_79 [label="1"];
    bb110__0_79 -> bb4__0_79 [label="otherwise"];
    bb111__0_79 -> bb114__0_79 [label="return"];
    bb111__0_79 -> bb170__0_79 [label="unwind"];
    bb112__0_79 -> bb113__0_79 [label="return"];
    bb112__0_79 -> bb184__0_79 [label="unwind"];
    bb113__0_79 -> bb155__0_79 [label=""];
    bb114__0_79 -> bb115__0_79 [label="return"];
    bb114__0_79 -> bb170__0_79 [label="unwind"];
    bb115__0_79 -> bb116__0_79 [label="return"];
    bb115__0_79 -> bb170__0_79 [label="unwind"];
    bb116__0_79 -> bb117__0_79 [label="return"];
    bb116__0_79 -> bb170__0_79 [label="unwind"];
    bb117__0_79 -> bb118__0_79 [label="0"];
    bb117__0_79 -> bb119__0_79 [label="1"];
    bb117__0_79 -> bb4__0_79 [label="otherwise"];
    bb118__0_79 -> bb121__0_79 [label="return"];
    bb118__0_79 -> bb169__0_79 [label="unwind"];
    bb119__0_79 -> bb120__0_79 [label="return"];
    bb119__0_79 -> bb183__0_79 [label="unwind"];
    bb120__0_79 -> bb154__0_79 [label=""];
    bb121__0_79 -> bb122__0_79 [label="return"];
    bb121__0_79 -> bb169__0_79 [label="unwind"];
    bb122__0_79 -> bb123__0_79 [label="return"];
    bb122__0_79 -> bb169__0_79 [label="unwind"];
    bb123__0_79 -> bb124__0_79 [label="return"];
    bb123__0_79 -> bb169__0_79 [label="unwind"];
    bb124__0_79 -> bb125__0_79 [label="0"];
    bb124__0_79 -> bb126__0_79 [label="1"];
    bb124__0_79 -> bb4__0_79 [label="otherwise"];
    bb125__0_79 -> bb128__0_79 [label="return"];
    bb125__0_79 -> bb168__0_79 [label="unwind"];
    bb126__0_79 -> bb127__0_79 [label="return"];
    bb126__0_79 -> bb182__0_79 [label="unwind"];
    bb127__0_79 -> bb153__0_79 [label=""];
    bb128__0_79 -> bb129__0_79 [label="return"];
    bb128__0_79 -> bb168__0_79 [label="unwind"];
    bb129__0_79 -> bb130__0_79 [label="return"];
    bb129__0_79 -> bb168__0_79 [label="unwind"];
    bb130__0_79 -> bb131__0_79 [label="return"];
    bb130__0_79 -> bb168__0_79 [label="unwind"];
    bb131__0_79 -> bb132__0_79 [label="return"];
    bb131__0_79 -> bb168__0_79 [label="unwind"];
    bb132__0_79 -> bb133__0_79 [label="0"];
    bb132__0_79 -> bb134__0_79 [label="1"];
    bb132__0_79 -> bb4__0_79 [label="otherwise"];
    bb133__0_79 -> bb136__0_79 [label="return"];
    bb133__0_79 -> bb169__0_79 [label="unwind"];
    bb134__0_79 -> bb135__0_79 [label="return"];
    bb134__0_79 -> bb181__0_79 [label="unwind"];
    bb135__0_79 -> bb153__0_79 [label="return"];
    bb135__0_79 -> bb169__0_79 [label="unwind"];
    bb136__0_79 -> bb137__0_79 [label="return"];
    bb136__0_79 -> bb170__0_79 [label="unwind"];
    bb137__0_79 -> bb138__0_79 [label="return"];
    bb137__0_79 -> bb171__0_79 [label="unwind"];
    bb138__0_79 -> bb139__0_79 [label="return"];
    bb138__0_79 -> bb178__0_79 [label="unwind"];
    bb139__0_79 -> bb141__0_79 [label=""];
    bb140__0_79 -> bb141__0_79 [label=""];
    bb141__0_79 -> bb142__0_79 [label="return"];
    bb142__0_79 -> bb143__0_79 [label="return"];
    bb142__0_79 -> bb178__0_79 [label="unwind"];
    bb143__0_79 -> bb144__0_79 [label="0"];
    bb143__0_79 -> bb145__0_79 [label="1"];
    bb143__0_79 -> bb4__0_79 [label="otherwise"];
    bb144__0_79 -> bb147__0_79 [label="return"];
    bb145__0_79 -> bb146__0_79 [label="return"];
    bb145__0_79 -> bb180__0_79 [label="unwind"];
    bb146__0_79 -> bb152__0_79 [label=""];
    bb147__0_79 -> bb148__0_79 [label="return"];
    bb147__0_79 -> bb178__0_79 [label="unwind"];
    bb148__0_79 -> bb149__0_79 [label="0"];
    bb148__0_79 -> bb150__0_79 [label="1"];
    bb148__0_79 -> bb4__0_79 [label="otherwise"];
    bb149__0_79 -> bb167__0_79 [label=""];
    bb150__0_79 -> bb151__0_79 [label="return"];
    bb150__0_79 -> bb179__0_79 [label="unwind"];
    bb151__0_79 -> bb152__0_79 [label=""];
    bb152__0_79 -> bb162__0_79 [label=""];
    bb153__0_79 -> bb154__0_79 [label="return"];
    bb153__0_79 -> bb170__0_79 [label="unwind"];
    bb154__0_79 -> bb155__0_79 [label="return"];
    bb154__0_79 -> bb171__0_79 [label="unwind"];
    bb155__0_79 -> bb156__0_79 [label=""];
    bb156__0_79 -> bb157__0_79 [label="return"];
    bb156__0_79 -> bb178__0_79 [label="unwind"];
    bb157__0_79 -> bb158__0_79 [label=""];
    bb158__0_79 -> bb162__0_79 [label=""];
    bb159__0_79 -> bb160__0_79 [label="return"];
    bb159__0_79 -> bb178__0_79 [label="unwind"];
    bb160__0_79 -> bb161__0_79 [label=""];
    bb161__0_79 -> bb162__0_79 [label=""];
    bb162__0_79 -> bb166__0_79 [label=""];
    bb163__0_79 -> bb164__0_79 [label="return"];
    bb163__0_79 -> bb178__0_79 [label="unwind"];
    bb164__0_79 -> bb165__0_79 [label=""];
    bb165__0_79 -> bb166__0_79 [label=""];
    bb166__0_79 -> bb167__0_79 [label=""];
    bb168__0_79 -> bb169__0_79 [label="return"];
    bb169__0_79 -> bb170__0_79 [label="return"];
    bb170__0_79 -> bb171__0_79 [label="return"];
    bb171__0_79 -> bb178__0_79 [label="return"];
    bb172__0_79 -> bb178__0_79 [label="return"];
    bb173__0_79 -> bb174__0_79 [label="return"];
    bb174__0_79 -> bb178__0_79 [label="return"];
    bb175__0_79 -> bb176__0_79 [label="return"];
    bb176__0_79 -> bb178__0_79 [label="return"];
    bb177__0_79 -> bb178__0_79 [label="return"];
    bb179__0_79 -> bb178__0_79 [label=""];
    bb180__0_79 -> bb178__0_79 [label=""];
    bb181__0_79 -> bb168__0_79 [label=""];
    bb182__0_79 -> bb169__0_79 [label=""];
    bb183__0_79 -> bb170__0_79 [label=""];
    bb184__0_79 -> bb171__0_79 [label=""];
    bb185__0_79 -> bb171__0_79 [label=""];
    bb186__0_79 -> bb178__0_79 [label=""];
    bb187__0_79 -> bb173__0_79 [label=""];
    bb188__0_79 -> bb174__0_79 [label=""];
    bb189__0_79 -> bb178__0_79 [label=""];
    bb190__0_79 -> bb178__0_79 [label=""];
    bb191__0_79 -> bb178__0_79 [label=""];
    bb192__0_79 -> bb178__0_79 [label=""];
    bb193__0_79 -> bb175__0_79 [label=""];
    bb194__0_79 -> bb176__0_79 [label=""];
    bb195__0_79 -> bb178__0_79 [label=""];
    bb196__0_79 -> bb178__0_79 [label=""];
    bb197__0_79 -> bb178__0_79 [label=""];
    bb198__0_79 -> bb178__0_79 [label=""];
}
