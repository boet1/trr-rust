digraph Mir_0_1308 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn refresh_obligation_borrows(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut state::obligation::Obligation, _3: &amp;ReErased state::lending_market::LendingMarket, _4: u64, _5: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, _6: impl Iterator&lt;Item = T&gt;/#3, _7: impl Iterator&lt;Item = U&gt;/#4) -&gt; std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: state::last_update::PriceStatusFlags;<br align="left"/>let mut _11: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: u8;<br align="left"/>let _13: bool;<br align="left"/>let mut _14: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: i32;<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _19: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _20: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;;<br align="left"/>let mut _21: std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _22: &amp;ReErased mut [state::obligation::ObligationLiquidity];<br align="left"/>let mut _23: &amp;ReErased mut [state::obligation::ObligationLiquidity; 5_usize];<br align="left"/>let mut _24: Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _25: std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _26: ();<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::option::Option&lt;(usize, &amp;ReErased mut state::obligation::ObligationLiquidity)&gt;;<br align="left"/>let mut _29: &amp;ReErased mut std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _30: &amp;ReErased mut std::iter::Filter&lt;std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: !;<br align="left"/>let _33: usize;<br align="left"/>let _34: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _35: (i32, bool);<br align="left"/>let _36: T/#1;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, T/#1&gt;;<br align="left"/>let mut _38: std::result::Result&lt;T/#1, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::option::Option&lt;T/#1&gt;;<br align="left"/>let mut _40: &amp;ReErased mut impl Iterator&lt;Item = T&gt;/#3;<br align="left"/>let mut _41: anchor_lang::error::Error;<br align="left"/>let mut _42: anchor_lang::error::AnchorError;<br align="left"/>let mut _43: std::string::String;<br align="left"/>let mut _44: &amp;ReErased LendingError;<br align="left"/>let _45: LendingError;<br align="left"/>let mut _46: u32;<br align="left"/>let mut _47: LendingError;<br align="left"/>let mut _48: std::string::String;<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let _50: LendingError;<br align="left"/>let mut _51: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _52: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _53: anchor_lang::error::Source;<br align="left"/>let mut _54: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _59: T/#1;<br align="left"/>let _60: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _61: &amp;ReErased T/#1;<br align="left"/>let _62: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _63: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _65: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _66: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _67: &amp;ReErased T/#1;<br align="left"/>let mut _68: Closure(DefId(0:1313 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#1}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _73: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _74: ();<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _76: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _78: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _79: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _80: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _81: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _82: usize;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _88: ();<br align="left"/>let _89: utils::fraction::BigFraction;<br align="left"/>let mut _90: state::reserve::BigFractionBytes;<br align="left"/>let mut _91: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _92: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _93: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _94: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _95: ();<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _97: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _99: utils::fraction::BigFraction;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _104: ();<br align="left"/>let _105: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _106: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _107: u64;<br align="left"/>let mut _108: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _109: u64;<br align="left"/>let mut _110: (u64, bool);<br align="left"/>let _111: ();<br align="left"/>let mut _112: isize;<br align="left"/>let _113: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _114: ();<br align="left"/>let mut _115: bool;<br align="left"/>let mut _116: &amp;ReErased [u8];<br align="left"/>let mut _117: &amp;ReErased [u8; 20_usize];<br align="left"/>let _118: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _119: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _120: &amp;ReErased u8;<br align="left"/>let _121: &amp;ReErased u8;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: anchor_lang::error::Error;<br align="left"/>let mut _124: anchor_lang::error::AnchorError;<br align="left"/>let mut _125: std::string::String;<br align="left"/>let mut _126: &amp;ReErased LendingError;<br align="left"/>let _127: LendingError;<br align="left"/>let mut _128: u32;<br align="left"/>let mut _129: LendingError;<br align="left"/>let mut _130: std::string::String;<br align="left"/>let mut _131: &amp;ReErased LendingError;<br align="left"/>let _132: LendingError;<br align="left"/>let mut _133: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _134: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _135: anchor_lang::error::Source;<br align="left"/>let mut _136: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _137: ();<br align="left"/>let mut _138: bool;<br align="left"/>let mut _139: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _140: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: anchor_lang::error::Error;<br align="left"/>let mut _143: anchor_lang::error::Error;<br align="left"/>let mut _144: anchor_lang::error::AnchorError;<br align="left"/>let mut _145: std::string::String;<br align="left"/>let mut _146: &amp;ReErased LendingError;<br align="left"/>let _147: LendingError;<br align="left"/>let mut _148: u32;<br align="left"/>let mut _149: LendingError;<br align="left"/>let mut _150: std::string::String;<br align="left"/>let mut _151: &amp;ReErased LendingError;<br align="left"/>let _152: LendingError;<br align="left"/>let mut _153: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _154: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _155: anchor_lang::error::Source;<br align="left"/>let mut _156: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _157: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _158: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _159: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _160: u64;<br align="left"/>let mut _161: u64;<br align="left"/>let mut _162: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _163: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _166: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _167: u64;<br align="left"/>let mut _168: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _169: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _170: (u64, bool);<br align="left"/>let mut _171: u64;<br align="left"/>let _172: ();<br align="left"/>let mut _173: bool;<br align="left"/>let mut _174: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _175: state::reserve::ReserveStatus;<br align="left"/>let mut _176: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _177: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _178: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _179: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _180: state::reserve::ReserveStatus;<br align="left"/>let mut _181: (u8, bool);<br align="left"/>let _182: ();<br align="left"/>let mut _183: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _184: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _185: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _186: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _187: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _188: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _189: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _191: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _192: u16;<br align="left"/>let mut _193: u64;<br align="left"/>let mut _194: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u64&gt;;<br align="left"/>let mut _195: std::result::Result&lt;u64, anchor_lang::error::Error&gt;;<br align="left"/>let mut _196: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _197: u64;<br align="left"/>let mut _198: isize;<br align="left"/>let _199: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _200: !;<br align="left"/>let mut _201: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _202: u64;<br align="left"/>let mut _203: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _204: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _205: bool;<br align="left"/>let mut _206: &amp;ReErased mut impl Iterator&lt;Item = U&gt;/#4;<br align="left"/>let mut _207: &amp;ReErased mut impl Iterator&lt;Item = U&gt;/#4;<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _212: ();<br align="left"/>let _213: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _214: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _215: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _216: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _217: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _218: u128;<br align="left"/>let mut _219: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _220: ();<br align="left"/>let mut _221: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _222: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _223: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _224: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _225: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _226: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _227: bool;<br align="left"/>let mut _228: &amp;ReErased std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _229: ();<br align="left"/>let mut _230: bool;<br align="left"/>let mut _231: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _232: &amp;ReErased u64;<br align="left"/>let mut _233: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _234: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _235: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _236: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _237: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _238: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _239: u128;<br align="left"/>let mut _240: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _241: ();<br align="left"/>let mut _242: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _243: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _244: u8;<br align="left"/>let mut _245: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _246: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _247: usize;<br align="left"/>let mut _248: usize;<br align="left"/>let mut _249: bool;<br align="left"/>let _250: ();<br align="left"/>let mut _251: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let mut _252: state::last_update::PriceStatusFlags;<br align="left"/>let mut _253: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let _254: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _255: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _256: ();<br align="left"/>let _257: ();<br align="left"/>let mut _258: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _259: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _261: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _262: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _263: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _266: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _267: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _268: &amp;ReErased &amp;ReErased &amp;ReErased str;<br align="left"/>let _269: &amp;ReErased &amp;ReErased &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased &amp;ReErased str;<br align="left"/>let _271: &amp;ReErased str;<br align="left"/>let mut _272: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let _273: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _274: &amp;ReErased std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _275: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _276: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _277: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _278: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _279: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _280: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _281: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _282: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _284: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _285: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _286: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _287: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _288: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _289: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _290: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _292: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _293: bool;<br align="left"/>let mut _294: &amp;ReErased std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _295: ();<br align="left"/>let mut _296: bool;<br align="left"/>let mut _297: i32;<br align="left"/>let mut _298: !;<br align="left"/>let mut _299: anchor_lang::error::Error;<br align="left"/>let mut _300: anchor_lang::error::AnchorError;<br align="left"/>let mut _301: std::string::String;<br align="left"/>let mut _302: &amp;ReErased LendingError;<br align="left"/>let _303: LendingError;<br align="left"/>let mut _304: u32;<br align="left"/>let mut _305: LendingError;<br align="left"/>let mut _306: std::string::String;<br align="left"/>let mut _307: &amp;ReErased LendingError;<br align="left"/>let _308: LendingError;<br align="left"/>let mut _309: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _310: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _311: anchor_lang::error::Source;<br align="left"/>let mut _312: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _313: u64;<br align="left"/>let mut _314: state::types::RefreshObligationBorrowsResult;<br align="left"/>let mut _315: u8;<br align="left"/>let mut _316: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _317: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _318: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _319: state::last_update::PriceStatusFlags;<br align="left"/>let mut _320: u64;<br align="left"/>let mut _321: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _322: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _323: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _324: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let mut _325: &amp;ReErased LendingError;<br align="left"/>let mut _326: &amp;ReErased LendingError;<br align="left"/>let mut _327: &amp;ReErased LendingError;<br align="left"/>let mut _328: &amp;ReErased LendingError;<br align="left"/>let mut _329: &amp;ReErased LendingError;<br align="left"/>let mut _330: &amp;ReErased LendingError;<br align="left"/>let mut _331: &amp;ReErased LendingError;<br align="left"/>let mut _332: &amp;ReErased LendingError;<br align="left"/>let mut _333: bool;<br align="left"/>let mut _334: bool;<br align="left"/>let mut _335: isize;<br align="left"/>let mut _336: isize;<br align="left"/>let mut _337: isize;<br align="left"/>let mut _338: isize;<br align="left"/>let mut _339: isize;<br align="left"/>let mut _340: isize;<br align="left"/>let mut _341: isize;<br align="left"/>let mut _342: isize;<br align="left"/>let mut _343: isize;<br align="left"/>let mut _344: isize;<br align="left"/>let mut _345: isize;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug lending_market =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug elevation_group =&gt; _5;<br align="left"/>debug reserves_iter =&gt; _6;<br align="left"/>debug referrer_token_states_iter =&gt; _7;<br align="left"/>debug borrowed_assets_market_value =&gt; _8;<br align="left"/>debug borrow_factor_adjusted_debt_value =&gt; _9;<br align="left"/>debug prices_state =&gt; _10;<br align="left"/>debug highest_borrow_factor_f =&gt; _11;<br align="left"/>debug num_of_obsolete_reserves =&gt; _12;<br align="left"/>debug obligation_has_referrer =&gt; _13;<br align="left"/>debug borrowed_amounts_accumulator_for_elevation_group =&gt; _15;<br align="left"/>debug num_borrow_reserves =&gt; _16;<br align="left"/>debug iter =&gt; _25;<br align="left"/>debug index =&gt; _33;<br align="left"/>debug borrow =&gt; _34;<br align="left"/>debug borrow_reserve =&gt; _36;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug borrow_reserve_info_key =&gt; _60;<br align="left"/>debug borrow_reserve =&gt; _62;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug cumulative_borrow_rate_bf =&gt; _89;<br align="left"/>debug previous_borrowed_amount_f =&gt; _93;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug borrowed_amount_f =&gt; _105;<br align="left"/>debug borrowed_amount =&gt; _107;<br align="left"/>debug elevation_group =&gt; _113;<br align="left"/>debug residual =&gt; _199;<br align="left"/>debug val =&gt; _202;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug market_value_f =&gt; _213;<br align="left"/>debug borrow_factor_f =&gt; _223;<br align="left"/>debug borrow_factor_adjusted_market_value =&gt; _236;<br align="left"/>debug borrowed_amount_in_elevation_group =&gt; _292;<br align="left"/>>;
    bb0__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_334 = const false<br/>_333 = const false<br/>StorageLive(_8)<br/>_8 = const _<br/>StorageLive(_9)<br/>_9 = const _<br/>StorageLive(_10)<br/></td></tr><tr><td align="left">_10 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::all()</td></tr></table>>];
    bb1__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = const _<br/>StorageLive(_12)<br/>_12 = const 0_u8<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/></td></tr><tr><td align="left">_13 = obligation::Obligation::has_referrer(move _14)</td></tr></table>>];
    bb2__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>_15 = const 0_u64<br/>StorageLive(_16)<br/>_16 = const 0_i32<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;mut ((*_2).7: [state::obligation::ObligationLiquidity; 5])<br/>_22 = move _23 as &amp;mut [state::obligation::ObligationLiquidity] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = core::slice::&lt;impl [obligation::ObligationLiquidity]&gt;::iter_mut(move _22)</td></tr></table>>];
    bb3__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt; as Iterator&gt;::enumerate(move _21)</td></tr></table>>];
    bb4__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_24)<br/>_24 = {closure@programs\klend\src\lending_market\lending_operations.rs:1152:17: 1152:30}<br/></td></tr><tr><td align="left">_19 = &lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt;&gt; as Iterator&gt;::filter::&lt;{closure@programs\klend\src\lending_market\lending_operations.rs:1152:17: 1152:30}&gt;(move _20, move _24)</td></tr></table>>];
    bb5__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;Filter&lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt;&gt;, {closure@programs\klend\src\lending_market\lending_operations.rs:1152:17: 1152:30}&gt; as IntoIterator&gt;::into_iter(move _19)</td></tr></table>>];
    bb6__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_25)<br/>_25 = move _18<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut _25<br/>_29 = &amp;mut (*_30)<br/></td></tr><tr><td align="left">_28 = &lt;Filter&lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt;&gt;, {closure@programs\klend\src\lending_market\lending_operations.rs:1152:17: 1152:30}&gt; as Iterator&gt;::next(move _29)</td></tr></table>>];
    bb8__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb9__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = (((_28 as Some).0: (usize, &amp;mut state::obligation::ObligationLiquidity)).0: usize)<br/>StorageLive(_34)<br/>_34 = move (((_28 as Some).0: (usize, &amp;mut state::obligation::ObligationLiquidity)).1: &amp;mut state::obligation::ObligationLiquidity)<br/>_35 = CheckedAdd(_16, const 1_i32)<br/></td></tr><tr><td align="left">assert(!move (_35.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _16, const 1_i32)</td></tr></table>>];
    bb10__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_17 = const ()<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;_5<br/></td></tr><tr><td align="left">_293 = std::option::Option::&lt;&amp;state::lending_market::ElevationGroup&gt;::is_some(move _294)</td></tr></table>>];
    bb12__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_16 = move (_35.0: i32)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut _6<br/></td></tr><tr><td align="left">_39 = &lt;impl Iterator&lt;Item = T&gt; as Iterator&gt;::next(move _40)</td></tr></table>>];
    bb13__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_334 = const true<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_330 = const _<br/>_44 = &amp;(*_330)<br/></td></tr><tr><td align="left">_43 = LendingError::name(move _44)</td></tr></table>>];
    bb14__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_46 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _47)</td></tr></table>>];
    bb15__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_329 = const _<br/>_49 = &amp;(*_329)<br/></td></tr><tr><td align="left">_48 = &lt;LendingError as ToString&gt;::to_string(move _49)</td></tr></table>>];
    bb16__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1157_u32 }<br/>_52 = anchor_lang::error::ErrorOrigin::Source(move _53)<br/>StorageDead(_53)<br/>_51 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _52)<br/>StorageDead(_52)<br/>StorageLive(_54)<br/>_54 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_42 = anchor_lang::error::AnchorError { error_name: move _43, error_code_number: move _46, error_msg: move _48, error_origin: move _51, compared_values: move _54 }<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _42)</td></tr></table>>];
    bb17__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_334 = const false<br/></td></tr><tr><td align="left">_38 = std::option::Option::&lt;T&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _39, move _41)</td></tr></table>>];
    bb18__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_334 = const false<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;T, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb19__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_55 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb20__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_37 as Continue).0: T)<br/>_36 = move _59<br/>StorageDead(_59)<br/>_335 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_36<br/></td></tr><tr><td align="left">_60 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_pubkey(move _61)</td></tr></table>>];
    bb21__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_58)<br/>_58 = move _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb22__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>_357 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_36<br/></td></tr><tr><td align="left">_66 = &lt;T as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_mut(move _67)</td></tr></table>>];
    bb24__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageLive(_68)<br/>_68 = {closure@programs\klend\src\lending_market\lending_operations.rs:1163:22: 1163:25}<br/></td></tr><tr><td align="left">_65 = std::result::Result::&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\lending_market\lending_operations.rs:1163:22: 1163:25}&gt;(move _66, move _68)</td></tr></table>>];
    bb25__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb26__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_69 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb27__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = move ((_64 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_63 = move _73<br/>StorageDead(_73)<br/>_62 = &amp;mut _63<br/>_337 = discriminant(_64)<br/>StorageDead(_64)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_34)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;(*_62)<br/></td></tr><tr><td align="left">_79 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _80)</td></tr></table>>];
    bb28__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = move ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_72)<br/>_72 = move _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb29__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>_355 = discriminant(_64)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_78 = &amp;(*_79)<br/>StorageDead(_80)<br/>StorageLive(_81)<br/>_81 = _60<br/>StorageLive(_82)<br/>_82 = _33<br/>StorageLive(_83)<br/>_83 = _4<br/></td></tr><tr><td align="left">_76 = check_obligation_liquidity_borrow_reserve(move _77, move _78, move _81, move _82, move _83)</td></tr></table>>];
    bb31__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb32__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_84 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb33__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_75 as Continue).0: ())<br/>_74 = _88<br/>StorageDead(_88)<br/>_339 = discriminant(_75)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;(*_62)<br/></td></tr><tr><td align="left">_91 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb34__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = move ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_87)<br/>_87 = move _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb35__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>_353 = discriminant(_75)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = (((*_91).5: state::reserve::ReserveLiquidity).10: state::reserve::BigFractionBytes)<br/></td></tr><tr><td align="left">_89 = &lt;utils::fraction::BigFraction as From&lt;reserve::BigFractionBytes&gt;&gt;::from(move _90)</td></tr></table>>];
    bb37__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_91)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;(*_34)<br/></td></tr><tr><td align="left">_93 = obligation::ObligationLiquidity::borrowed_amount(move _94)</td></tr></table>>];
    bb38__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;mut (*_34)<br/>StorageLive(_99)<br/>_99 = _89<br/></td></tr><tr><td align="left">_97 = obligation::ObligationLiquidity::accrue_interest(move _98, move _99)</td></tr></table>>];
    bb39__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb40__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_100 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb41__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_96 as Continue).0: ())<br/>_95 = _104<br/>StorageDead(_104)<br/>_341 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;(*_34)<br/></td></tr><tr><td align="left">_105 = obligation::ObligationLiquidity::borrowed_amount(move _106)</td></tr></table>>];
    bb42__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = move ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_103)<br/>_103 = move _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb43__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>_351 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_105<br/></td></tr><tr><td align="left">_107 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_ceil::&lt;u64&gt;(move _108)</td></tr></table>>];
    bb45__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_109)<br/>_109 = _107<br/>_110 = CheckedAdd(_15, _109)<br/></td></tr><tr><td align="left">assert(!move (_110.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _15, move _109)</td></tr></table>>];
    bb46__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_15 = move (_110.0: u64)<br/>StorageDead(_109)<br/>StorageLive(_111)<br/>_112 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb47__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_5 as Some).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_62)<br/></td></tr><tr><td align="left">_118 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb48__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_117 = &amp;(((*_118).9: state::reserve::ReserveConfig).22: [u8; 20])<br/>_116 = move _117 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = &amp;((*_113).1: u8)<br/>_120 = &amp;(*_121)<br/></td></tr><tr><td align="left">_115 = core::slice::&lt;impl [u8]&gt;::contains(move _116, move _120)</td></tr></table>>];
    bb49__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb50__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>_114 = const ()<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_60<br/>StorageLive(_140)<br/>_140 = &amp;((*_113).7: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_138 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _139, move _140)</td></tr></table>>];
    bb51__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_328 = const _<br/>_126 = &amp;(*_328)<br/></td></tr><tr><td align="left">_125 = LendingError::name(move _126)</td></tr></table>>];
    bb52__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = LendingError::InconsistentElevationGroup<br/></td></tr><tr><td align="left">_128 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _129)</td></tr></table>>];
    bb53__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_327 = const _<br/>_131 = &amp;(*_327)<br/></td></tr><tr><td align="left">_130 = &lt;LendingError as ToString&gt;::to_string(move _131)</td></tr></table>>];
    bb54__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1187_u32 }<br/>_134 = anchor_lang::error::ErrorOrigin::Source(move _135)<br/>StorageDead(_135)<br/>_133 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _134)<br/>StorageDead(_134)<br/>StorageLive(_136)<br/>_136 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_124 = anchor_lang::error::AnchorError { error_name: move _125, error_code_number: move _128, error_msg: move _130, error_origin: move _133, compared_values: move _136 }<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _124)</td></tr></table>>];
    bb55__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt;::Err(move _123)<br/>StorageDead(_123)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb57__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_326 = const _<br/>_146 = &amp;(*_326)<br/></td></tr><tr><td align="left">_145 = LendingError::name(move _146)</td></tr></table>>];
    bb58__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = LendingError::ElevationGroupHasAnotherDebtReserve<br/></td></tr><tr><td align="left">_148 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _149)</td></tr></table>>];
    bb59__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_325 = const _<br/>_151 = &amp;(*_325)<br/></td></tr><tr><td align="left">_150 = &lt;LendingError as ToString&gt;::to_string(move _151)</td></tr></table>>];
    bb60__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1194_u32 }<br/>_154 = anchor_lang::error::ErrorOrigin::Source(move _155)<br/>StorageDead(_155)<br/>_153 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _154)<br/>StorageDead(_154)<br/>StorageLive(_156)<br/>_156 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_144 = anchor_lang::error::AnchorError { error_name: move _145, error_code_number: move _148, error_msg: move _150, error_origin: move _153, compared_values: move _156 }<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _144)</td></tr></table>>];
    bb61__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = _60<br/>StorageLive(_159)<br/>_159 = ((*_113).7: anchor_lang::prelude::Pubkey)<br/>_157 = (move _158, move _159)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_142 = anchor_lang::error::Error::with_pubkeys(move _143, move _157)</td></tr></table>>];
    bb62__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_143)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt;::Err(move _142)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>_137 = const ()<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>_111 = const ()<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;(*_62)<br/></td></tr><tr><td align="left">_162 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _163)</td></tr></table>>];
    bb65__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_161 = ((*_162).11: u64)<br/>StorageLive(_164)<br/>_164 = ((*_34).6: u64)<br/></td></tr><tr><td align="left">_160 = core::num::&lt;impl u64&gt;::saturating_sub(move _161, move _164)</td></tr></table>>];
    bb66__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_161)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;mut (*_62)<br/></td></tr><tr><td align="left">_165 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _166)</td></tr></table>>];
    bb67__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>((*_165).11: u64) = move _160<br/>StorageDead(_160)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageLive(_167)<br/>_167 = _107<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut (*_62)<br/></td></tr><tr><td align="left">_168 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _169)</td></tr></table>>];
    bb68__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_170 = CheckedAdd(((*_168).11: u64), _167)<br/></td></tr><tr><td align="left">assert(!move (_170.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, ((*_168).11: u64), move _167)</td></tr></table>>];
    bb69__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">((*_168).11: u64) = move (_170.0: u64)<br/>StorageDead(_167)<br/>StorageDead(_168)<br/>StorageLive(_171)<br/>_171 = _107<br/>((*_34).6: u64) = move _171<br/>StorageDead(_171)<br/>_111 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;(*_62)<br/></td></tr><tr><td align="left">_177 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _178)</td></tr></table>>];
    bb71__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_176 = &amp;((*_177).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_175 = reserve::ReserveConfig::status(move _176)</td></tr></table>>];
    bb72__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_174 = &amp;_175<br/>StorageDead(_176)<br/>StorageLive(_179)<br/>_324 = const _<br/>_179 = &amp;(*_324)<br/></td></tr><tr><td align="left">_173 = &lt;reserve::ReserveStatus as PartialEq&gt;::eq(move _174, move _179)</td></tr></table>>];
    bb73__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb74__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>_181 = CheckedAdd(_12, const 1_u8)<br/></td></tr><tr><td align="left">assert(!move (_181.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _12, const 1_u8)</td></tr></table>>];
    bb75__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_12 = move (_181.0: u8)<br/>_172 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>_172 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;(*_1)<br/>StorageLive(_186)<br/>_186 = _60<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;mut (*_62)<br/></td></tr><tr><td align="left">_188 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _189)</td></tr></table>>];
    bb78__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_187 = &amp;mut (*_188)<br/>StorageDead(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;((*_2).17: anchor_lang::prelude::Pubkey)<br/>_190 = &amp;(*_191)<br/>StorageLive(_192)<br/>_192 = ((*_3).5: u16)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;((*_2).1: state::last_update::LastUpdate)<br/>StorageLive(_197)<br/>_197 = _4<br/></td></tr><tr><td align="left">_195 = last_update::LastUpdate::slots_elapsed(move _196, move _197)</td></tr></table>>];
    bb79__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">_194 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as Try&gt;::branch(move _195)</td></tr></table>>];
    bb80__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_333 = const true<br/>StorageDead(_195)<br/>_198 = discriminant(_194)<br/></td></tr><tr><td align="left">switchInt(move _198)</td></tr></table>>];
    bb81__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_194 as Continue).0: u64)<br/>_193 = _202<br/>StorageDead(_202)<br/>StorageLive(_203)<br/>_203 = _105<br/>StorageLive(_204)<br/>_204 = _93<br/>StorageLive(_205)<br/>_205 = _13<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;mut _7<br/>_206 = &amp;mut (*_207)<br/></td></tr><tr><td align="left">_184 = accumulate_referrer_fees::&lt;'_, U, impl Iterator&lt;Item = U&gt;&gt;(move _185, move _186, move _187, move _190, move _192, move _193, move _203, move _204, move _205, move _206)</td></tr></table>>];
    bb82__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>_199 = move ((_194 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_201)<br/>_201 = move _199<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _201)</td></tr></table>>];
    bb83__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _184)</td></tr></table>>];
    bb85__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>_208 = discriminant(_183)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb86__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_183 as Continue).0: ())<br/>_182 = _212<br/>StorageDead(_212)<br/>_343 = discriminant(_183)<br/>StorageDead(_207)<br/>_345 = discriminant(_194)<br/>_333 = const false<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;(*_62)<br/></td></tr><tr><td align="left">_215 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _216)</td></tr></table>>];
    bb87__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = move ((_183 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_211)<br/>_211 = move _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb88__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>_347 = discriminant(_183)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_214 = &amp;(*_215)<br/>StorageDead(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_34)<br/></td></tr><tr><td align="left">_213 = calculate_obligation_liquidity_market_value(move _214, move _217)</td></tr></table>>];
    bb90__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_214)<br/>StorageDead(_215)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = _213<br/></td></tr><tr><td align="left">_218 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _219)</td></tr></table>>];
    bb91__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>((*_34).4: u128) = move _218<br/>StorageDead(_218)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;mut _8<br/>StorageLive(_222)<br/>_222 = _213<br/></td></tr><tr><td align="left">_220 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _221, move _222)</td></tr></table>>];
    bb92__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;(*_62)<br/></td></tr><tr><td align="left">_225 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _226)</td></tr></table>>];
    bb93__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_224 = &amp;(*_225)<br/>StorageDead(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;_5<br/></td></tr><tr><td align="left">_227 = std::option::Option::&lt;&amp;state::lending_market::ElevationGroup&gt;::is_some(move _228)</td></tr></table>>];
    bb94__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/></td></tr><tr><td align="left">_223 = reserve::Reserve::borrow_factor_f(move _224, move _227)</td></tr></table>>];
    bb95__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_225)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = &amp;_213<br/>StorageLive(_232)<br/>_232 = &amp;((*_3).23: u64)<br/></td></tr><tr><td align="left">_230 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;u64&gt;&gt;::ge(move _231, move _232)</td></tr></table>>];
    bb96__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb97__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_234 = _11<br/>StorageLive(_235)<br/>_235 = _223<br/></td></tr><tr><td align="left">_233 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::max(move _234, move _235)</td></tr></table>>];
    bb98__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_234)<br/>_11 = move _233<br/>StorageDead(_233)<br/>_229 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>_229 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_229)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = _213<br/>StorageLive(_238)<br/>_238 = _223<br/></td></tr><tr><td align="left">_236 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _237, move _238)</td></tr></table>>];
    bb101__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = _236<br/></td></tr><tr><td align="left">_239 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _240)</td></tr></table>>];
    bb102__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>((*_34).5: u128) = move _239<br/>StorageDead(_239)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;mut _9<br/>StorageLive(_243)<br/>_243 = _236<br/></td></tr><tr><td align="left">_241 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _242, move _243)</td></tr></table>>];
    bb103__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_241)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = &amp;(*_62)<br/></td></tr><tr><td align="left">_245 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _246)</td></tr></table>>];
    bb104__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_244 = (((*_245).9: state::reserve::ReserveConfig).1: u8)<br/>StorageLive(_247)<br/>_247 = _33<br/>_248 = Len(((*_2).13: [u8; 5]))<br/>_249 = Lt(_247, _248)<br/></td></tr><tr><td align="left">assert(move _249, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _248, _247)</td></tr></table>>];
    bb105__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">((*_2).13: [u8; 5])[_247] = move _244<br/>StorageDead(_244)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>((*_2).16: u8) = const 1_u8<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;mut _10<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;(*_62)<br/></td></tr><tr><td align="left">_254 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _255)</td></tr></table>>];
    bb106__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_253 = &amp;((*_254).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_252 = last_update::LastUpdate::get_price_status(move _253)</td></tr></table>>];
    bb107__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/></td></tr><tr><td align="left">_250 = &lt;last_update::PriceStatusFlags as BitAndAssign&gt;::bitand_assign(move _251, move _252)</td></tr></table>>];
    bb108__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_254)<br/>StorageDead(_250)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_323 = const _<br/>_261 = &amp;(*_323)<br/>_260 = &amp;(*_261)<br/>_259 = move _260 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_260)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;(*_62)<br/></td></tr><tr><td align="left">_273 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb109__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = &amp;(((*_273).9: state::reserve::ReserveConfig).19: state::token_info::TokenInfo)<br/></td></tr><tr><td align="left">_271 = token_info::TokenInfo::symbol(move _272)</td></tr></table>>];
    bb110__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_270 = &amp;_271<br/>_269 = &amp;_270<br/>_268 = &amp;(*_269)<br/></td></tr><tr><td align="left">_267 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;&amp;str&gt;(move _268)</td></tr></table>>];
    bb111__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;(*_34)<br/></td></tr><tr><td align="left">_280 = obligation::ObligationLiquidity::borrowed_amount(move _281)</td></tr></table>>];
    bb112__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_279 = &amp;_280<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_278 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _279)</td></tr></table>>];
    bb113__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_277 = &amp;_278<br/>_276 = &amp;(*_277)<br/></td></tr><tr><td align="left">_275 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _276)</td></tr></table>>];
    bb114__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_213<br/></td></tr><tr><td align="left">_285 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _286)</td></tr></table>>];
    bb115__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>_284 = &amp;_285<br/>_283 = &amp;(*_284)<br/></td></tr><tr><td align="left">_282 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _283)</td></tr></table>>];
    bb116__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = &amp;_236<br/></td></tr><tr><td align="left">_290 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _291)</td></tr></table>>];
    bb117__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>_289 = &amp;_290<br/>_288 = &amp;(*_289)<br/></td></tr><tr><td align="left">_287 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _288)</td></tr></table>>];
    bb118__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>_266 = [move _267, move _275, move _282, move _287]<br/>StorageDead(_287)<br/>StorageDead(_282)<br/>StorageDead(_275)<br/>StorageDead(_267)<br/>_265 = &amp;_266<br/>_264 = &amp;(*_265)<br/>_263 = move _264 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_258 = Arguments::&lt;'_&gt;::new_v1(move _259, move _263)</td></tr></table>>];
    bb119__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = _print(move _258)</td></tr></table>>];
    bb120__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_290)<br/>StorageDead(_289)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/>StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_261)<br/>StorageDead(_257)<br/>_256 = const ()<br/>StorageDead(_256)<br/>_27 = const ()<br/>StorageDead(_236)<br/>StorageDead(_223)<br/>StorageDead(_213)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb121__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb122__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>_26 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left">switchInt(move _293)</td></tr></table>>];
    bb124__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = _16<br/>_296 = Le(move _297, const 1_i32)<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb125__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>_295 = const ()<br/>StorageDead(_296)<br/>StorageDead(_295)<br/>StorageLive(_313)<br/>_313 = _15<br/>_292 = std::option::Option::&lt;u64&gt;::Some(move _313)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_332 = const _<br/>_302 = &amp;(*_332)<br/></td></tr><tr><td align="left">_301 = LendingError::name(move _302)</td></tr></table>>];
    bb127__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = LendingError::InconsistentElevationGroup<br/></td></tr><tr><td align="left">_304 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _305)</td></tr></table>>];
    bb128__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_331 = const _<br/>_307 = &amp;(*_331)<br/></td></tr><tr><td align="left">_306 = &lt;LendingError as ToString&gt;::to_string(move _307)</td></tr></table>>];
    bb129__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1263_u32 }<br/>_310 = anchor_lang::error::ErrorOrigin::Source(move _311)<br/>StorageDead(_311)<br/>_309 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _310)<br/>StorageDead(_310)<br/>StorageLive(_312)<br/>_312 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_300 = anchor_lang::error::AnchorError { error_name: move _301, error_code_number: move _304, error_msg: move _306, error_origin: move _309, compared_values: move _312 }<br/>StorageDead(_312)<br/>StorageDead(_309)<br/>StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_299 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _300)</td></tr></table>>];
    bb130__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt;::Err(move _299)<br/>StorageDead(_299)<br/>StorageDead(_296)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>_292 = std::option::Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = _12<br/>StorageLive(_316)<br/>_316 = _8<br/>StorageLive(_317)<br/>_317 = _9<br/>StorageLive(_318)<br/>_318 = _292<br/>StorageLive(_319)<br/>_319 = _10<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_322 = &amp;_11<br/></td></tr><tr><td align="left">_321 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_percent::&lt;u64&gt;(move _322)</td></tr></table>>];
    bb133__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/></td></tr><tr><td align="left">_320 = std::option::Option::&lt;u64&gt;::unwrap(move _321)</td></tr></table>>];
    bb134__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>_314 = state::types::RefreshObligationBorrowsResult { borrow_factor_adjusted_debt_value_f: move _317, borrowed_assets_market_value_f: move _316, prices_state: move _319, highest_borrow_factor_pct: move _320, borrowed_amount_in_elevation_group: move _318, num_of_obsolete_reserves: move _315 }<br/>StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>_0 = std::result::Result::&lt;state::types::RefreshObligationBorrowsResult, anchor_lang::error::Error&gt;::Ok(move _314)<br/>StorageDead(_314)<br/>StorageDead(_292)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb135__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb136__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb140__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb141__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb143__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb144__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left">return</td></tr></table>>];
    bb145__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">145 (cleanup)</td></tr><tr><td align="left">drop(_301)</td></tr></table>>];
    bb146__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">146 (cleanup)</td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb147__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">147 (cleanup)</td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb148__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb149__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb150__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb151__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb152__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb153__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb154__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_349 = discriminant(_194)<br/>_333 = const false<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">155 (cleanup)</td></tr><tr><td align="left" balign="left">_359 = discriminant(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">156 (cleanup)</td></tr><tr><td align="left" balign="left">_360 = discriminant(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">157 (cleanup)</td></tr><tr><td align="left" balign="left">_361 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">158 (cleanup)</td></tr><tr><td align="left" balign="left">_362 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">159 (cleanup)</td></tr><tr><td align="left" balign="left">_363 = discriminant(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">160 (cleanup)</td></tr><tr><td align="left" balign="left">_364 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">161 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb162__0_1308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">162 (cleanup)</td></tr><tr><td align="left">switchInt(_334)</td></tr></table>>];
    bb0__0_1308 -> bb1__0_1308 [label="return"];
    bb0__0_1308 -> bb151__0_1308 [label="unwind"];
    bb1__0_1308 -> bb2__0_1308 [label="return"];
    bb1__0_1308 -> bb151__0_1308 [label="unwind"];
    bb2__0_1308 -> bb3__0_1308 [label="return"];
    bb2__0_1308 -> bb151__0_1308 [label="unwind"];
    bb3__0_1308 -> bb4__0_1308 [label="return"];
    bb3__0_1308 -> bb151__0_1308 [label="unwind"];
    bb4__0_1308 -> bb5__0_1308 [label="return"];
    bb4__0_1308 -> bb151__0_1308 [label="unwind"];
    bb5__0_1308 -> bb6__0_1308 [label="return"];
    bb5__0_1308 -> bb151__0_1308 [label="unwind"];
    bb6__0_1308 -> bb7__0_1308 [label=""];
    bb7__0_1308 -> bb8__0_1308 [label="return"];
    bb7__0_1308 -> bb151__0_1308 [label="unwind"];
    bb8__0_1308 -> bb11__0_1308 [label="0"];
    bb8__0_1308 -> bb9__0_1308 [label="1"];
    bb8__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb9__0_1308 -> bb12__0_1308 [label="success"];
    bb9__0_1308 -> bb151__0_1308 [label="unwind"];
    bb11__0_1308 -> bb123__0_1308 [label="return"];
    bb11__0_1308 -> bb151__0_1308 [label="unwind"];
    bb12__0_1308 -> bb13__0_1308 [label="return"];
    bb12__0_1308 -> bb151__0_1308 [label="unwind"];
    bb13__0_1308 -> bb14__0_1308 [label="return"];
    bb13__0_1308 -> bb162__0_1308 [label="unwind"];
    bb14__0_1308 -> bb15__0_1308 [label="return"];
    bb14__0_1308 -> bb150__0_1308 [label="unwind"];
    bb15__0_1308 -> bb16__0_1308 [label="return"];
    bb15__0_1308 -> bb150__0_1308 [label="unwind"];
    bb16__0_1308 -> bb17__0_1308 [label="return"];
    bb16__0_1308 -> bb162__0_1308 [label="unwind"];
    bb17__0_1308 -> bb18__0_1308 [label="return"];
    bb17__0_1308 -> bb162__0_1308 [label="unwind"];
    bb18__0_1308 -> bb19__0_1308 [label="return"];
    bb18__0_1308 -> bb151__0_1308 [label="unwind"];
    bb19__0_1308 -> bb20__0_1308 [label="0"];
    bb19__0_1308 -> bb21__0_1308 [label="1"];
    bb19__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb20__0_1308 -> bb23__0_1308 [label="return"];
    bb20__0_1308 -> bb149__0_1308 [label="unwind"];
    bb21__0_1308 -> bb22__0_1308 [label="return"];
    bb21__0_1308 -> bb160__0_1308 [label="unwind"];
    bb22__0_1308 -> bb141__0_1308 [label=""];
    bb23__0_1308 -> bb24__0_1308 [label="return"];
    bb23__0_1308 -> bb149__0_1308 [label="unwind"];
    bb24__0_1308 -> bb25__0_1308 [label="return"];
    bb24__0_1308 -> bb149__0_1308 [label="unwind"];
    bb25__0_1308 -> bb26__0_1308 [label="return"];
    bb25__0_1308 -> bb149__0_1308 [label="unwind"];
    bb26__0_1308 -> bb27__0_1308 [label="0"];
    bb26__0_1308 -> bb28__0_1308 [label="1"];
    bb26__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb27__0_1308 -> bb30__0_1308 [label="return"];
    bb27__0_1308 -> bb148__0_1308 [label="unwind"];
    bb28__0_1308 -> bb29__0_1308 [label="return"];
    bb28__0_1308 -> bb159__0_1308 [label="unwind"];
    bb29__0_1308 -> bb140__0_1308 [label=""];
    bb30__0_1308 -> bb31__0_1308 [label="return"];
    bb30__0_1308 -> bb148__0_1308 [label="unwind"];
    bb31__0_1308 -> bb32__0_1308 [label="return"];
    bb31__0_1308 -> bb148__0_1308 [label="unwind"];
    bb32__0_1308 -> bb33__0_1308 [label="0"];
    bb32__0_1308 -> bb34__0_1308 [label="1"];
    bb32__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb33__0_1308 -> bb36__0_1308 [label="return"];
    bb33__0_1308 -> bb148__0_1308 [label="unwind"];
    bb34__0_1308 -> bb35__0_1308 [label="return"];
    bb34__0_1308 -> bb158__0_1308 [label="unwind"];
    bb35__0_1308 -> bb139__0_1308 [label=""];
    bb36__0_1308 -> bb37__0_1308 [label="return"];
    bb36__0_1308 -> bb148__0_1308 [label="unwind"];
    bb37__0_1308 -> bb38__0_1308 [label="return"];
    bb37__0_1308 -> bb148__0_1308 [label="unwind"];
    bb38__0_1308 -> bb39__0_1308 [label="return"];
    bb38__0_1308 -> bb148__0_1308 [label="unwind"];
    bb39__0_1308 -> bb40__0_1308 [label="return"];
    bb39__0_1308 -> bb148__0_1308 [label="unwind"];
    bb40__0_1308 -> bb41__0_1308 [label="0"];
    bb40__0_1308 -> bb42__0_1308 [label="1"];
    bb40__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb41__0_1308 -> bb44__0_1308 [label="return"];
    bb41__0_1308 -> bb148__0_1308 [label="unwind"];
    bb42__0_1308 -> bb43__0_1308 [label="return"];
    bb42__0_1308 -> bb157__0_1308 [label="unwind"];
    bb43__0_1308 -> bb138__0_1308 [label=""];
    bb44__0_1308 -> bb45__0_1308 [label="return"];
    bb44__0_1308 -> bb148__0_1308 [label="unwind"];
    bb45__0_1308 -> bb46__0_1308 [label="success"];
    bb45__0_1308 -> bb148__0_1308 [label="unwind"];
    bb46__0_1308 -> bb47__0_1308 [label="1"];
    bb46__0_1308 -> bb64__0_1308 [label="otherwise"];
    bb47__0_1308 -> bb48__0_1308 [label="return"];
    bb47__0_1308 -> bb148__0_1308 [label="unwind"];
    bb48__0_1308 -> bb49__0_1308 [label="return"];
    bb48__0_1308 -> bb148__0_1308 [label="unwind"];
    bb49__0_1308 -> bb51__0_1308 [label="0"];
    bb49__0_1308 -> bb50__0_1308 [label="otherwise"];
    bb50__0_1308 -> bb56__0_1308 [label="return"];
    bb50__0_1308 -> bb148__0_1308 [label="unwind"];
    bb51__0_1308 -> bb52__0_1308 [label="return"];
    bb51__0_1308 -> bb148__0_1308 [label="unwind"];
    bb52__0_1308 -> bb53__0_1308 [label="return"];
    bb52__0_1308 -> bb147__0_1308 [label="unwind"];
    bb53__0_1308 -> bb54__0_1308 [label="return"];
    bb53__0_1308 -> bb147__0_1308 [label="unwind"];
    bb54__0_1308 -> bb55__0_1308 [label="return"];
    bb54__0_1308 -> bb148__0_1308 [label="unwind"];
    bb55__0_1308 -> bb136__0_1308 [label=""];
    bb56__0_1308 -> bb63__0_1308 [label="0"];
    bb56__0_1308 -> bb57__0_1308 [label="otherwise"];
    bb57__0_1308 -> bb58__0_1308 [label="return"];
    bb57__0_1308 -> bb148__0_1308 [label="unwind"];
    bb58__0_1308 -> bb59__0_1308 [label="return"];
    bb58__0_1308 -> bb146__0_1308 [label="unwind"];
    bb59__0_1308 -> bb60__0_1308 [label="return"];
    bb59__0_1308 -> bb146__0_1308 [label="unwind"];
    bb60__0_1308 -> bb61__0_1308 [label="return"];
    bb60__0_1308 -> bb148__0_1308 [label="unwind"];
    bb61__0_1308 -> bb62__0_1308 [label="return"];
    bb61__0_1308 -> bb148__0_1308 [label="unwind"];
    bb62__0_1308 -> bb136__0_1308 [label=""];
    bb63__0_1308 -> bb70__0_1308 [label=""];
    bb64__0_1308 -> bb65__0_1308 [label="return"];
    bb64__0_1308 -> bb148__0_1308 [label="unwind"];
    bb65__0_1308 -> bb66__0_1308 [label="return"];
    bb65__0_1308 -> bb148__0_1308 [label="unwind"];
    bb66__0_1308 -> bb67__0_1308 [label="return"];
    bb66__0_1308 -> bb148__0_1308 [label="unwind"];
    bb67__0_1308 -> bb68__0_1308 [label="return"];
    bb67__0_1308 -> bb148__0_1308 [label="unwind"];
    bb68__0_1308 -> bb69__0_1308 [label="success"];
    bb68__0_1308 -> bb148__0_1308 [label="unwind"];
    bb69__0_1308 -> bb70__0_1308 [label=""];
    bb70__0_1308 -> bb71__0_1308 [label="return"];
    bb70__0_1308 -> bb148__0_1308 [label="unwind"];
    bb71__0_1308 -> bb72__0_1308 [label="return"];
    bb71__0_1308 -> bb148__0_1308 [label="unwind"];
    bb72__0_1308 -> bb73__0_1308 [label="return"];
    bb72__0_1308 -> bb148__0_1308 [label="unwind"];
    bb73__0_1308 -> bb76__0_1308 [label="0"];
    bb73__0_1308 -> bb74__0_1308 [label="otherwise"];
    bb74__0_1308 -> bb75__0_1308 [label="success"];
    bb74__0_1308 -> bb148__0_1308 [label="unwind"];
    bb75__0_1308 -> bb77__0_1308 [label=""];
    bb76__0_1308 -> bb77__0_1308 [label=""];
    bb77__0_1308 -> bb78__0_1308 [label="return"];
    bb77__0_1308 -> bb148__0_1308 [label="unwind"];
    bb78__0_1308 -> bb79__0_1308 [label="return"];
    bb78__0_1308 -> bb148__0_1308 [label="unwind"];
    bb79__0_1308 -> bb80__0_1308 [label="return"];
    bb79__0_1308 -> bb148__0_1308 [label="unwind"];
    bb80__0_1308 -> bb81__0_1308 [label="0"];
    bb80__0_1308 -> bb82__0_1308 [label="1"];
    bb80__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb81__0_1308 -> bb84__0_1308 [label="return"];
    bb81__0_1308 -> bb156__0_1308 [label="unwind"];
    bb82__0_1308 -> bb83__0_1308 [label="return"];
    bb82__0_1308 -> bb156__0_1308 [label="unwind"];
    bb83__0_1308 -> bb154__0_1308 [label=""];
    bb84__0_1308 -> bb85__0_1308 [label="return"];
    bb84__0_1308 -> bb156__0_1308 [label="unwind"];
    bb85__0_1308 -> bb86__0_1308 [label="0"];
    bb85__0_1308 -> bb87__0_1308 [label="1"];
    bb85__0_1308 -> bb10__0_1308 [label="otherwise"];
    bb86__0_1308 -> bb89__0_1308 [label="return"];
    bb86__0_1308 -> bb148__0_1308 [label="unwind"];
    bb87__0_1308 -> bb88__0_1308 [label="return"];
    bb87__0_1308 -> bb155__0_1308 [label="unwind"];
    bb88__0_1308 -> bb154__0_1308 [label=""];
    bb89__0_1308 -> bb90__0_1308 [label="return"];
    bb89__0_1308 -> bb148__0_1308 [label="unwind"];
    bb90__0_1308 -> bb91__0_1308 [label="return"];
    bb90__0_1308 -> bb148__0_1308 [label="unwind"];
    bb91__0_1308 -> bb92__0_1308 [label="return"];
    bb91__0_1308 -> bb148__0_1308 [label="unwind"];
    bb92__0_1308 -> bb93__0_1308 [label="return"];
    bb92__0_1308 -> bb148__0_1308 [label="unwind"];
    bb93__0_1308 -> bb94__0_1308 [label="return"];
    bb93__0_1308 -> bb148__0_1308 [label="unwind"];
    bb94__0_1308 -> bb95__0_1308 [label="return"];
    bb94__0_1308 -> bb148__0_1308 [label="unwind"];
    bb95__0_1308 -> bb96__0_1308 [label="return"];
    bb95__0_1308 -> bb148__0_1308 [label="unwind"];
    bb96__0_1308 -> bb99__0_1308 [label="0"];
    bb96__0_1308 -> bb97__0_1308 [label="otherwise"];
    bb97__0_1308 -> bb98__0_1308 [label="return"];
    bb97__0_1308 -> bb148__0_1308 [label="unwind"];
    bb98__0_1308 -> bb100__0_1308 [label=""];
    bb99__0_1308 -> bb100__0_1308 [label=""];
    bb100__0_1308 -> bb101__0_1308 [label="return"];
    bb100__0_1308 -> bb148__0_1308 [label="unwind"];
    bb101__0_1308 -> bb102__0_1308 [label="return"];
    bb101__0_1308 -> bb148__0_1308 [label="unwind"];
    bb102__0_1308 -> bb103__0_1308 [label="return"];
    bb102__0_1308 -> bb148__0_1308 [label="unwind"];
    bb103__0_1308 -> bb104__0_1308 [label="return"];
    bb103__0_1308 -> bb148__0_1308 [label="unwind"];
    bb104__0_1308 -> bb105__0_1308 [label="success"];
    bb104__0_1308 -> bb148__0_1308 [label="unwind"];
    bb105__0_1308 -> bb106__0_1308 [label="return"];
    bb105__0_1308 -> bb148__0_1308 [label="unwind"];
    bb106__0_1308 -> bb107__0_1308 [label="return"];
    bb106__0_1308 -> bb148__0_1308 [label="unwind"];
    bb107__0_1308 -> bb108__0_1308 [label="return"];
    bb107__0_1308 -> bb148__0_1308 [label="unwind"];
    bb108__0_1308 -> bb109__0_1308 [label="return"];
    bb108__0_1308 -> bb148__0_1308 [label="unwind"];
    bb109__0_1308 -> bb110__0_1308 [label="return"];
    bb109__0_1308 -> bb148__0_1308 [label="unwind"];
    bb110__0_1308 -> bb111__0_1308 [label="return"];
    bb110__0_1308 -> bb148__0_1308 [label="unwind"];
    bb111__0_1308 -> bb112__0_1308 [label="return"];
    bb111__0_1308 -> bb148__0_1308 [label="unwind"];
    bb112__0_1308 -> bb113__0_1308 [label="return"];
    bb112__0_1308 -> bb148__0_1308 [label="unwind"];
    bb113__0_1308 -> bb114__0_1308 [label="return"];
    bb113__0_1308 -> bb148__0_1308 [label="unwind"];
    bb114__0_1308 -> bb115__0_1308 [label="return"];
    bb114__0_1308 -> bb148__0_1308 [label="unwind"];
    bb115__0_1308 -> bb116__0_1308 [label="return"];
    bb115__0_1308 -> bb148__0_1308 [label="unwind"];
    bb116__0_1308 -> bb117__0_1308 [label="return"];
    bb116__0_1308 -> bb148__0_1308 [label="unwind"];
    bb117__0_1308 -> bb118__0_1308 [label="return"];
    bb117__0_1308 -> bb148__0_1308 [label="unwind"];
    bb118__0_1308 -> bb119__0_1308 [label="return"];
    bb118__0_1308 -> bb148__0_1308 [label="unwind"];
    bb119__0_1308 -> bb120__0_1308 [label="return"];
    bb119__0_1308 -> bb148__0_1308 [label="unwind"];
    bb120__0_1308 -> bb121__0_1308 [label="return"];
    bb120__0_1308 -> bb149__0_1308 [label="unwind"];
    bb121__0_1308 -> bb122__0_1308 [label="return"];
    bb121__0_1308 -> bb151__0_1308 [label="unwind"];
    bb122__0_1308 -> bb7__0_1308 [label=""];
    bb123__0_1308 -> bb131__0_1308 [label="0"];
    bb123__0_1308 -> bb124__0_1308 [label="otherwise"];
    bb124__0_1308 -> bb126__0_1308 [label="0"];
    bb124__0_1308 -> bb125__0_1308 [label="otherwise"];
    bb125__0_1308 -> bb132__0_1308 [label=""];
    bb126__0_1308 -> bb127__0_1308 [label="return"];
    bb126__0_1308 -> bb151__0_1308 [label="unwind"];
    bb127__0_1308 -> bb128__0_1308 [label="return"];
    bb127__0_1308 -> bb145__0_1308 [label="unwind"];
    bb128__0_1308 -> bb129__0_1308 [label="return"];
    bb128__0_1308 -> bb145__0_1308 [label="unwind"];
    bb129__0_1308 -> bb130__0_1308 [label="return"];
    bb129__0_1308 -> bb151__0_1308 [label="unwind"];
    bb130__0_1308 -> bb142__0_1308 [label=""];
    bb131__0_1308 -> bb132__0_1308 [label=""];
    bb132__0_1308 -> bb133__0_1308 [label="return"];
    bb132__0_1308 -> bb151__0_1308 [label="unwind"];
    bb133__0_1308 -> bb134__0_1308 [label="return"];
    bb133__0_1308 -> bb151__0_1308 [label="unwind"];
    bb134__0_1308 -> bb135__0_1308 [label="return"];
    bb134__0_1308 -> bb152__0_1308 [label="unwind"];
    bb135__0_1308 -> bb144__0_1308 [label="return"];
    bb135__0_1308 -> bb153__0_1308 [label="unwind"];
    bb136__0_1308 -> bb137__0_1308 [label=""];
    bb137__0_1308 -> bb138__0_1308 [label=""];
    bb138__0_1308 -> bb139__0_1308 [label=""];
    bb139__0_1308 -> bb140__0_1308 [label="return"];
    bb139__0_1308 -> bb149__0_1308 [label="unwind"];
    bb140__0_1308 -> bb141__0_1308 [label="return"];
    bb140__0_1308 -> bb151__0_1308 [label="unwind"];
    bb141__0_1308 -> bb142__0_1308 [label=""];
    bb142__0_1308 -> bb143__0_1308 [label="return"];
    bb142__0_1308 -> bb152__0_1308 [label="unwind"];
    bb143__0_1308 -> bb144__0_1308 [label="return"];
    bb143__0_1308 -> bb153__0_1308 [label="unwind"];
    bb145__0_1308 -> bb151__0_1308 [label="return"];
    bb146__0_1308 -> bb148__0_1308 [label="return"];
    bb147__0_1308 -> bb148__0_1308 [label="return"];
    bb148__0_1308 -> bb149__0_1308 [label="return"];
    bb149__0_1308 -> bb151__0_1308 [label="return"];
    bb150__0_1308 -> bb162__0_1308 [label="return"];
    bb151__0_1308 -> bb152__0_1308 [label="return"];
    bb152__0_1308 -> bb153__0_1308 [label="return"];
    bb154__0_1308 -> bb137__0_1308 [label=""];
    bb155__0_1308 -> bb156__0_1308 [label=""];
    bb156__0_1308 -> bb148__0_1308 [label=""];
    bb157__0_1308 -> bb148__0_1308 [label=""];
    bb158__0_1308 -> bb148__0_1308 [label=""];
    bb159__0_1308 -> bb149__0_1308 [label=""];
    bb160__0_1308 -> bb151__0_1308 [label=""];
    bb161__0_1308 -> bb151__0_1308 [label="return"];
    bb162__0_1308 -> bb151__0_1308 [label="0"];
    bb162__0_1308 -> bb161__0_1308 [label="otherwise"];
}
