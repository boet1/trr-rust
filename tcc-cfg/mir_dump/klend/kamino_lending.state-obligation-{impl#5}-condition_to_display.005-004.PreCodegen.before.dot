digraph Mir_0_1749 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::ObligationOrder::condition_to_display(_1: &amp;ReErased state::obligation::ObligationOrder) -&gt; std::string::String<br align="left"/>let mut _2: state::order_operations::ConditionType;<br align="left"/>let mut _3: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _4: u8;<br align="left"/>let mut _5: &amp;ReErased str;<br align="left"/>let _6: &amp;ReErased str;<br align="left"/>let _7: std::string::String;<br align="left"/>let mut _8: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _10: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _11: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _12: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _13: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _14: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _15: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _16: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _17: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _19: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _20: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _21: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let _22: std::string::String;<br align="left"/>let mut _23: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _26: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _27: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _34: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _35: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _36: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let _37: std::string::String;<br align="left"/>let mut _38: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _41: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _42: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _46: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _47: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _49: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _50: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _51: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let _52: std::string::String;<br align="left"/>let mut _53: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _56: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _57: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _62: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _64: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _65: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _66: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug res =&gt; _7;<br align="left"/>debug res =&gt; _22;<br align="left"/>debug res =&gt; _37;<br align="left"/>debug res =&gt; _52;<br align="left"/>>;
    bb0__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;(*_1)<br/></td></tr><tr><td align="left">_2 = obligation::ObligationOrder::condition_type(move _3)</td></tr></table>>];
    bb1__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_4 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_67 = const _<br/>_56 = &amp;(*_67)<br/>_55 = &amp;(*_56)<br/>_54 = move _55 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_55)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(*_1)<br/></td></tr><tr><td align="left">_65 = obligation::ObligationOrder::condition_threshold(move _66)</td></tr></table>>];
    bb3__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const &quot;&lt;inactive&gt;&quot;<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_0 = &lt;str as ToString&gt;::to_string(move _5)</td></tr></table>>];
    bb5__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_70 = const _<br/>_11 = &amp;(*_70)<br/>_10 = &amp;(*_11)<br/>_9 = move _10 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_1)<br/></td></tr><tr><td align="left">_20 = obligation::ObligationOrder::condition_threshold(move _21)</td></tr></table>>];
    bb7__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_19 = &amp;_20<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_17 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _18)</td></tr></table>>];
    bb8__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = [move _17]<br/>StorageDead(_17)<br/>_15 = &amp;_16<br/>_14 = &amp;(*_15)<br/>_13 = move _14 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_8 = Arguments::&lt;'_&gt;::new_v1(move _9, move _13)</td></tr></table>>];
    bb9__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = format(move _8)</td></tr></table>>];
    bb10__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_11)<br/>_0 = move _7<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_69 = const _<br/>_26 = &amp;(*_69)<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;(*_1)<br/></td></tr><tr><td align="left">_35 = obligation::ObligationOrder::condition_threshold(move _36)</td></tr></table>>];
    bb12__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _33)</td></tr></table>>];
    bb13__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = [move _32]<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_23 = Arguments::&lt;'_&gt;::new_v1(move _24, move _28)</td></tr></table>>];
    bb14__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = format(move _23)</td></tr></table>>];
    bb15__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>_0 = move _22<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_68 = const _<br/>_41 = &amp;(*_68)<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/></td></tr><tr><td align="left">_50 = obligation::ObligationOrder::condition_threshold(move _51)</td></tr></table>>];
    bb17__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _48)</td></tr></table>>];
    bb18__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_46 = [move _47]<br/>StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_38 = Arguments::&lt;'_&gt;::new_v1(move _39, move _43)</td></tr></table>>];
    bb19__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = format(move _38)</td></tr></table>>];
    bb20__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>_0 = move _37<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _63)</td></tr></table>>];
    bb22__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = [move _62]<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/>_58 = move _59 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_53 = Arguments::&lt;'_&gt;::new_v1(move _54, move _58)</td></tr></table>>];
    bb23__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = format(move _53)</td></tr></table>>];
    bb24__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>_0 = move _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1749 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1749 -> bb1__0_1749 [label="return"];
    bb1__0_1749 -> bb4__0_1749 [label="0"];
    bb1__0_1749 -> bb6__0_1749 [label="1"];
    bb1__0_1749 -> bb11__0_1749 [label="2"];
    bb1__0_1749 -> bb16__0_1749 [label="3"];
    bb1__0_1749 -> bb2__0_1749 [label="4"];
    bb1__0_1749 -> bb3__0_1749 [label="otherwise"];
    bb2__0_1749 -> bb21__0_1749 [label="return"];
    bb4__0_1749 -> bb5__0_1749 [label="return"];
    bb5__0_1749 -> bb25__0_1749 [label=""];
    bb6__0_1749 -> bb7__0_1749 [label="return"];
    bb7__0_1749 -> bb8__0_1749 [label="return"];
    bb8__0_1749 -> bb9__0_1749 [label="return"];
    bb9__0_1749 -> bb10__0_1749 [label="return"];
    bb10__0_1749 -> bb25__0_1749 [label=""];
    bb11__0_1749 -> bb12__0_1749 [label="return"];
    bb12__0_1749 -> bb13__0_1749 [label="return"];
    bb13__0_1749 -> bb14__0_1749 [label="return"];
    bb14__0_1749 -> bb15__0_1749 [label="return"];
    bb15__0_1749 -> bb25__0_1749 [label=""];
    bb16__0_1749 -> bb17__0_1749 [label="return"];
    bb17__0_1749 -> bb18__0_1749 [label="return"];
    bb18__0_1749 -> bb19__0_1749 [label="return"];
    bb19__0_1749 -> bb20__0_1749 [label="return"];
    bb20__0_1749 -> bb25__0_1749 [label=""];
    bb21__0_1749 -> bb22__0_1749 [label="return"];
    bb22__0_1749 -> bb23__0_1749 [label="return"];
    bb23__0_1749 -> bb24__0_1749 [label="return"];
    bb24__0_1749 -> bb25__0_1749 [label=""];
}
