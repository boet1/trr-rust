digraph Mir_0_982 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_valid_u8_enum(_1: &amp;ReErased u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _2: std::result::Result&lt;E/#0, Alias(Projection, AliasTy { args: [E/#0, u8], def_id: DefId(2:2592 ~ core[c321]::convert::TryFrom::Error) })&gt;;<br align="left"/>let mut _3: u8;<br align="left"/>let mut _4: isize;<br align="left"/>let mut _5: ();<br align="left"/>let _6: ();<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let _8: &amp;ReErased str;<br align="left"/>let mut _9: &amp;ReErased std::string::String;<br align="left"/>let _10: &amp;ReErased std::string::String;<br align="left"/>let _11: std::string::String;<br align="left"/>let _12: std::string::String;<br align="left"/>let mut _13: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _15: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _16: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _17: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _18: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _19: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _20: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _21: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _22: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _23: &amp;ReErased &amp;ReErased str;<br align="left"/>let _24: &amp;ReErased &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased &amp;ReErased u8;<br align="left"/>let _28: &amp;ReErased &amp;ReErased u8;<br align="left"/>let mut _29: anchor_lang::error::Error;<br align="left"/>let mut _30: anchor_lang::error::AnchorError;<br align="left"/>let mut _31: std::string::String;<br align="left"/>let mut _32: &amp;ReErased LendingError;<br align="left"/>let _33: LendingError;<br align="left"/>let mut _34: u32;<br align="left"/>let mut _35: LendingError;<br align="left"/>let mut _36: std::string::String;<br align="left"/>let mut _37: &amp;ReErased LendingError;<br align="left"/>let _38: LendingError;<br align="left"/>let mut _39: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _40: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _41: anchor_lang::error::Source;<br align="left"/>let mut _42: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _43: &amp;ReErased LendingError;<br align="left"/>let mut _44: &amp;ReErased LendingError;<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug repr =&gt; _1;<br align="left"/>debug res =&gt; _12;<br align="left"/>>;
    bb0__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = (*_1)<br/></td></tr><tr><td align="left">_2 = &lt;E as TryFrom&lt;u8&gt;&gt;::try_from(move _3)</td></tr></table>>];
    bb1__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_4 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_45 = const _<br/>_16 = &amp;(*_45)<br/>_15 = &amp;(*_16)<br/>_14 = move _15 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = std::any::type_name::&lt;E&gt;()</td></tr></table>>];
    bb3__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _23)</td></tr></table>>];
    bb6__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_1<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;u8&gt;(move _27)</td></tr></table>>];
    bb7__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_21 = [move _22, move _26]<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_13 = Arguments::&lt;'_&gt;::new_v1(move _14, move _18)</td></tr></table>>];
    bb8__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = format(move _13)</td></tr></table>>];
    bb9__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>_11 = move _12<br/>StorageDead(_12)<br/>_10 = &amp;_11<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::string::String as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb10__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_7 = &amp;(*_8)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_6 = solana_program::log::sol_log(move _7)</td></tr></table>>];
    bb11__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb12__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_44 = const _<br/>_32 = &amp;(*_44)<br/></td></tr><tr><td align="left">_31 = LendingError::name(move _32)</td></tr></table>>];
    bb13__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = LendingError::InvalidConfig<br/></td></tr><tr><td align="left">_34 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _35)</td></tr></table>>];
    bb14__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_43 = const _<br/>_37 = &amp;(*_43)<br/></td></tr><tr><td align="left">_36 = &lt;LendingError as ToString&gt;::to_string(move _37)</td></tr></table>>];
    bb15__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\config_items.rs&quot;, line: const 296_u32 }<br/>_40 = anchor_lang::error::ErrorOrigin::Source(move _41)<br/>StorageDead(_41)<br/>_39 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _40)<br/>StorageDead(_40)<br/>StorageLive(_42)<br/>_42 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_30 = anchor_lang::error::AnchorError { error_name: move _31, error_code_number: move _34, error_msg: move _36, error_origin: move _39, compared_values: move _42 }<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _30)</td></tr></table>>];
    bb16__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb18__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb20__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb21__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb22__0_982 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_982 -> bb1__0_982 [label="return"];
    bb1__0_982 -> bb4__0_982 [label="0"];
    bb1__0_982 -> bb2__0_982 [label="1"];
    bb1__0_982 -> bb3__0_982 [label="otherwise"];
    bb2__0_982 -> bb5__0_982 [label="return"];
    bb2__0_982 -> bb21__0_982 [label="unwind"];
    bb4__0_982 -> bb17__0_982 [label=""];
    bb5__0_982 -> bb6__0_982 [label="return"];
    bb5__0_982 -> bb21__0_982 [label="unwind"];
    bb6__0_982 -> bb7__0_982 [label="return"];
    bb6__0_982 -> bb21__0_982 [label="unwind"];
    bb7__0_982 -> bb8__0_982 [label="return"];
    bb7__0_982 -> bb21__0_982 [label="unwind"];
    bb8__0_982 -> bb9__0_982 [label="return"];
    bb8__0_982 -> bb21__0_982 [label="unwind"];
    bb9__0_982 -> bb10__0_982 [label="return"];
    bb9__0_982 -> bb20__0_982 [label="unwind"];
    bb10__0_982 -> bb11__0_982 [label="return"];
    bb10__0_982 -> bb20__0_982 [label="unwind"];
    bb11__0_982 -> bb12__0_982 [label="return"];
    bb11__0_982 -> bb21__0_982 [label="unwind"];
    bb12__0_982 -> bb13__0_982 [label="return"];
    bb12__0_982 -> bb21__0_982 [label="unwind"];
    bb13__0_982 -> bb14__0_982 [label="return"];
    bb13__0_982 -> bb19__0_982 [label="unwind"];
    bb14__0_982 -> bb15__0_982 [label="return"];
    bb14__0_982 -> bb19__0_982 [label="unwind"];
    bb15__0_982 -> bb16__0_982 [label="return"];
    bb15__0_982 -> bb21__0_982 [label="unwind"];
    bb16__0_982 -> bb17__0_982 [label=""];
    bb17__0_982 -> bb18__0_982 [label="return"];
    bb17__0_982 -> bb22__0_982 [label="unwind"];
    bb19__0_982 -> bb21__0_982 [label="return"];
    bb20__0_982 -> bb21__0_982 [label="return"];
    bb21__0_982 -> bb22__0_982 [label="return"];
}
