digraph Mir_0_1937 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveCollateral::burn(_1: &amp;ReErased mut state::reserve::ReserveCollateral, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, LendingError&gt;;<br align="left"/>let mut _6: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: Closure(DefId(0:1938 ~ kamino_lending[6389]::state::reserve::{impl#6}::burn::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), (&amp;ReErased u64, &amp;ReErased u64)]);<br align="left"/>let mut _10: &amp;ReErased u64;<br align="left"/>let mut _11: &amp;ReErased u64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _16: u64;<br align="left"/>let mut _17: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>>;
    bb0__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).1: u64)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl u64&gt;::checked_sub(move _7, move _8)</td></tr></table>>];
    bb1__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).1: u64)<br/>StorageLive(_11)<br/>_11 = &amp;_2<br/>_9 = {closure@programs\klend\src\state\reserve.rs:837:25: 837:27} { self: move _10, collateral_amount: move _11 }<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_5 = std::option::Option::&lt;u64&gt;::ok_or_else::&lt;LendingError, {closure@programs\klend\src\state\reserve.rs:837:25: 837:27}&gt;(move _6, move _9)</td></tr></table>>];
    bb2__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_12 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_4 as Continue).0: u64)<br/>_3 = _16<br/>StorageDead(_16)<br/>((*_1).1: u64) = move _3<br/>StorageDead(_3)<br/>StorageDead(_4)<br/>StorageLive(_17)<br/>_17 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_3)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1937 -> bb1__0_1937 [label="return"];
    bb1__0_1937 -> bb2__0_1937 [label="return"];
    bb2__0_1937 -> bb3__0_1937 [label="return"];
    bb3__0_1937 -> bb4__0_1937 [label="0"];
    bb3__0_1937 -> bb6__0_1937 [label="1"];
    bb3__0_1937 -> bb5__0_1937 [label="otherwise"];
    bb4__0_1937 -> bb8__0_1937 [label=""];
    bb6__0_1937 -> bb7__0_1937 [label="return"];
    bb7__0_1937 -> bb8__0_1937 [label=""];
}
