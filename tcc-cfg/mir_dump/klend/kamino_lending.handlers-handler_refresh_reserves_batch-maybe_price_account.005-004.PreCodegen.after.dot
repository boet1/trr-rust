digraph Mir_0_547 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn maybe_price_account(_1: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _2: isize;<br align="left"/>let _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _10: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: anchor_lang::error::Error;<br align="left"/>let mut _16: anchor_lang::error::AnchorError;<br align="left"/>let mut _17: std::string::String;<br align="left"/>let mut _18: &amp;ReErased LendingError;<br align="left"/>let _19: LendingError;<br align="left"/>let mut _20: u32;<br align="left"/>let mut _21: LendingError;<br align="left"/>let mut _22: std::string::String;<br align="left"/>let mut _23: &amp;ReErased LendingError;<br align="left"/>let _24: LendingError;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _26: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _27: anchor_lang::error::Source;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _29: &amp;ReErased LendingError;<br align="left"/>let mut _30: &amp;ReErased LendingError;<br align="left"/>debug price_account =&gt; _1;<br align="left"/>debug price_account =&gt; _3;<br align="left"/>>;
    bb0__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_2 = discriminant(_1)<br/></td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb1__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = ((_1 as Some).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_3).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const {alloc279: &amp;anchor_lang::prelude::Pubkey}<br/>_7 = &amp;(*_8)<br/>_6 = &amp;_7<br/></td></tr><tr><td align="left">_4 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _5, move _6)</td></tr></table>>];
    bb2__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb3__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>_9 = std::option::Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::None<br/>_0 = std::result::Result::&lt;std::option::Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;, anchor_lang::error::Error&gt;::Ok(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_3)<br/>_10 = std::option::Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::Some(move _11)<br/>StorageDead(_11)<br/>_0 = std::result::Result::&lt;std::option::Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;, anchor_lang::error::Error&gt;::Ok(move _10)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = const &quot;Missing price account&quot;<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb7__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_30 = const _<br/>_18 = &amp;(*_30)<br/></td></tr><tr><td align="left">_17 = LendingError::name(move _18)</td></tr></table>>];
    bb8__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_20 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _21)</td></tr></table>>];
    bb9__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_29 = const _<br/>_23 = &amp;(*_29)<br/></td></tr><tr><td align="left">_22 = &lt;LendingError as ToString&gt;::to_string(move _23)</td></tr></table>>];
    bb10__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_refresh_reserves_batch.rs&quot;, line: const 22_u32 }<br/>_26 = anchor_lang::error::ErrorOrigin::Source(move _27)<br/>StorageDead(_27)<br/>_25 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _26)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_16 = anchor_lang::error::AnchorError { error_name: move _17, error_code_number: move _20, error_msg: move _22, error_origin: move _25, compared_values: move _28 }<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _16)</td></tr></table>>];
    bb11__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_0 = std::result::Result::&lt;std::option::Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;, anchor_lang::error::Error&gt;::Err(move _15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb13__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb14__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_547 -> bb1__0_547 [label="1"];
    bb0__0_547 -> bb6__0_547 [label="otherwise"];
    bb1__0_547 -> bb2__0_547 [label="return"];
    bb2__0_547 -> bb4__0_547 [label="0"];
    bb2__0_547 -> bb3__0_547 [label="otherwise"];
    bb3__0_547 -> bb5__0_547 [label=""];
    bb4__0_547 -> bb5__0_547 [label=""];
    bb5__0_547 -> bb12__0_547 [label=""];
    bb6__0_547 -> bb7__0_547 [label="return"];
    bb7__0_547 -> bb8__0_547 [label="return"];
    bb8__0_547 -> bb9__0_547 [label="return"];
    bb8__0_547 -> bb13__0_547 [label="unwind"];
    bb9__0_547 -> bb10__0_547 [label="return"];
    bb9__0_547 -> bb13__0_547 [label="unwind"];
    bb10__0_547 -> bb11__0_547 [label="return"];
    bb10__0_547 -> bb14__0_547 [label="unwind"];
    bb11__0_547 -> bb12__0_547 [label=""];
    bb13__0_547 -> bb14__0_547 [label="return"];
}
