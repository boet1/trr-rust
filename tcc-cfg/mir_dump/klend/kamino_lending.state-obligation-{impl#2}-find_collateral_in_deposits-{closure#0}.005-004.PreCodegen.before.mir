// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::find_collateral_in_deposits::{closure#0}` before PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::find_collateral_in_deposits::{closure#0}(_1: &mut {closure@programs\klend\src\state\obligation.rs:302:19: 302:31}, _2: &&obligation::ObligationCollateral) -> bool {
    debug collateral => _2;
    debug deposit_reserve => (*((*_1).0: &anchor_lang::prelude::Pubkey));
    let mut _0: bool;
    let mut _3: &anchor_lang::prelude::Pubkey;
    let mut _4: &anchor_lang::prelude::Pubkey;
    let mut _5: &state::obligation::ObligationCollateral;
    let mut _6: &anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_3);
        _5 = deref_copy (*_2);
        _3 = &((*_5).0: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        _6 = deref_copy ((*_1).0: &anchor_lang::prelude::Pubkey);
        _4 = &(*_6);
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
