digraph Mir_0_2828 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn only_element(_1: impl IntoIterator&lt;Item = T&gt;/#1) -&gt; std::option::Option&lt;T/#0&gt;<br align="left"/>let mut _2: std::option::Option&lt;T/#0&gt;;<br align="left"/>let _3: ();<br align="left"/>let mut _4: Alias(Projection, AliasTy { args: [impl IntoIterator&lt;Item = T&gt;/#1], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _5: Alias(Projection, AliasTy { args: [impl IntoIterator&lt;Item = T&gt;/#1], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _6: impl IntoIterator&lt;Item = T&gt;/#1;<br align="left"/>let mut _7: Alias(Projection, AliasTy { args: [impl IntoIterator&lt;Item = T&gt;/#1], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: std::option::Option&lt;T/#0&gt;;<br align="left"/>let mut _11: &amp;ReErased mut Alias(Projection, AliasTy { args: [impl IntoIterator&lt;Item = T&gt;/#1], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _12: &amp;ReErased mut Alias(Projection, AliasTy { args: [impl IntoIterator&lt;Item = T&gt;/#1], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _13: isize;<br align="left"/>let mut _14: !;<br align="left"/>let _15: T/#0;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased std::option::Option&lt;T/#0&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::option::Option&lt;T/#0&gt;;<br align="left"/>let mut _21: T/#0;<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: isize;<br align="left"/>let mut _24: isize;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: isize;<br align="left"/>let mut _29: isize;<br align="left"/>debug iter =&gt; _1;<br align="left"/>debug the_only =&gt; _2;<br align="left"/>debug iter =&gt; _7;<br align="left"/>debug element =&gt; _15;<br align="left"/>>;
    bb0__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_22 = const false<br/>StorageLive(_2)<br/>_2 = std::option::Option::&lt;T&gt;::None<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = move _1<br/></td></tr><tr><td align="left">_5 = &lt;impl IntoIterator&lt;Item = T&gt; as IntoIterator&gt;::into_iter(move _6)</td></tr></table>>];
    bb1__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;&lt;impl IntoIterator&lt;Item = T&gt; as IntoIterator&gt;::IntoIter as IntoIterator&gt;::into_iter(move _5)</td></tr></table>>];
    bb2__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>_7 = move _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut _7<br/>_11 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_10 = &lt;&lt;impl IntoIterator&lt;Item = T&gt; as IntoIterator&gt;::IntoIter as Iterator&gt;::next(move _11)</td></tr></table>>];
    bb4__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_22 = const true<br/>_15 = move ((_10 as Some).0: T)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_2<br/></td></tr><tr><td align="left">_17 = std::option::Option::&lt;T&gt;::is_some(move _18)</td></tr></table>>];
    bb6__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_3 = const ()<br/>_23 = discriminant(_10)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb8__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_0 = std::option::Option::&lt;T&gt;::None<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb10__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_22 = const false<br/>_21 = move _15<br/>_20 = std::option::Option::&lt;T&gt;::Some(move _21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb11__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_2 = move _20<br/>StorageDead(_20)<br/>_9 = const ()<br/>_22 = const false<br/>StorageDead(_15)<br/>_25 = discriminant(_10)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left" balign="left">_2 = move _20<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = move _2<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_22 = const false<br/>StorageDead(_15)<br/>_27 = discriminant(_10)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb15__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb16__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb18__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb19__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb20__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb21__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb22__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">switchInt(_22)</td></tr></table>>];
    bb23__0_2828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_29 = discriminant(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2828 -> bb1__0_2828 [label="return"];
    bb0__0_2828 -> bb19__0_2828 [label="unwind"];
    bb1__0_2828 -> bb2__0_2828 [label="return"];
    bb1__0_2828 -> bb19__0_2828 [label="unwind"];
    bb2__0_2828 -> bb3__0_2828 [label=""];
    bb3__0_2828 -> bb4__0_2828 [label="return"];
    bb3__0_2828 -> bb18__0_2828 [label="unwind"];
    bb4__0_2828 -> bb7__0_2828 [label="0"];
    bb4__0_2828 -> bb5__0_2828 [label="1"];
    bb4__0_2828 -> bb6__0_2828 [label="otherwise"];
    bb5__0_2828 -> bb8__0_2828 [label="return"];
    bb5__0_2828 -> bb22__0_2828 [label="unwind"];
    bb7__0_2828 -> bb13__0_2828 [label="return"];
    bb7__0_2828 -> bb19__0_2828 [label="unwind"];
    bb8__0_2828 -> bb10__0_2828 [label="0"];
    bb8__0_2828 -> bb9__0_2828 [label="otherwise"];
    bb9__0_2828 -> bb14__0_2828 [label="return"];
    bb9__0_2828 -> bb23__0_2828 [label="unwind"];
    bb10__0_2828 -> bb11__0_2828 [label="return"];
    bb10__0_2828 -> bb12__0_2828 [label="unwind"];
    bb11__0_2828 -> bb3__0_2828 [label=""];
    bb12__0_2828 -> bb22__0_2828 [label=""];
    bb13__0_2828 -> bb17__0_2828 [label=""];
    bb14__0_2828 -> bb15__0_2828 [label="return"];
    bb14__0_2828 -> bb19__0_2828 [label="unwind"];
    bb15__0_2828 -> bb16__0_2828 [label="return"];
    bb15__0_2828 -> bb20__0_2828 [label="unwind"];
    bb16__0_2828 -> bb17__0_2828 [label=""];
    bb18__0_2828 -> bb19__0_2828 [label="return"];
    bb19__0_2828 -> bb20__0_2828 [label="return"];
    bb21__0_2828 -> bb23__0_2828 [label="return"];
    bb22__0_2828 -> bb23__0_2828 [label="0"];
    bb22__0_2828 -> bb21__0_2828 [label="otherwise"];
    bb23__0_2828 -> bb18__0_2828 [label=""];
}
