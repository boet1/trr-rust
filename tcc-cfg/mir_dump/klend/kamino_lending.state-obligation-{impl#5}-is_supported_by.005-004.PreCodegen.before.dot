digraph Mir_0_1747 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::ObligationOrder::is_supported_by(_1: &amp;ReErased state::obligation::ObligationOrder, _2: &amp;ReErased state::obligation::Obligation) -&gt; bool<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _6: &amp;ReErased &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let _7: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let _8: state::obligation::ObligationOrder;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: &amp;ReErased state::order_operations::ConditionType;<br align="left"/>let _12: state::order_operations::ConditionType;<br align="left"/>let mut _13: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _14: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _15: &amp;ReErased state::order_operations::OpportunityType;<br align="left"/>let _16: state::order_operations::OpportunityType;<br align="left"/>let mut _17: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _18: &amp;ReErased state::obligation::Obligation;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>>;
    bb0__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_1<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/></td></tr><tr><td align="left">_8 = &lt;obligation::ObligationOrder as Default&gt;::default()</td></tr></table>>];
    bb1__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_7 = &amp;_8<br/>_6 = &amp;_7<br/></td></tr><tr><td align="left">_4 = &lt;&amp;obligation::ObligationOrder as PartialEq&gt;::eq(move _5, move _6)</td></tr></table>>];
    bb2__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb3__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_0 = const true<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_1)<br/></td></tr><tr><td align="left">_12 = obligation::ObligationOrder::condition_type(move _13)</td></tr></table>>];
    bb5__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_11 = &amp;_12<br/>StorageDead(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/></td></tr><tr><td align="left">_10 = ConditionType::is_supported_by(move _11, move _14)</td></tr></table>>];
    bb6__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb7__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_1)<br/></td></tr><tr><td align="left">_16 = obligation::ObligationOrder::opportunity_type(move _17)</td></tr></table>>];
    bb8__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_15 = &amp;_16<br/>StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_2)<br/></td></tr><tr><td align="left">_0 = OpportunityType::is_supported_by(move _15, move _18)</td></tr></table>>];
    bb10__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1747 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1747 -> bb1__0_1747 [label="return"];
    bb1__0_1747 -> bb2__0_1747 [label="return"];
    bb2__0_1747 -> bb4__0_1747 [label="0"];
    bb2__0_1747 -> bb3__0_1747 [label="otherwise"];
    bb3__0_1747 -> bb12__0_1747 [label=""];
    bb4__0_1747 -> bb5__0_1747 [label="return"];
    bb5__0_1747 -> bb6__0_1747 [label="return"];
    bb6__0_1747 -> bb8__0_1747 [label="0"];
    bb6__0_1747 -> bb7__0_1747 [label="otherwise"];
    bb7__0_1747 -> bb9__0_1747 [label="return"];
    bb8__0_1747 -> bb11__0_1747 [label=""];
    bb9__0_1747 -> bb10__0_1747 [label="return"];
    bb10__0_1747 -> bb11__0_1747 [label=""];
    bb11__0_1747 -> bb12__0_1747 [label=""];
}
