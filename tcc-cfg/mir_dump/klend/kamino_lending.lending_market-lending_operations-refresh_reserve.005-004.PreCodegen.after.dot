digraph Mir_0_1278 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::refresh_reserve(_1: &amp;ReErased mut state::reserve::Reserve, _2: &amp;ReErased anchor_lang::prelude::Clock, _3: std::option::Option&lt;utils::prices::GetPriceResult&gt;, _4: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: u64;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u16;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _16: ();<br align="left"/>let _17: std::option::Option&lt;state::last_update::PriceStatusFlags&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _20: state::last_update::PriceStatusFlags;<br align="left"/>let _21: u64;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: state::last_update::PriceStatusFlags;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: state::last_update::PriceStatusFlags;<br align="left"/>let _30: ();<br align="left"/>let mut _31: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: std::option::Option&lt;state::last_update::PriceStatusFlags&gt;;<br align="left"/>let mut _34: [u8; 9_usize];<br align="left"/>let mut _35: ();<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug price =&gt; _3;<br align="left"/>debug referral_fee_bps =&gt; _4;<br align="left"/>debug slot =&gt; _5;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug price_status =&gt; _17;<br align="left"/>debug price =&gt; _19;<br align="left"/>debug status =&gt; _20;<br align="left"/>debug timestamp =&gt; _21;<br align="left"/>>;
    bb0__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = ((*_2).0: u64)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_1)<br/>StorageLive(_10)<br/>_10 = _5<br/>StorageLive(_11)<br/>_11 = _4<br/></td></tr><tr><td align="left">_8 = reserve::Reserve::accrue_interest(move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Continue).0: ())<br/>_6 = _16<br/>StorageDead(_16)<br/>_36 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_17)<br/>_18 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb4__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_15)<br/>_15 = move _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_38 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = (((_3 as Some).0: utils::prices::GetPriceResult).0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_20)<br/>_20 = (((_3 as Some).0: utils::prices::GetPriceResult).2: state::last_update::PriceStatusFlags)<br/>StorageLive(_21)<br/>_21 = (((_3 as Some).0: utils::prices::GetPriceResult).1: u64)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _19<br/></td></tr><tr><td align="left">_22 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _23)</td></tr></table>>];
    bb8__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>(((*_1).5: state::reserve::ReserveLiquidity).5: u128) = move _22<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = _21<br/>(((*_1).5: state::reserve::ReserveLiquidity).6: u64) = move _24<br/>StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = _20<br/>_17 = std::option::Option::&lt;last_update::PriceStatusFlags&gt;::Some(move _25)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_1)<br/>StorageLive(_28)<br/>_28 = ((*_2).4: i64)<br/></td></tr><tr><td align="left">_26 = is_saved_price_age_valid(move _27, move _28)</td></tr></table>>];
    bb10__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>_17 = std::option::Option::&lt;last_update::PriceStatusFlags&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_29)<br/></td></tr><tr><td align="left">_29 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::empty()</td></tr></table>>];
    bb13__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_17 = std::option::Option::&lt;last_update::PriceStatusFlags&gt;::Some(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_32)<br/>_32 = _5<br/>StorageLive(_33)<br/>_33 = _17<br/></td></tr><tr><td align="left">_30 = last_update::LastUpdate::update_slot::&lt;std::option::Option&lt;last_update::PriceStatusFlags&gt;&gt;(move _31, move _32, move _33)</td></tr></table>>];
    bb16__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_34)<br/></td></tr><tr><td align="left">_34 = &lt;[u8; 9] as Default&gt;::default()</td></tr></table>>];
    bb17__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">(((*_1).9: state::reserve::ReserveConfig).3: [u8; 9]) = move _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>_35 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _35)<br/>StorageDead(_35)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb20__0_1278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left" balign="left">_40 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1278 -> bb1__0_1278 [label="return"];
    bb1__0_1278 -> bb2__0_1278 [label="return"];
    bb1__0_1278 -> bb19__0_1278 [label="unwind"];
    bb2__0_1278 -> bb3__0_1278 [label="0"];
    bb2__0_1278 -> bb5__0_1278 [label="1"];
    bb2__0_1278 -> bb4__0_1278 [label="otherwise"];
    bb3__0_1278 -> bb7__0_1278 [label="1"];
    bb3__0_1278 -> bb9__0_1278 [label="otherwise"];
    bb5__0_1278 -> bb6__0_1278 [label="return"];
    bb5__0_1278 -> bb20__0_1278 [label="unwind"];
    bb6__0_1278 -> bb18__0_1278 [label=""];
    bb7__0_1278 -> bb8__0_1278 [label="return"];
    bb8__0_1278 -> bb15__0_1278 [label=""];
    bb9__0_1278 -> bb10__0_1278 [label="return"];
    bb10__0_1278 -> bb12__0_1278 [label="0"];
    bb10__0_1278 -> bb11__0_1278 [label="otherwise"];
    bb11__0_1278 -> bb14__0_1278 [label=""];
    bb12__0_1278 -> bb13__0_1278 [label="return"];
    bb13__0_1278 -> bb14__0_1278 [label=""];
    bb14__0_1278 -> bb15__0_1278 [label=""];
    bb15__0_1278 -> bb16__0_1278 [label="return"];
    bb16__0_1278 -> bb17__0_1278 [label="return"];
    bb17__0_1278 -> bb18__0_1278 [label=""];
    bb20__0_1278 -> bb19__0_1278 [label=""];
}
