// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:1317:1: 1317:17>::calculate_borrow_fees` after PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:1317:1: 1317:17>::calculate_borrow_fees(_1: &ReserveFees, _2: FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, _3: reserve::FeeCalculation, _4: u16, _5: bool) -> std::result::Result<(u64, u64), anchor_lang::error::Error> {
    debug self => _1;
    debug borrow_amount => _2;
    debug fee_calculation => _3;
    debug referral_fee_bps => _4;
    debug has_referrer => _5;
    let mut _0: std::result::Result<(u64, u64), anchor_lang::error::Error>;
    let mut _6: &state::reserve::ReserveFees;
    let mut _7: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _8: u64;
    let mut _9: state::reserve::FeeCalculation;
    let mut _10: u16;
    let mut _11: bool;

    bb0: {
        StorageLive(_6);
        _6 = &(*_1);
        StorageLive(_7);
        _7 = _2;
        StorageLive(_8);
        _8 = ((*_1).0: u64);
        StorageLive(_9);
        _9 = move _3;
        StorageLive(_10);
        _10 = _4;
        StorageLive(_11);
        _11 = _5;
        _0 = ReserveFees::calculate_fees(move _6, move _7, move _8, move _9, move _10, move _11) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        return;
    }
}
