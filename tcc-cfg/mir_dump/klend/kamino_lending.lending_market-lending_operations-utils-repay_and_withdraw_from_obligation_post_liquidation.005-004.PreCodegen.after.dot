digraph Mir_0_1354 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn repay_and_withdraw_from_obligation_post_liquidation(_1: &amp;ReErased mut state::obligation::Obligation, _2: &amp;ReErased mut state::reserve::Reserve, _3: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _4: u64, _5: u64, _6: usize, _7: usize) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: !;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: anchor_lang::error::Error;<br align="left"/>let mut _16: anchor_lang::error::AnchorError;<br align="left"/>let mut _17: std::string::String;<br align="left"/>let mut _18: &amp;ReErased LendingError;<br align="left"/>let _19: LendingError;<br align="left"/>let mut _20: u32;<br align="left"/>let mut _21: LendingError;<br align="left"/>let mut _22: std::string::String;<br align="left"/>let mut _23: &amp;ReErased LendingError;<br align="left"/>let _24: LendingError;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _26: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _27: anchor_lang::error::Source;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _29: ();<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: !;<br align="left"/>let _33: ();<br align="left"/>let mut _34: &amp;ReErased str;<br align="left"/>let _35: &amp;ReErased str;<br align="left"/>let mut _36: anchor_lang::error::Error;<br align="left"/>let mut _37: anchor_lang::error::AnchorError;<br align="left"/>let mut _38: std::string::String;<br align="left"/>let mut _39: &amp;ReErased LendingError;<br align="left"/>let _40: LendingError;<br align="left"/>let mut _41: u32;<br align="left"/>let mut _42: LendingError;<br align="left"/>let mut _43: std::string::String;<br align="left"/>let mut _44: &amp;ReErased LendingError;<br align="left"/>let _45: LendingError;<br align="left"/>let mut _46: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _47: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _48: anchor_lang::error::Source;<br align="left"/>let mut _49: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), LendingError&gt;;<br align="left"/>let mut _53: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _60: ();<br align="left"/>let _61: ();<br align="left"/>let mut _62: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _65: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _66: usize;<br align="left"/>let _67: state::obligation::WithdrawResult;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, state::obligation::WithdrawResult&gt;;<br align="left"/>let mut _69: std::result::Result&lt;state::obligation::WithdrawResult, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: usize;<br align="left"/>let mut _73: isize;<br align="left"/>let _74: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _75: !;<br align="left"/>let mut _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _77: state::obligation::WithdrawResult;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let _80: ();<br align="left"/>let mut _81: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _82: ();<br align="left"/>let mut _83: &amp;ReErased LendingError;<br align="left"/>let mut _84: &amp;ReErased LendingError;<br align="left"/>let mut _85: &amp;ReErased LendingError;<br align="left"/>let mut _86: &amp;ReErased LendingError;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>debug obligation =&gt; _1;<br align="left"/>debug repay_reserve =&gt; _2;<br align="left"/>debug settle_amount =&gt; _3;<br align="left"/>debug withdraw_amount =&gt; _4;<br align="left"/>debug repay_amount =&gt; _5;<br align="left"/>debug liquidity_index =&gt; _6;<br align="left"/>debug collateral_index =&gt; _7;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _74;<br align="left"/>debug val =&gt; _77;<br align="left"/>>;
    bb0__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _5<br/>_9 = Eq(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = const &quot;Liquidation is too small to transfer liquidity&quot;<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb2__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_84 = const _<br/>_18 = &amp;(*_84)<br/></td></tr><tr><td align="left">_17 = LendingError::name(move _18)</td></tr></table>>];
    bb3__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = LendingError::LiquidationTooSmall<br/></td></tr><tr><td align="left">_20 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _21)</td></tr></table>>];
    bb4__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_83 = const _<br/>_23 = &amp;(*_83)<br/></td></tr><tr><td align="left">_22 = &lt;LendingError as ToString&gt;::to_string(move _23)</td></tr></table>>];
    bb5__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2293_u32 }<br/>_26 = anchor_lang::error::ErrorOrigin::Source(move _27)<br/>StorageDead(_27)<br/>_25 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _26)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_16 = anchor_lang::error::AnchorError { error_name: move _17, error_code_number: move _20, error_msg: move _22, error_origin: move _25, compared_values: move _28 }<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _16)</td></tr></table>>];
    bb6__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _15)<br/>StorageDead(_15)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _4<br/>_30 = Eq(move _31, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb8__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = const &quot;Liquidation is too small to receive collateral&quot;<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = solana_program::log::sol_log(move _34)</td></tr></table>>];
    bb9__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_29 = const ()<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;mut ((*_2).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_54)<br/>_54 = _5<br/>StorageLive(_55)<br/>_55 = _3<br/></td></tr><tr><td align="left">_52 = ReserveLiquidity::repay(move _53, move _54, move _55)</td></tr></table>>];
    bb10__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_86 = const _<br/>_39 = &amp;(*_86)<br/></td></tr><tr><td align="left">_38 = LendingError::name(move _39)</td></tr></table>>];
    bb11__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = LendingError::LiquidationTooSmall<br/></td></tr><tr><td align="left">_41 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _42)</td></tr></table>>];
    bb12__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_85 = const _<br/>_44 = &amp;(*_85)<br/></td></tr><tr><td align="left">_43 = &lt;LendingError as ToString&gt;::to_string(move _44)</td></tr></table>>];
    bb13__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2297_u32 }<br/>_47 = anchor_lang::error::ErrorOrigin::Source(move _48)<br/>StorageDead(_48)<br/>_46 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _47)<br/>StorageDead(_47)<br/>StorageLive(_49)<br/>_49 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_37 = anchor_lang::error::AnchorError { error_name: move _38, error_code_number: move _41, error_msg: move _43, error_origin: move _46, compared_values: move _49 }<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _37)</td></tr></table>>];
    bb14__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _36)<br/>StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), LendingError&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb16__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_56 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb17__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_51 as Continue).0: ())<br/>_50 = _60<br/>StorageDead(_60)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut ((*_2).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_61 = last_update::LastUpdate::mark_stale(move _62)</td></tr></table>>];
    bb18__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb20__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;mut (*_1)<br/>StorageLive(_65)<br/>_65 = _3<br/>StorageLive(_66)<br/>_66 = _6<br/></td></tr><tr><td align="left">_63 = obligation::Obligation::repay(move _64, move _65, move _66)</td></tr></table>>];
    bb22__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_1)<br/>StorageLive(_71)<br/>_71 = _4<br/>StorageLive(_72)<br/>_72 = _7<br/></td></tr><tr><td align="left">_69 = obligation::Obligation::withdraw(move _70, move _71, move _72)</td></tr></table>>];
    bb23__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;obligation::WithdrawResult, anchor_lang::error::Error&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb24__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_73 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb25__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_68 as Continue).0: state::obligation::WithdrawResult)<br/>_67 = _77<br/>StorageDead(_77)<br/>_87 = discriminant(_68)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_78 = obligation::Obligation::update_has_debt(move _79)</td></tr></table>>];
    bb26__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = move ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_76)<br/>_76 = move _74<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _76)</td></tr></table>>];
    bb27__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_74)<br/>_89 = discriminant(_68)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_80 = last_update::LastUpdate::mark_stale(move _81)</td></tr></table>>];
    bb29__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_82)<br/>_82 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb31__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb32__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb33__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb34__0_1354 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1354 -> bb7__0_1354 [label="0"];
    bb0__0_1354 -> bb1__0_1354 [label="otherwise"];
    bb1__0_1354 -> bb2__0_1354 [label="return"];
    bb2__0_1354 -> bb3__0_1354 [label="return"];
    bb3__0_1354 -> bb4__0_1354 [label="return"];
    bb3__0_1354 -> bb32__0_1354 [label="unwind"];
    bb4__0_1354 -> bb5__0_1354 [label="return"];
    bb4__0_1354 -> bb32__0_1354 [label="unwind"];
    bb5__0_1354 -> bb6__0_1354 [label="return"];
    bb5__0_1354 -> bb33__0_1354 [label="unwind"];
    bb6__0_1354 -> bb30__0_1354 [label=""];
    bb7__0_1354 -> bb9__0_1354 [label="0"];
    bb7__0_1354 -> bb8__0_1354 [label="otherwise"];
    bb8__0_1354 -> bb10__0_1354 [label="return"];
    bb9__0_1354 -> bb15__0_1354 [label="return"];
    bb10__0_1354 -> bb11__0_1354 [label="return"];
    bb11__0_1354 -> bb12__0_1354 [label="return"];
    bb11__0_1354 -> bb31__0_1354 [label="unwind"];
    bb12__0_1354 -> bb13__0_1354 [label="return"];
    bb12__0_1354 -> bb31__0_1354 [label="unwind"];
    bb13__0_1354 -> bb14__0_1354 [label="return"];
    bb13__0_1354 -> bb33__0_1354 [label="unwind"];
    bb14__0_1354 -> bb30__0_1354 [label=""];
    bb15__0_1354 -> bb16__0_1354 [label="return"];
    bb16__0_1354 -> bb17__0_1354 [label="0"];
    bb16__0_1354 -> bb19__0_1354 [label="1"];
    bb16__0_1354 -> bb18__0_1354 [label="otherwise"];
    bb17__0_1354 -> bb21__0_1354 [label="return"];
    bb19__0_1354 -> bb20__0_1354 [label="return"];
    bb20__0_1354 -> bb30__0_1354 [label=""];
    bb21__0_1354 -> bb22__0_1354 [label="return"];
    bb22__0_1354 -> bb23__0_1354 [label="return"];
    bb23__0_1354 -> bb24__0_1354 [label="return"];
    bb23__0_1354 -> bb33__0_1354 [label="unwind"];
    bb24__0_1354 -> bb25__0_1354 [label="0"];
    bb24__0_1354 -> bb26__0_1354 [label="1"];
    bb24__0_1354 -> bb18__0_1354 [label="otherwise"];
    bb25__0_1354 -> bb28__0_1354 [label="return"];
    bb26__0_1354 -> bb27__0_1354 [label="return"];
    bb26__0_1354 -> bb34__0_1354 [label="unwind"];
    bb27__0_1354 -> bb30__0_1354 [label=""];
    bb28__0_1354 -> bb29__0_1354 [label="return"];
    bb29__0_1354 -> bb30__0_1354 [label=""];
    bb31__0_1354 -> bb33__0_1354 [label="return"];
    bb32__0_1354 -> bb33__0_1354 [label="return"];
    bb34__0_1354 -> bb33__0_1354 [label=""];
}
