digraph Mir_0_5506 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RequestElevationGroupBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut handlers::handler_request_elevation_group::RequestElevationGroupBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_request_elevation_group::RequestElevationGroupBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:5507 ~ kamino_lending[6389]::handlers::handler_request_elevation_group::{impl#0}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _21: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut handlers::handler_request_elevation_group::RequestElevationGroupBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:5508 ~ kamino_lending[6389]::handlers::handler_request_elevation_group::{impl#0}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _36: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased mut handlers::handler_request_elevation_group::RequestElevationGroupBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: Closure(DefId(0:5509 ~ kamino_lending[6389]::handlers::handler_request_elevation_group::{impl#0}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _51: ();<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: anchor_lang::error::Error;<br align="left"/>let mut _58: anchor_lang::error::Error;<br align="left"/>let mut _59: anchor_lang::error::ErrorCode;<br align="left"/>let _60: ();<br align="left"/>let _61: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _63: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _64: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _66: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _72: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _73: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _74: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _77: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: anchor_lang::error::Error;<br align="left"/>let mut _80: anchor_lang::error::Error;<br align="left"/>let mut _81: anchor_lang::error::Error;<br align="left"/>let mut _82: anchor_lang::error::ErrorCode;<br align="left"/>let mut _83: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _84: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: anchor_lang::prelude::Pubkey;<br align="left"/>let _86: ();<br align="left"/>let _87: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _88: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _89: &amp;ReErased std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _90: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _92: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _98: std::cell::Ref&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _99: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _101: bool;<br align="left"/>let mut _102: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: anchor_lang::error::Error;<br align="left"/>let mut _106: anchor_lang::error::Error;<br align="left"/>let mut _107: anchor_lang::error::Error;<br align="left"/>let mut _108: anchor_lang::error::ErrorCode;<br align="left"/>let mut _109: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _110: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _111: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _112: handlers::handler_request_elevation_group::RequestElevationGroup&lt;ReErased&gt;;<br align="left"/>let mut _113: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _114: anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _115: anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _116: bool;<br align="left"/>let mut _117: bool;<br align="left"/>let mut _118: bool;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug owner =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug obligation =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug lending_market =&gt; _36;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug my_key =&gt; _61;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug target_key =&gt; _73;<br align="left"/>debug my_key =&gt; _87;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug target_key =&gt; _99;<br align="left"/>>;
    bb0__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_119 = const false<br/>_118 = const false<br/>_117 = const false<br/>_116 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, RequestElevationGroupBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_120 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as anchor_lang::Accounts&lt;'_, RequestElevationGroupBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_138 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_122 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_3)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_4)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Accounts&lt;'_, RequestElevationGroupBumps&gt;&gt;::try_accounts(move _40, move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb12__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_136 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_45)<br/>_45 = {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_request_elevation_group.rs:61:10: 61:18}&gt;(move _39, move _45)</td></tr></table>>];
    bb15__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb16__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_46 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_37 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_36 = move _50<br/>StorageDead(_50)<br/>_124 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_21<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _54)</td></tr></table>>];
    bb18__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_134 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb21__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = ConstraintMut<br/></td></tr><tr><td align="left">_58 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _59)</td></tr></table>>];
    bb22__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _58, const &quot;obligation&quot;)</td></tr></table>>];
    bb23__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_0 = std::result::Result::&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _57)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_51 = const ()<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_21<br/></td></tr><tr><td align="left">_66 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _67)</td></tr></table>>];
    bb25__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb26__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_118 = const true<br/>_119 = const true<br/>StorageDead(_66)<br/>_68 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb27__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = move ((_65 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_64 = move _72<br/>StorageDead(_72)<br/>_63 = &amp;_64<br/></td></tr><tr><td align="left">_62 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb28__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = move ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_71)<br/>_71 = move _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb29__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_63)<br/>_132 = discriminant(_65)<br/>_118 = const false<br/>_119 = const false<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = ((*_62).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb31__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_61<br/>StorageLive(_77)<br/>_77 = &amp;_73<br/></td></tr><tr><td align="left">_75 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _76, move _77)</td></tr></table>>];
    bb32__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb33__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = ConstraintHasOne<br/></td></tr><tr><td align="left">_81 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _82)</td></tr></table>>];
    bb34__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _81, const &quot;obligation&quot;)</td></tr></table>>];
    bb35__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = _61<br/>StorageLive(_85)<br/>_85 = _73<br/>_83 = (move _84, move _85)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_79 = anchor_lang::error::Error::with_pubkeys(move _80, move _83)</td></tr></table>>];
    bb36__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_80)<br/>_0 = std::result::Result::&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _79)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>_60 = const ()<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_21<br/></td></tr><tr><td align="left">_92 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load(move _93)</td></tr></table>>];
    bb38__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;Ref&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb39__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_116 = const true<br/>_117 = const true<br/>StorageDead(_92)<br/>_94 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb40__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_91 as Continue).0: std::cell::Ref&lt;'_, state::obligation::Obligation&gt;)<br/>_90 = move _98<br/>StorageDead(_98)<br/>_89 = &amp;_90<br/></td></tr><tr><td align="left">_88 = &lt;Ref&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb41__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_97)<br/>_97 = move _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb42__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_89)<br/>_130 = discriminant(_91)<br/>_116 = const false<br/>_117 = const false<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = ((*_88).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb44__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_87<br/>StorageLive(_103)<br/>_103 = &amp;_99<br/></td></tr><tr><td align="left">_101 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _102, move _103)</td></tr></table>>];
    bb45__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb46__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = ConstraintHasOne<br/></td></tr><tr><td align="left">_107 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _108)</td></tr></table>>];
    bb47__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _107, const &quot;obligation&quot;)</td></tr></table>>];
    bb48__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _87<br/>StorageLive(_111)<br/>_111 = _99<br/>_109 = (move _110, move _111)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_105 = anchor_lang::error::Error::with_pubkeys(move _106, move _109)</td></tr></table>>];
    bb49__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_106)<br/>_0 = std::result::Result::&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _105)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>_86 = const ()<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = move _6<br/>StorageLive(_114)<br/>_114 = move _21<br/>StorageLive(_115)<br/>_115 = move _36<br/>_112 = handlers::handler_request_elevation_group::RequestElevationGroup::&lt;'_&gt; { owner: move _113, obligation: move _114, lending_market: move _115 }<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>_0 = std::result::Result::&lt;handlers::handler_request_elevation_group::RequestElevationGroup&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _112)<br/>StorageDead(_112)<br/>StorageDead(_36)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">return</td></tr></table>>];
    bb57__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb58__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb59__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb60__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_126 = discriminant(_65)<br/>_118 = const false<br/>_119 = const false<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_36<br/></td></tr><tr><td align="left">_73 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _74)</td></tr></table>>];
    bb61__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_128 = discriminant(_91)<br/>_116 = const false<br/>_117 = const false<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;_6<br/></td></tr><tr><td align="left">_99 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _100)</td></tr></table>>];
    bb62__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left" balign="left">_141 = discriminant(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_5506 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5506 -> bb1__0_5506 [label="return"];
    bb1__0_5506 -> bb2__0_5506 [label="return"];
    bb1__0_5506 -> bb59__0_5506 [label="unwind"];
    bb2__0_5506 -> bb3__0_5506 [label="return"];
    bb2__0_5506 -> bb59__0_5506 [label="unwind"];
    bb3__0_5506 -> bb4__0_5506 [label="0"];
    bb3__0_5506 -> bb6__0_5506 [label="1"];
    bb3__0_5506 -> bb5__0_5506 [label="otherwise"];
    bb4__0_5506 -> bb8__0_5506 [label="return"];
    bb6__0_5506 -> bb7__0_5506 [label="return"];
    bb6__0_5506 -> bb66__0_5506 [label="unwind"];
    bb7__0_5506 -> bb55__0_5506 [label=""];
    bb8__0_5506 -> bb9__0_5506 [label="return"];
    bb8__0_5506 -> bb59__0_5506 [label="unwind"];
    bb9__0_5506 -> bb10__0_5506 [label="return"];
    bb9__0_5506 -> bb59__0_5506 [label="unwind"];
    bb10__0_5506 -> bb11__0_5506 [label="0"];
    bb10__0_5506 -> bb12__0_5506 [label="1"];
    bb10__0_5506 -> bb5__0_5506 [label="otherwise"];
    bb11__0_5506 -> bb14__0_5506 [label="return"];
    bb12__0_5506 -> bb13__0_5506 [label="return"];
    bb12__0_5506 -> bb65__0_5506 [label="unwind"];
    bb13__0_5506 -> bb54__0_5506 [label=""];
    bb14__0_5506 -> bb15__0_5506 [label="return"];
    bb14__0_5506 -> bb59__0_5506 [label="unwind"];
    bb15__0_5506 -> bb16__0_5506 [label="return"];
    bb15__0_5506 -> bb59__0_5506 [label="unwind"];
    bb16__0_5506 -> bb17__0_5506 [label="0"];
    bb16__0_5506 -> bb18__0_5506 [label="1"];
    bb16__0_5506 -> bb5__0_5506 [label="otherwise"];
    bb17__0_5506 -> bb20__0_5506 [label="return"];
    bb18__0_5506 -> bb19__0_5506 [label="return"];
    bb18__0_5506 -> bb64__0_5506 [label="unwind"];
    bb19__0_5506 -> bb53__0_5506 [label=""];
    bb20__0_5506 -> bb21__0_5506 [label="0"];
    bb20__0_5506 -> bb24__0_5506 [label="otherwise"];
    bb21__0_5506 -> bb22__0_5506 [label="return"];
    bb22__0_5506 -> bb23__0_5506 [label="return"];
    bb22__0_5506 -> bb59__0_5506 [label="unwind"];
    bb23__0_5506 -> bb53__0_5506 [label=""];
    bb24__0_5506 -> bb25__0_5506 [label="return"];
    bb25__0_5506 -> bb26__0_5506 [label="return"];
    bb25__0_5506 -> bb59__0_5506 [label="unwind"];
    bb26__0_5506 -> bb27__0_5506 [label="0"];
    bb26__0_5506 -> bb28__0_5506 [label="1"];
    bb26__0_5506 -> bb5__0_5506 [label="otherwise"];
    bb27__0_5506 -> bb30__0_5506 [label="return"];
    bb27__0_5506 -> bb58__0_5506 [label="unwind"];
    bb28__0_5506 -> bb29__0_5506 [label="return"];
    bb28__0_5506 -> bb63__0_5506 [label="unwind"];
    bb29__0_5506 -> bb52__0_5506 [label=""];
    bb30__0_5506 -> bb60__0_5506 [label="return"];
    bb30__0_5506 -> bb63__0_5506 [label="unwind"];
    bb31__0_5506 -> bb32__0_5506 [label="return"];
    bb32__0_5506 -> bb37__0_5506 [label="0"];
    bb32__0_5506 -> bb33__0_5506 [label="otherwise"];
    bb33__0_5506 -> bb34__0_5506 [label="return"];
    bb34__0_5506 -> bb35__0_5506 [label="return"];
    bb34__0_5506 -> bb59__0_5506 [label="unwind"];
    bb35__0_5506 -> bb36__0_5506 [label="return"];
    bb35__0_5506 -> bb59__0_5506 [label="unwind"];
    bb36__0_5506 -> bb52__0_5506 [label=""];
    bb37__0_5506 -> bb38__0_5506 [label="return"];
    bb38__0_5506 -> bb39__0_5506 [label="return"];
    bb38__0_5506 -> bb59__0_5506 [label="unwind"];
    bb39__0_5506 -> bb40__0_5506 [label="0"];
    bb39__0_5506 -> bb41__0_5506 [label="1"];
    bb39__0_5506 -> bb5__0_5506 [label="otherwise"];
    bb40__0_5506 -> bb43__0_5506 [label="return"];
    bb40__0_5506 -> bb57__0_5506 [label="unwind"];
    bb41__0_5506 -> bb42__0_5506 [label="return"];
    bb41__0_5506 -> bb62__0_5506 [label="unwind"];
    bb42__0_5506 -> bb51__0_5506 [label=""];
    bb43__0_5506 -> bb61__0_5506 [label="return"];
    bb43__0_5506 -> bb62__0_5506 [label="unwind"];
    bb44__0_5506 -> bb45__0_5506 [label="return"];
    bb45__0_5506 -> bb50__0_5506 [label="0"];
    bb45__0_5506 -> bb46__0_5506 [label="otherwise"];
    bb46__0_5506 -> bb47__0_5506 [label="return"];
    bb47__0_5506 -> bb48__0_5506 [label="return"];
    bb47__0_5506 -> bb59__0_5506 [label="unwind"];
    bb48__0_5506 -> bb49__0_5506 [label="return"];
    bb48__0_5506 -> bb59__0_5506 [label="unwind"];
    bb49__0_5506 -> bb51__0_5506 [label=""];
    bb50__0_5506 -> bb56__0_5506 [label=""];
    bb51__0_5506 -> bb53__0_5506 [label=""];
    bb52__0_5506 -> bb53__0_5506 [label=""];
    bb53__0_5506 -> bb54__0_5506 [label=""];
    bb54__0_5506 -> bb55__0_5506 [label=""];
    bb55__0_5506 -> bb56__0_5506 [label=""];
    bb57__0_5506 -> bb62__0_5506 [label="return"];
    bb58__0_5506 -> bb63__0_5506 [label="return"];
    bb60__0_5506 -> bb31__0_5506 [label="return"];
    bb61__0_5506 -> bb44__0_5506 [label="return"];
    bb62__0_5506 -> bb59__0_5506 [label=""];
    bb63__0_5506 -> bb59__0_5506 [label=""];
    bb64__0_5506 -> bb59__0_5506 [label=""];
    bb65__0_5506 -> bb59__0_5506 [label=""];
    bb66__0_5506 -> bb59__0_5506 [label=""];
}
