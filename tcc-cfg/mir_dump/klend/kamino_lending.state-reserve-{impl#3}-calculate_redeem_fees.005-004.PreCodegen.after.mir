// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:140:1: 140:13>::calculate_redeem_fees` after PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:140:1: 140:13>::calculate_redeem_fees(_1: &reserve::Reserve) -> u64 {
    debug self => _1;
    let mut _0: u64;
    let mut _2: u64;
    let mut _3: u64;
    let mut _4: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _5: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _6: u128;

    bb0: {
        StorageLive(_2);
        _2 = (((*_1).5: state::reserve::ReserveLiquidity).3: u64);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (((*_1).5: state::reserve::ReserveLiquidity).11: u128);
        _5 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_bits(move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        _4 = &_5;
        StorageDead(_6);
        _3 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_floor::<u64>(move _4) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_4);
        _0 = std::cmp::min::<u64>(move _2, move _3) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_5);
        return;
    }
}
