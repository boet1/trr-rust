digraph Mir_0_11466 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;uint_types::U256 as Sub&lt;T&gt;&gt;::sub(_1: utils::fraction::uint_types::U256, _2: T/#0) -&gt; utils::fraction::uint_types::U256<br align="left"/>let _3: utils::fraction::uint_types::U256;<br align="left"/>let _4: bool;<br align="left"/>let mut _5: (utils::fraction::uint_types::U256, bool);<br align="left"/>let mut _6: utils::fraction::uint_types::U256;<br align="left"/>let mut _7: utils::fraction::uint_types::U256;<br align="left"/>let mut _8: T/#0;<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: !;<br align="left"/>let _12: !;<br align="left"/>let mut _13: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _15: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _16: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _17: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug result =&gt; _3;<br align="left"/>debug overflow =&gt; _4;<br align="left"/>>;
    bb0__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = move _2<br/></td></tr><tr><td align="left">_7 = &lt;T as Into&lt;uint_types::U256&gt;&gt;::into(move _8)</td></tr></table>>];
    bb1__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = uint_types::U256::overflowing_sub(move _6, move _7)</td></tr></table>>];
    bb2__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_3)<br/>_3 = (_5.0: utils::fraction::uint_types::U256)<br/>StorageLive(_4)<br/>_4 = (_5.1: bool)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_18 = const _<br/>_16 = &amp;(*_18)<br/>_15 = &amp;(*_16)<br/>_14 = move _15 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = Arguments::&lt;'_&gt;::new_const(move _14)</td></tr></table>>];
    bb4__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = panic_fmt(move _13)</td></tr></table>>];
    bb5__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_9 = const ()<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_0 = _3<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb6__0_11466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_11466 -> bb1__0_11466 [label="return"];
    bb0__0_11466 -> bb6__0_11466 [label="unwind"];
    bb1__0_11466 -> bb2__0_11466 [label="return"];
    bb1__0_11466 -> bb6__0_11466 [label="unwind"];
    bb2__0_11466 -> bb5__0_11466 [label="0"];
    bb2__0_11466 -> bb3__0_11466 [label="otherwise"];
    bb3__0_11466 -> bb4__0_11466 [label="return"];
    bb3__0_11466 -> bb6__0_11466 [label="unwind"];
    bb4__0_11466 -> bb6__0_11466 [label="unwind"];
}
