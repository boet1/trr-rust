// MIR for `handlers::handler_flash_repay_reserve_liquidity::<impl at programs\klend\src\handlers\handler_flash_repay_reserve_liquidity.rs:104:10: 104:18>::to_account_metas` before PreCodegen

fn handlers::handler_flash_repay_reserve_liquidity::<impl at programs\klend\src\handlers\handler_flash_repay_reserve_liquidity.rs:104:10: 104:18>::to_account_metas(_1: &handlers::handler_flash_repay_reserve_liquidity::FlashRepayReserveLiquidity<'_>, _2: std::option::Option<bool>) -> Vec<anchor_lang::prelude::AccountMeta> {
    debug self => _1;
    debug is_signer => _2;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _3: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let _4: ();
    let mut _5: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _6: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _7: &anchor_lang::prelude::Signer<'_>;
    let mut _8: std::option::Option<bool>;
    let _9: ();
    let mut _10: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _11: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _12: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _13: std::option::Option<bool>;
    let _14: ();
    let mut _15: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _16: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _17: &anchor_lang::prelude::AccountLoader<'_, state::lending_market::LendingMarket>;
    let mut _18: std::option::Option<bool>;
    let _19: ();
    let mut _20: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _21: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _22: &anchor_lang::prelude::AccountLoader<'_, state::reserve::Reserve>;
    let mut _23: std::option::Option<bool>;
    let _24: ();
    let mut _25: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _26: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _27: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _28: std::option::Option<bool>;
    let _29: ();
    let mut _30: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _31: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _32: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _33: std::option::Option<bool>;
    let _34: ();
    let mut _35: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _36: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _37: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _38: std::option::Option<bool>;
    let _39: ();
    let mut _40: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _41: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _42: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _43: std::option::Option<bool>;
    let _44: ();
    let mut _45: &std::option::Option<anchor_lang::prelude::AccountLoader<'_, state::referral::ReferrerTokenState>>;
    let mut _46: isize;
    let _48: ();
    let mut _49: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _50: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _51: &anchor_lang::prelude::AccountLoader<'_, state::referral::ReferrerTokenState>;
    let mut _52: std::option::Option<bool>;
    let _53: ();
    let mut _54: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _55: anchor_lang::prelude::AccountMeta;
    let mut _56: anchor_lang::prelude::Pubkey;
    let mut _57: &anchor_lang::prelude::Pubkey;
    let _58: ();
    let mut _59: &std::option::Option<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _60: isize;
    let _62: ();
    let mut _63: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _64: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _65: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _66: std::option::Option<bool>;
    let _67: ();
    let mut _68: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _69: anchor_lang::prelude::AccountMeta;
    let mut _70: anchor_lang::prelude::Pubkey;
    let mut _71: &anchor_lang::prelude::Pubkey;
    let _72: ();
    let mut _73: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _74: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _75: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _76: std::option::Option<bool>;
    let _77: ();
    let mut _78: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _79: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _80: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _81: std::option::Option<bool>;
    scope 1 {
        debug account_metas => _3;
        scope 2 {
            debug referrer_token_state => _47;
            let _47: &anchor_lang::prelude::AccountLoader<'_, state::referral::ReferrerTokenState>;
        }
        scope 3 {
            debug referrer_account => _61;
            let _61: &anchor_lang::prelude::AccountInfo<'_>;
        }
    }

    bb0: {
        StorageLive(_3);
        _3 = Vec::<anchor_lang::prelude::AccountMeta>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &mut _3;
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: anchor_lang::prelude::Signer<'_>);
        StorageLive(_8);
        _8 = std::option::Option::<bool>::None;
        _6 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _7, move _8) -> [return: bb2, unwind: bb36];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        _4 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _5, move _6) -> [return: bb3, unwind: bb36];
    }

    bb3: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut _3;
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).1: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_13);
        _13 = std::option::Option::<bool>::None;
        _11 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _12, move _13) -> [return: bb4, unwind: bb36];
    }

    bb4: {
        StorageDead(_13);
        StorageDead(_12);
        _9 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _10, move _11) -> [return: bb5, unwind: bb36];
    }

    bb5: {
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &mut _3;
        StorageLive(_16);
        StorageLive(_17);
        _17 = &((*_1).2: anchor_lang::prelude::AccountLoader<'_, state::lending_market::LendingMarket>);
        StorageLive(_18);
        _18 = std::option::Option::<bool>::None;
        _16 = <anchor_lang::prelude::AccountLoader<'_, state::lending_market::LendingMarket> as anchor_lang::ToAccountMetas>::to_account_metas(move _17, move _18) -> [return: bb6, unwind: bb36];
    }

    bb6: {
        StorageDead(_18);
        StorageDead(_17);
        _14 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _15, move _16) -> [return: bb7, unwind: bb36];
    }

    bb7: {
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &mut _3;
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).3: anchor_lang::prelude::AccountLoader<'_, state::reserve::Reserve>);
        StorageLive(_23);
        _23 = std::option::Option::<bool>::None;
        _21 = <anchor_lang::prelude::AccountLoader<'_, reserve::Reserve> as anchor_lang::ToAccountMetas>::to_account_metas(move _22, move _23) -> [return: bb8, unwind: bb36];
    }

    bb8: {
        StorageDead(_23);
        StorageDead(_22);
        _19 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _20, move _21) -> [return: bb9, unwind: bb36];
    }

    bb9: {
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _3;
        StorageLive(_26);
        StorageLive(_27);
        _27 = &((*_1).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        StorageLive(_28);
        _28 = std::option::Option::<bool>::None;
        _26 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>> as anchor_lang::ToAccountMetas>::to_account_metas(move _27, move _28) -> [return: bb10, unwind: bb36];
    }

    bb10: {
        StorageDead(_28);
        StorageDead(_27);
        _24 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _25, move _26) -> [return: bb11, unwind: bb36];
    }

    bb11: {
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &mut _3;
        StorageLive(_31);
        StorageLive(_32);
        _32 = &((*_1).5: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_33);
        _33 = std::option::Option::<bool>::None;
        _31 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _32, move _33) -> [return: bb12, unwind: bb36];
    }

    bb12: {
        StorageDead(_33);
        StorageDead(_32);
        _29 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _30, move _31) -> [return: bb13, unwind: bb36];
    }

    bb13: {
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageLive(_34);
        StorageLive(_35);
        _35 = &mut _3;
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).6: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_38);
        _38 = std::option::Option::<bool>::None;
        _36 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _37, move _38) -> [return: bb14, unwind: bb36];
    }

    bb14: {
        StorageDead(_38);
        StorageDead(_37);
        _34 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _35, move _36) -> [return: bb15, unwind: bb36];
    }

    bb15: {
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &mut _3;
        StorageLive(_41);
        StorageLive(_42);
        _42 = &((*_1).7: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_43);
        _43 = std::option::Option::<bool>::None;
        _41 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _42, move _43) -> [return: bb16, unwind: bb36];
    }

    bb16: {
        StorageDead(_43);
        StorageDead(_42);
        _39 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _40, move _41) -> [return: bb17, unwind: bb36];
    }

    bb17: {
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &((*_1).8: std::option::Option<anchor_lang::prelude::AccountLoader<'_, state::referral::ReferrerTokenState>>);
        _46 = discriminant((*_45));
        switchInt(move _46) -> [1: bb18, otherwise: bb21];
    }

    bb18: {
        StorageLive(_47);
        _47 = &(((*_45) as Some).0: anchor_lang::prelude::AccountLoader<'_, state::referral::ReferrerTokenState>);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &mut _3;
        StorageLive(_50);
        StorageLive(_51);
        _51 = &(*_47);
        StorageLive(_52);
        _52 = std::option::Option::<bool>::None;
        _50 = <anchor_lang::prelude::AccountLoader<'_, referral::ReferrerTokenState> as anchor_lang::ToAccountMetas>::to_account_metas(move _51, move _52) -> [return: bb19, unwind: bb36];
    }

    bb19: {
        StorageDead(_52);
        StorageDead(_51);
        _48 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _49, move _50) -> [return: bb20, unwind: bb36];
    }

    bb20: {
        StorageDead(_50);
        StorageDead(_49);
        StorageDead(_48);
        _44 = const ();
        StorageDead(_47);
        goto -> bb24;
    }

    bb21: {
        StorageLive(_53);
        StorageLive(_54);
        _54 = &mut _3;
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = const {alloc279: &anchor_lang::prelude::Pubkey};
        _56 = (*_57);
        _55 = anchor_lang::prelude::AccountMeta::new_readonly(move _56, const false) -> [return: bb22, unwind: bb36];
    }

    bb22: {
        StorageDead(_56);
        _53 = Vec::<anchor_lang::prelude::AccountMeta>::push(move _54, move _55) -> [return: bb23, unwind: bb36];
    }

    bb23: {
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_57);
        StorageDead(_53);
        _44 = const ();
        goto -> bb24;
    }

    bb24: {
        StorageDead(_45);
        StorageDead(_44);
        StorageLive(_58);
        StorageLive(_59);
        _59 = &((*_1).9: std::option::Option<anchor_lang::prelude::AccountInfo<'_>>);
        _60 = discriminant((*_59));
        switchInt(move _60) -> [1: bb25, otherwise: bb28];
    }

    bb25: {
        StorageLive(_61);
        _61 = &(((*_59) as Some).0: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &mut _3;
        StorageLive(_64);
        StorageLive(_65);
        _65 = &(*_61);
        StorageLive(_66);
        _66 = std::option::Option::<bool>::None;
        _64 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _65, move _66) -> [return: bb26, unwind: bb36];
    }

    bb26: {
        StorageDead(_66);
        StorageDead(_65);
        _62 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _63, move _64) -> [return: bb27, unwind: bb36];
    }

    bb27: {
        StorageDead(_64);
        StorageDead(_63);
        StorageDead(_62);
        _58 = const ();
        StorageDead(_61);
        goto -> bb31;
    }

    bb28: {
        StorageLive(_67);
        StorageLive(_68);
        _68 = &mut _3;
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        _71 = const {alloc279: &anchor_lang::prelude::Pubkey};
        _70 = (*_71);
        _69 = anchor_lang::prelude::AccountMeta::new_readonly(move _70, const false) -> [return: bb29, unwind: bb36];
    }

    bb29: {
        StorageDead(_70);
        _67 = Vec::<anchor_lang::prelude::AccountMeta>::push(move _68, move _69) -> [return: bb30, unwind: bb36];
    }

    bb30: {
        StorageDead(_69);
        StorageDead(_68);
        StorageDead(_71);
        StorageDead(_67);
        _58 = const ();
        goto -> bb31;
    }

    bb31: {
        StorageDead(_59);
        StorageDead(_58);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &mut _3;
        StorageLive(_74);
        StorageLive(_75);
        _75 = &((*_1).10: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_76);
        _76 = std::option::Option::<bool>::None;
        _74 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _75, move _76) -> [return: bb32, unwind: bb36];
    }

    bb32: {
        StorageDead(_76);
        StorageDead(_75);
        _72 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _73, move _74) -> [return: bb33, unwind: bb36];
    }

    bb33: {
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_72);
        StorageLive(_77);
        StorageLive(_78);
        _78 = &mut _3;
        StorageLive(_79);
        StorageLive(_80);
        _80 = &((*_1).11: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>);
        StorageLive(_81);
        _81 = std::option::Option::<bool>::None;
        _79 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::ToAccountMetas>::to_account_metas(move _80, move _81) -> [return: bb34, unwind: bb36];
    }

    bb34: {
        StorageDead(_81);
        StorageDead(_80);
        _77 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _78, move _79) -> [return: bb35, unwind: bb36];
    }

    bb35: {
        StorageDead(_79);
        StorageDead(_78);
        StorageDead(_77);
        _0 = move _3;
        StorageDead(_3);
        return;
    }

    bb36 (cleanup): {
        drop(_3) -> [return: bb37, unwind terminate(cleanup)];
    }

    bb37 (cleanup): {
        resume;
    }
}

alloc279 (static: ID, size: 32, align: 1) {
    0x00 │ 04 b2 ac b1 12 58 cc e3 68 2c 41 8b a8 72 ff 3d │ .....X..h,A..r.=
    0x10 │ f9 11 02 71 2f 15 af 12 b6 be 69 b3 43 5b 00 08 │ ...q/.....i.C[..
}
