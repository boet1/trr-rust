// MIR for `get_secs_since_deleveraging_started` before PreCodegen

fn get_secs_since_deleveraging_started(_1: u64, _2: u64) -> std::option::Option<u64> {
    debug deleveraging_margin_call_period_secs => _1;
    debug secs_since_margin_call_started => _2;
    let mut _0: std::option::Option<u64>;
    let _3: std::option::Option<u64>;
    let mut _4: u64;
    let mut _5: u64;
    let _6: ();
    let mut _7: bool;
    let mut _8: &std::option::Option<u64>;
    let _9: ();
    let _10: ();
    let mut _11: std::fmt::Arguments<'_>;
    let mut _12: &[&str];
    let mut _13: &[&str; 3];
    let _14: &[&str; 3];
    let _15: [&str; 3];
    let mut _16: &[core::fmt::rt::Argument<'_>];
    let mut _17: &[core::fmt::rt::Argument<'_>; 2];
    let _18: &[core::fmt::rt::Argument<'_>; 2];
    let _19: [core::fmt::rt::Argument<'_>; 2];
    let mut _20: core::fmt::rt::Argument<'_>;
    let mut _21: &u64;
    let _22: &u64;
    let mut _23: core::fmt::rt::Argument<'_>;
    let mut _24: &u64;
    let _25: &u64;
    scope 1 {
        debug secs_since_deleveraging_started => _3;
        let mut _26: &[&str; 3];
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _2;
        StorageLive(_5);
        _5 = _1;
        _3 = core::num::<impl u64>::checked_sub(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &_3;
        _7 = std::option::Option::<u64>::is_none(move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        switchInt(move _7) -> [0: bb8, otherwise: bb3];
    }

    bb3: {
        StorageDead(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _26 = const _;
        _14 = &(*_26);
        _13 = &(*_14);
        _12 = move _13 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_13);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &_2;
        _21 = &(*_22);
        _20 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _21) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &_1;
        _24 = &(*_25);
        _23 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _24) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_24);
        _19 = [move _20, move _23];
        StorageDead(_23);
        StorageDead(_20);
        _18 = &_19;
        _17 = &(*_18);
        _16 = move _17 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_17);
        _11 = Arguments::<'_>::new_v1(move _12, move _16) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_16);
        StorageDead(_12);
        _10 = _print(move _11) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_11);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_14);
        StorageDead(_10);
        _9 = const ();
        StorageDead(_9);
        _6 = const ();
        goto -> bb9;
    }

    bb8: {
        StorageDead(_8);
        _6 = const ();
        goto -> bb9;
    }

    bb9: {
        StorageDead(_7);
        StorageDead(_6);
        _0 = _3;
        StorageDead(_3);
        return;
    }
}
