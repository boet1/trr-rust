digraph Mir_0_1922 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveLiquidity::withdraw_referrer_fees::{closure#2}(_1: Closure(DefId(0:1922 ~ kamino_lending[6389]::state::reserve::{impl#5}::withdraw_referrer_fees::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), (&amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)])) -&gt; anchor_lang::error::Error<br align="left"/>let _2: ();<br align="left"/>let mut _3: &amp;ReErased str;<br align="left"/>let _4: &amp;ReErased str;<br align="left"/>let mut _5: &amp;ReErased std::string::String;<br align="left"/>let _6: &amp;ReErased std::string::String;<br align="left"/>let _7: std::string::String;<br align="left"/>let _8: std::string::String;<br align="left"/>let mut _9: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _11: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _12: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _13: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _14: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _15: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _16: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _17: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _18: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _20: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _21: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _22: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _25: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _26: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _28: anchor_lang::error::AnchorError;<br align="left"/>let mut _29: std::string::String;<br align="left"/>let mut _30: &amp;ReErased LendingError;<br align="left"/>let _31: LendingError;<br align="left"/>let mut _32: u32;<br align="left"/>let mut _33: LendingError;<br align="left"/>let mut _34: std::string::String;<br align="left"/>let mut _35: &amp;ReErased LendingError;<br align="left"/>let _36: LendingError;<br align="left"/>let mut _37: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _38: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _39: anchor_lang::error::Source;<br align="left"/>let mut _40: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _41: &amp;ReErased LendingError;<br align="left"/>let mut _42: &amp;ReErased LendingError;<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _44: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _45: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>debug referrer_amount_unclaimed_f =&gt; (*(_1.0: &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;));<br align="left"/>debug withdraw_amount_f =&gt; (*(_1.1: &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;));<br align="left"/>debug res =&gt; _8;<br align="left"/>>;
    bb0__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_43 = const _<br/>_12 = &amp;(*_43)<br/>_11 = &amp;(*_12)<br/>_10 = move _11 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_11)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_44 = deref_copy (_1.0: &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_22 = &amp;(*_44)<br/></td></tr><tr><td align="left">_21 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _22)</td></tr></table>>];
    bb1__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _19)</td></tr></table>>];
    bb2__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_45 = deref_copy (_1.1: &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_27 = &amp;(*_45)<br/></td></tr><tr><td align="left">_26 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _27)</td></tr></table>>];
    bb3__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/></td></tr><tr><td align="left">_23 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _24)</td></tr></table>>];
    bb4__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_17 = [move _18, move _23]<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/>_14 = move _15 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_9 = Arguments::&lt;'_&gt;::new_v1(move _10, move _14)</td></tr></table>>];
    bb5__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = format(move _9)</td></tr></table>>];
    bb6__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>_7 = move _8<br/>StorageDead(_8)<br/>_6 = &amp;_7<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::string::String as Deref&gt;::deref(move _5)</td></tr></table>>];
    bb7__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_3 = &amp;(*_4)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_2 = solana_program::log::sol_log(move _3)</td></tr></table>>];
    bb8__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb9__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_2)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_42 = const _<br/>_30 = &amp;(*_42)<br/></td></tr><tr><td align="left">_29 = LendingError::name(move _30)</td></tr></table>>];
    bb10__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_32 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _33)</td></tr></table>>];
    bb11__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_41 = const _<br/>_35 = &amp;(*_41)<br/></td></tr><tr><td align="left">_34 = &lt;LendingError as ToString&gt;::to_string(move _35)</td></tr></table>>];
    bb12__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\reserve.rs&quot;, line: const 760_u32 }<br/>_38 = anchor_lang::error::ErrorOrigin::Source(move _39)<br/>StorageDead(_39)<br/>_37 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _38)<br/>StorageDead(_38)<br/>StorageLive(_40)<br/>_40 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_28 = anchor_lang::error::AnchorError { error_name: move _29, error_code_number: move _32, error_msg: move _34, error_origin: move _37, compared_values: move _40 }<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _28)</td></tr></table>>];
    bb13__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb14__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb15__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb16__0_1922 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1922 -> bb1__0_1922 [label="return"];
    bb1__0_1922 -> bb2__0_1922 [label="return"];
    bb2__0_1922 -> bb3__0_1922 [label="return"];
    bb3__0_1922 -> bb4__0_1922 [label="return"];
    bb4__0_1922 -> bb5__0_1922 [label="return"];
    bb5__0_1922 -> bb6__0_1922 [label="return"];
    bb6__0_1922 -> bb7__0_1922 [label="return"];
    bb6__0_1922 -> bb15__0_1922 [label="unwind"];
    bb7__0_1922 -> bb8__0_1922 [label="return"];
    bb7__0_1922 -> bb15__0_1922 [label="unwind"];
    bb8__0_1922 -> bb9__0_1922 [label="return"];
    bb8__0_1922 -> bb16__0_1922 [label="unwind"];
    bb9__0_1922 -> bb10__0_1922 [label="return"];
    bb10__0_1922 -> bb11__0_1922 [label="return"];
    bb10__0_1922 -> bb14__0_1922 [label="unwind"];
    bb11__0_1922 -> bb12__0_1922 [label="return"];
    bb11__0_1922 -> bb14__0_1922 [label="unwind"];
    bb12__0_1922 -> bb13__0_1922 [label="return"];
    bb12__0_1922 -> bb16__0_1922 [label="unwind"];
    bb14__0_1922 -> bb16__0_1922 [label="return"];
    bb15__0_1922 -> bb16__0_1922 [label="return"];
}
