// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:101:1: 101:25>::default` before PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:101:1: 101:25>::default() -> reserve::Reserve {
    let mut _0: state::reserve::Reserve;
    let mut _1: state::last_update::LastUpdate;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: state::reserve::ReserveLiquidity;
    let mut _4: state::reserve::ReserveCollateral;
    let mut _5: state::reserve::ReserveConfig;
    let mut _6: anchor_lang::prelude::Pubkey;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: [u64; 150];
    let mut _9: [u64; 150];
    let mut _10: [u64; 116];
    let mut _11: [u64; 32];
    let mut _12: [u64; 207];

    bb0: {
        StorageLive(_1);
        _1 = <last_update::LastUpdate as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <ReserveLiquidity as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <ReserveCollateral as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <reserve::ReserveConfig as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = default_array::<u64, 150>() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = default_array::<u64, 150>() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = default_array::<u64, 116>() -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageLive(_11);
        _11 = [const 0_u64; 32];
        StorageLive(_12);
        _12 = default_array::<u64, 207>() -> [return: bb11, unwind continue];
    }

    bb11: {
        _0 = reserve::Reserve { version: const 0_u64, last_update: move _1, lending_market: move _2, farm_collateral: move _6, farm_debt: move _7, liquidity: move _3, reserve_liquidity_padding: move _8, collateral: move _4, reserve_collateral_padding: move _9, config: move _5, config_padding: move _10, borrowed_amount_outside_elevation_group: const 0_u64, borrowed_amounts_against_this_reserve_in_elevation_groups: move _11, padding: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
