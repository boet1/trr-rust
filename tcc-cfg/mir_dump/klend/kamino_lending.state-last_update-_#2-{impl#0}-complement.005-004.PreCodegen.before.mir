// MIR for `last_update::_::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\bitflags-2.4.1\src\lib.rs:618:9: 618:29>::complement` before PreCodegen

fn last_update::_::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\bitflags-2.4.1\src\lib.rs:618:9: 618:29>::complement(_1: last_update::PriceStatusFlags) -> last_update::PriceStatusFlags {
    debug self => _1;
    let mut _0: state::last_update::PriceStatusFlags;
    let _2: state::last_update::PriceStatusFlags;
    let mut _3: u8;
    let mut _4: u8;
    let mut _5: &state::last_update::PriceStatusFlags;
    scope 1 {
        debug f => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = _1;
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &_2;
        _4 = last_update::_::<impl last_update::PriceStatusFlags>::bits(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        _3 = Not(move _4);
        StorageDead(_4);
        _0 = last_update::_::<impl last_update::PriceStatusFlags>::from_bits_truncate(move _3) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
