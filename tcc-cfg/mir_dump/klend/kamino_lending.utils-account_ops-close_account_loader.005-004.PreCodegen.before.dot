digraph Mir_0_2175 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn account_ops::close_account_loader(_1: bool, _2: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;, _3: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, T/#0&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let _6: ();<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let _8: &amp;ReErased str;<br align="left"/>let _9: ();<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _11: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, T/#0&gt;;<br align="left"/>let mut _13: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _15: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _21: ();<br align="left"/>let mut _22: ();<br align="left"/>let mut _23: isize;<br align="left"/>let mut _24: isize;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: isize;<br align="left"/>debug close_account =&gt; _1;<br align="left"/>debug owner =&gt; _2;<br align="left"/>debug account_to_be_closed =&gt; _3;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>>;
    bb0__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const &quot;Closing account&quot;<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_6 = solana_program::log::sol_log(move _7)</td></tr></table>>];
    bb2__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_2)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _16)</td></tr></table>>];
    bb3__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_14 = &amp;_15<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _14)</td></tr></table>>];
    bb4__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, T&gt; as AccountsClose&lt;'_&gt;&gt;::close(move _12, move _13)</td></tr></table>>];
    bb5__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb6__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_17 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb7__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_10 as Continue).0: ())<br/>_9 = _21<br/>StorageDead(_21)<br/>_23 = discriminant(_10)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb8__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb10__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_25 = discriminant(_10)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb11__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_22)<br/>_22 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb16__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb17__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb18__0_2175 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left" balign="left">_27 = discriminant(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2175 -> bb12__0_2175 [label="0"];
    bb0__0_2175 -> bb1__0_2175 [label="otherwise"];
    bb1__0_2175 -> bb2__0_2175 [label="return"];
    bb2__0_2175 -> bb3__0_2175 [label="return"];
    bb3__0_2175 -> bb4__0_2175 [label="return"];
    bb3__0_2175 -> bb16__0_2175 [label="unwind"];
    bb4__0_2175 -> bb5__0_2175 [label="return"];
    bb4__0_2175 -> bb16__0_2175 [label="unwind"];
    bb5__0_2175 -> bb6__0_2175 [label="return"];
    bb5__0_2175 -> bb16__0_2175 [label="unwind"];
    bb6__0_2175 -> bb7__0_2175 [label="0"];
    bb6__0_2175 -> bb9__0_2175 [label="1"];
    bb6__0_2175 -> bb8__0_2175 [label="otherwise"];
    bb7__0_2175 -> bb11__0_2175 [label="return"];
    bb7__0_2175 -> bb17__0_2175 [label="unwind"];
    bb9__0_2175 -> bb10__0_2175 [label="return"];
    bb9__0_2175 -> bb18__0_2175 [label="unwind"];
    bb10__0_2175 -> bb14__0_2175 [label="return"];
    bb10__0_2175 -> bb17__0_2175 [label="unwind"];
    bb11__0_2175 -> bb13__0_2175 [label=""];
    bb12__0_2175 -> bb13__0_2175 [label=""];
    bb13__0_2175 -> bb15__0_2175 [label=""];
    bb14__0_2175 -> bb15__0_2175 [label=""];
    bb16__0_2175 -> bb17__0_2175 [label="return"];
    bb18__0_2175 -> bb16__0_2175 [label=""];
}
