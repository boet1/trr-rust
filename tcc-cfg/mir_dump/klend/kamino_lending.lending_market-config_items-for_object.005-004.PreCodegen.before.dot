digraph Mir_0_921 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn for_object(_1: &amp;ReErased mut H/#0) -&gt; lending_market::config_items::ConfigItemUpdater&lt;ReErased, H/#0, (), (), (), (), ()&gt;<br align="left"/>let mut _2: &amp;ReErased mut H/#0;<br align="left"/>let mut _3: std::string::String;<br align="left"/>let mut _4: &amp;ReErased str;<br align="left"/>let _5: &amp;ReErased str;<br align="left"/>let mut _6: ();<br align="left"/>let mut _7: ();<br align="left"/>let mut _8: ();<br align="left"/>let mut _9: ();<br align="left"/>let mut _10: std::marker::PhantomData&lt;()&gt;;<br align="left"/>debug target =&gt; _1;<br align="left"/>>;
    bb0__0_921 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;mut (*_1)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const &quot;&lt;unnamed&gt;&quot;<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_3 = &lt;str as ToString&gt;::to_string(move _4)</td></tr></table>>];
    bb1__0_921 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_6)<br/>_6 = ()<br/>StorageLive(_7)<br/>_7 = ()<br/>StorageLive(_8)<br/>_8 = ()<br/>StorageLive(_9)<br/>_9 = ()<br/>StorageLive(_10)<br/>_10 = PhantomData::&lt;()&gt;<br/>_0 = ConfigItemUpdater::&lt;'_, H, (), (), (), (), ()&gt; { target: move _2, name: move _3, setter: move _7, getter: move _6, validator: move _8, renderer: move _9, value_type_phantom: move _10 }<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_921 -> bb1__0_921 [label="return"];
}
