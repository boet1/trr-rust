// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1488:3: 1488:81>::rem_assign` after PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1488:3: 1488:81>::rem_assign(_1: &mut uint_types::U128, _2: T) -> () {
    debug self => _1;
    debug other => _2;
    let mut _0: ();
    let _3: utils::fraction::uint_types::U128;
    let mut _4: T;
    let mut _6: (utils::fraction::uint_types::U128, utils::fraction::uint_types::U128);
    let mut _7: utils::fraction::uint_types::U128;
    let mut _8: utils::fraction::uint_types::U128;
    let mut _9: utils::fraction::uint_types::U128;
    scope 1 {
        debug other => _3;
        let _5: utils::fraction::uint_types::U128;
        scope 2 {
            debug rem => _5;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _2;
        _3 = <T as Into<uint_types::U128>>::into(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = (*_1);
        StorageLive(_8);
        _8 = _3;
        _6 = uint_types::U128::div_mod(move _7, move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        _5 = (_6.1: utils::fraction::uint_types::U128);
        StorageDead(_6);
        StorageLive(_9);
        _9 = _5;
        (*_1) = move _9;
        StorageDead(_9);
        _0 = const ();
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
