digraph Mir_0_1194 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_liquidate_repay_amount_check(_1: u64, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: anchor_lang::error::Error;<br align="left"/>let mut _9: anchor_lang::error::Error;<br align="left"/>let mut _10: anchor_lang::error::AnchorError;<br align="left"/>let mut _11: std::string::String;<br align="left"/>let mut _12: &amp;ReErased LendingError;<br align="left"/>let _13: LendingError;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: LendingError;<br align="left"/>let mut _16: std::string::String;<br align="left"/>let mut _17: &amp;ReErased LendingError;<br align="left"/>let _18: LendingError;<br align="left"/>let mut _19: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _20: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _21: anchor_lang::error::Source;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _23: (u64, u64);<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: ();<br align="left"/>let mut _27: &amp;ReErased LendingError;<br align="left"/>let mut _28: &amp;ReErased LendingError;<br align="left"/>debug max_repay =&gt; _1;<br align="left"/>debug actual_repay =&gt; _2;<br align="left"/>>;
    bb0__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/>StorageLive(_6)<br/>_6 = _2<br/>_4 = Lt(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_28 = const _<br/>_12 = &amp;(*_28)<br/></td></tr><tr><td align="left">_11 = LendingError::name(move _12)</td></tr></table>>];
    bb2__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = LendingError::InsufficientRepayAmount<br/></td></tr><tr><td align="left">_14 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _15)</td></tr></table>>];
    bb3__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_27 = const _<br/>_17 = &amp;(*_27)<br/></td></tr><tr><td align="left">_16 = &lt;LendingError as ToString&gt;::to_string(move _17)</td></tr></table>>];
    bb4__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_checks.rs&quot;, line: const 434_u32 }<br/>_20 = anchor_lang::error::ErrorOrigin::Source(move _21)<br/>StorageDead(_21)<br/>_19 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _20)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_10 = anchor_lang::error::AnchorError { error_name: move _11, error_code_number: move _14, error_msg: move _16, error_origin: move _19, compared_values: move _22 }<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _10)</td></tr></table>>];
    bb5__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _1<br/>StorageLive(_25)<br/>_25 = _2<br/>_23 = (move _24, move _25)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_8 = anchor_lang::error::Error::with_values::&lt;u64, u64&gt;(move _9, move _23)</td></tr></table>>];
    bb6__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_9)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _8)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_26)<br/>_26 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb10__0_1194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1194 -> bb7__0_1194 [label="0"];
    bb0__0_1194 -> bb1__0_1194 [label="otherwise"];
    bb1__0_1194 -> bb2__0_1194 [label="return"];
    bb2__0_1194 -> bb3__0_1194 [label="return"];
    bb2__0_1194 -> bb9__0_1194 [label="unwind"];
    bb3__0_1194 -> bb4__0_1194 [label="return"];
    bb3__0_1194 -> bb9__0_1194 [label="unwind"];
    bb4__0_1194 -> bb5__0_1194 [label="return"];
    bb4__0_1194 -> bb10__0_1194 [label="unwind"];
    bb5__0_1194 -> bb6__0_1194 [label="return"];
    bb5__0_1194 -> bb10__0_1194 [label="unwind"];
    bb6__0_1194 -> bb8__0_1194 [label=""];
    bb7__0_1194 -> bb8__0_1194 [label=""];
    bb9__0_1194 -> bb10__0_1194 [label="return"];
}
