digraph Mir_0_2632 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_switchboard_price(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;utils::prices::types::TimestampedPrice, anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: anchor_lang::error::Error;<br align="left"/>let mut _10: anchor_lang::error::AnchorError;<br align="left"/>let mut _11: std::string::String;<br align="left"/>let mut _12: &amp;ReErased LendingError;<br align="left"/>let _13: LendingError;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: LendingError;<br align="left"/>let mut _16: std::string::String;<br align="left"/>let mut _17: &amp;ReErased LendingError;<br align="left"/>let _18: LendingError;<br align="left"/>let mut _19: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _20: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _21: anchor_lang::error::Source;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _23: utils::account_loader_trait::FatAccountLoader&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, utils::account_loader_trait::FatAccountLoader&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;utils::account_loader_trait::FatAccountLoader&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _31: utils::account_loader_trait::FatAccountLoader&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let _32: std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _35: &amp;ReErased utils::account_loader_trait::FatAccountLoader&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _40: std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let _41: u64;<br align="left"/>let mut _42: &amp;ReErased sbod_itf::accounts::PullFeedAccountData;<br align="left"/>let mut _43: &amp;ReErased std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let _44: u64;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: u64;<br align="left"/>let _47: u64;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _50: i64;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: (u64, bool);<br align="left"/>let mut _55: bool;<br align="left"/>let _56: rust_decimal::decimal::Decimal;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, rust_decimal::decimal::Decimal&gt;;<br align="left"/>let mut _58: std::result::Result&lt;rust_decimal::decimal::Decimal, anchor_lang::error::Error&gt;;<br align="left"/>let mut _59: std::option::Option&lt;rust_decimal::decimal::Decimal&gt;;<br align="left"/>let mut _60: &amp;ReErased sbod_itf::accounts::CurrentResult;<br align="left"/>let _61: &amp;ReErased sbod_itf::accounts::PullFeedAccountData;<br align="left"/>let mut _62: &amp;ReErased std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let mut _63: anchor_lang::error::Error;<br align="left"/>let mut _64: anchor_lang::error::AnchorError;<br align="left"/>let mut _65: std::string::String;<br align="left"/>let mut _66: &amp;ReErased LendingError;<br align="left"/>let _67: LendingError;<br align="left"/>let mut _68: u32;<br align="left"/>let mut _69: LendingError;<br align="left"/>let mut _70: std::string::String;<br align="left"/>let mut _71: &amp;ReErased LendingError;<br align="left"/>let _72: LendingError;<br align="left"/>let mut _73: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _74: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _75: anchor_lang::error::Source;<br align="left"/>let mut _76: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _81: rust_decimal::decimal::Decimal;<br align="left"/>let _82: ();<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: i128;<br align="left"/>let mut _85: &amp;ReErased rust_decimal::decimal::Decimal;<br align="left"/>let mut _86: !;<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased str;<br align="left"/>let _89: &amp;ReErased str;<br align="left"/>let mut _90: anchor_lang::error::Error;<br align="left"/>let mut _91: anchor_lang::error::AnchorError;<br align="left"/>let mut _92: std::string::String;<br align="left"/>let mut _93: &amp;ReErased LendingError;<br align="left"/>let _94: LendingError;<br align="left"/>let mut _95: u32;<br align="left"/>let mut _96: LendingError;<br align="left"/>let mut _97: std::string::String;<br align="left"/>let mut _98: &amp;ReErased LendingError;<br align="left"/>let _99: LendingError;<br align="left"/>let mut _100: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _101: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _102: anchor_lang::error::Source;<br align="left"/>let mut _103: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _104: u128;<br align="left"/>let mut _105: std::result::Result&lt;u128, std::num::TryFromIntError&gt;;<br align="left"/>let mut _106: i128;<br align="left"/>let mut _107: &amp;ReErased rust_decimal::decimal::Decimal;<br align="left"/>let mut _108: &amp;ReErased str;<br align="left"/>let _109: &amp;ReErased str;<br align="left"/>let _110: u32;<br align="left"/>let mut _111: &amp;ReErased rust_decimal::decimal::Decimal;<br align="left"/>let _112: rust_decimal::decimal::Decimal;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, rust_decimal::decimal::Decimal&gt;;<br align="left"/>let mut _114: std::result::Result&lt;rust_decimal::decimal::Decimal, anchor_lang::error::Error&gt;;<br align="left"/>let mut _115: std::option::Option&lt;rust_decimal::decimal::Decimal&gt;;<br align="left"/>let mut _116: &amp;ReErased sbod_itf::accounts::CurrentResult;<br align="left"/>let _117: &amp;ReErased sbod_itf::accounts::PullFeedAccountData;<br align="left"/>let mut _118: &amp;ReErased std::cell::Ref&lt;ReErased, sbod_itf::accounts::PullFeedAccountData&gt;;<br align="left"/>let mut _119: anchor_lang::error::Error;<br align="left"/>let mut _120: anchor_lang::error::AnchorError;<br align="left"/>let mut _121: std::string::String;<br align="left"/>let mut _122: &amp;ReErased LendingError;<br align="left"/>let _123: LendingError;<br align="left"/>let mut _124: u32;<br align="left"/>let mut _125: LendingError;<br align="left"/>let mut _126: std::string::String;<br align="left"/>let mut _127: &amp;ReErased LendingError;<br align="left"/>let _128: LendingError;<br align="left"/>let mut _129: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _130: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _131: anchor_lang::error::Source;<br align="left"/>let mut _132: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _137: rust_decimal::decimal::Decimal;<br align="left"/>let _138: u128;<br align="left"/>let mut _139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u128&gt;;<br align="left"/>let mut _140: std::result::Result&lt;u128, anchor_lang::error::Error&gt;;<br align="left"/>let mut _141: std::result::Result&lt;u128, std::num::TryFromIntError&gt;;<br align="left"/>let mut _142: i128;<br align="left"/>let mut _143: &amp;ReErased rust_decimal::decimal::Decimal;<br align="left"/>let mut _144: Closure(DefId(0:2633 ~ kamino_lending[6389]::utils::prices::switchboard::get_switchboard_price::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _149: u128;<br align="left"/>let _150: u32;<br align="left"/>let mut _151: &amp;ReErased rust_decimal::decimal::Decimal;<br align="left"/>let _152: std::boxed::Box&lt;Closure(DefId(0:2634 ~ kamino_lending[6389]::utils::prices::switchboard::get_switchboard_price::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;, []), (u128, u32, u128, u32)]), std::alloc::Global&gt;;<br align="left"/>let mut _153: Closure(DefId(0:2634 ~ kamino_lending[6389]::utils::prices::switchboard::get_switchboard_price::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;, []), (u128, u32, u128, u32)]);<br align="left"/>let mut _154: utils::prices::types::TimestampedPrice;<br align="left"/>let mut _155: std::boxed::Box&lt;dyn [Binder(Trait(std::ops::FnOnce&lt;()&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [()], term: Term::Ty(std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;) }), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _156: std::boxed::Box&lt;Closure(DefId(0:2634 ~ kamino_lending[6389]::utils::prices::switchboard::get_switchboard_price::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;, []), (u128, u32, u128, u32)]), std::alloc::Global&gt;;<br align="left"/>let mut _157: u64;<br align="left"/>let mut _158: &amp;ReErased LendingError;<br align="left"/>let mut _159: &amp;ReErased LendingError;<br align="left"/>let mut _160: &amp;ReErased LendingError;<br align="left"/>let mut _161: &amp;ReErased LendingError;<br align="left"/>let mut _162: &amp;ReErased LendingError;<br align="left"/>let mut _163: &amp;ReErased LendingError;<br align="left"/>let mut _164: &amp;ReErased LendingError;<br align="left"/>let mut _165: &amp;ReErased LendingError;<br align="left"/>let mut _166: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _167: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>debug switchboard_feed_info =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug feed_acc =&gt; _23;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug feed =&gt; _32;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug last_updated_slot =&gt; _41;<br align="left"/>debug elapsed_slots =&gt; _44;<br align="left"/>debug timestamp =&gt; _47;<br align="left"/>debug price_switchboard_desc =&gt; _56;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug price_switchboard_desc_mantissa =&gt; _104;<br align="left"/>debug price_switchboard_desc_scale =&gt; _110;<br align="left"/>debug stdev =&gt; _112;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>debug stdev_mantissa =&gt; _138;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug stdev_scale =&gt; _150;<br align="left"/>debug price_load =&gt; _152;<br align="left"/>>;
    bb0__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_167 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::Pubkey)<br/>_5 = &amp;(*_167)<br/>StorageLive(_6)<br/>_166 = const _<br/>_6 = &amp;(*_166)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _5, move _6)</td></tr></table>>];
    bb1__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_159 = const _<br/>_12 = &amp;(*_159)<br/></td></tr><tr><td align="left">_11 = LendingError::name(move _12)</td></tr></table>>];
    bb3__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = LendingError::NoPriceFound<br/></td></tr><tr><td align="left">_14 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _15)</td></tr></table>>];
    bb4__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_158 = const _<br/>_17 = &amp;(*_158)<br/></td></tr><tr><td align="left">_16 = &lt;LendingError as ToString&gt;::to_string(move _17)</td></tr></table>>];
    bb5__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 39_u32 }<br/>_20 = anchor_lang::error::ErrorOrigin::Source(move _21)<br/>StorageDead(_21)<br/>_19 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _20)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_10 = anchor_lang::error::AnchorError { error_name: move _11, error_code_number: move _14, error_msg: move _16, error_origin: move _19, compared_values: move _22 }<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _10)</td></tr></table>>];
    bb6__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_0 = std::result::Result::&lt;TimestampedPrice, anchor_lang::error::Error&gt;::Err(move _9)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_1)<br/></td></tr><tr><td align="left">_25 = account_loader_trait::FatAccountLoader::&lt;'_, PullFeedAccountData&gt;::try_from(move _26)</td></tr></table>>];
    bb8__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;account_loader_trait::FatAccountLoader&lt;'_, PullFeedAccountData&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb9__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_24 as Continue).0: utils::account_loader_trait::FatAccountLoader&lt;'_, sbod_itf::accounts::PullFeedAccountData&gt;)<br/>_23 = move _31<br/>StorageDead(_31)<br/>_168 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_23<br/></td></tr><tr><td align="left">_34 = account_loader_trait::FatAccountLoader::&lt;'_, PullFeedAccountData&gt;::load(move _35)</td></tr></table>>];
    bb11__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPrice, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb13__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_186 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;Ref&lt;'_, PullFeedAccountData&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb15__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb16__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_33 as Continue).0: std::cell::Ref&lt;'_, sbod_itf::accounts::PullFeedAccountData&gt;)<br/>_32 = move _40<br/>StorageDead(_40)<br/>_170 = discriminant(_33)<br/>StorageDead(_33)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_32<br/></td></tr><tr><td align="left">_42 = &lt;Ref&lt;'_, PullFeedAccountData&gt; as Deref&gt;::deref(move _43)</td></tr></table>>];
    bb17__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPrice, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb18__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_184 = discriminant(_33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_41 = (((*_42).15: sbod_itf::accounts::CurrentResult).8: u64)<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = ((*_2).0: u64)<br/>StorageLive(_46)<br/>_46 = _41<br/></td></tr><tr><td align="left">_44 = core::num::&lt;impl u64&gt;::saturating_sub(move _45, move _46)</td></tr></table>>];
    bb20__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = ((*_2).4: i64)<br/></td></tr><tr><td align="left">_49 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _50)</td></tr></table>>];
    bb21__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap_or(move _49, const 0_u64)</td></tr></table>>];
    bb22__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _44<br/>_54 = CheckedMul(_53, const _)<br/></td></tr><tr><td align="left">assert(!move (_54.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _53, const _)</td></tr></table>>];
    bb23__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_52 = move (_54.0: u64)<br/>StorageDead(_53)<br/>_55 = Eq(const 1000_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _55, &quot;attempt to divide `{}` by zero&quot;, _52)</td></tr></table>>];
    bb24__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_51 = Div(move _52, const 1000_u64)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_47 = core::num::&lt;impl u64&gt;::saturating_sub(move _48, move _51)</td></tr></table>>];
    bb25__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_48)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_32<br/></td></tr><tr><td align="left">_61 = &lt;Ref&lt;'_, PullFeedAccountData&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb26__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = &amp;((*_61).15: sbod_itf::accounts::CurrentResult)<br/></td></tr><tr><td align="left">_59 = CurrentResult::value(move _60)</td></tr></table>>];
    bb27__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_165 = const _<br/>_66 = &amp;(*_165)<br/></td></tr><tr><td align="left">_65 = LendingError::name(move _66)</td></tr></table>>];
    bb28__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = LendingError::SwitchboardV2Error<br/></td></tr><tr><td align="left">_68 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _69)</td></tr></table>>];
    bb29__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_164 = const _<br/>_71 = &amp;(*_164)<br/></td></tr><tr><td align="left">_70 = &lt;LendingError as ToString&gt;::to_string(move _71)</td></tr></table>>];
    bb30__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 58_u32 }<br/>_74 = anchor_lang::error::ErrorOrigin::Source(move _75)<br/>StorageDead(_75)<br/>_73 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _74)<br/>StorageDead(_74)<br/>StorageLive(_76)<br/>_76 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_64 = anchor_lang::error::AnchorError { error_name: move _65, error_code_number: move _68, error_msg: move _70, error_origin: move _73, compared_values: move _76 }<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _64)</td></tr></table>>];
    bb31__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_58 = std::option::Option::&lt;rust_decimal::decimal::Decimal&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _59, move _63)</td></tr></table>>];
    bb32__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;rust_decimal::decimal::Decimal, anchor_lang::error::Error&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb33__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_77 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb34__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_57 as Continue).0: rust_decimal::decimal::Decimal)<br/>_56 = _81<br/>StorageDead(_81)<br/>_172 = discriminant(_57)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_56<br/></td></tr><tr><td align="left">_84 = rust_decimal::decimal::Decimal::mantissa(move _85)</td></tr></table>>];
    bb35__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_80)<br/>_80 = move _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPrice, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb36__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>_182 = discriminant(_57)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = Le(move _84, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb38__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = const &quot;Switchboard oracle price is zero or negative which is not allowed&quot;<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = solana_program::log::sol_log(move _88)</td></tr></table>>];
    bb39__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_161 = const _<br/>_93 = &amp;(*_161)<br/></td></tr><tr><td align="left">_92 = LendingError::name(move _93)</td></tr></table>>];
    bb40__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = LendingError::PriceIsZero<br/></td></tr><tr><td align="left">_95 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _96)</td></tr></table>>];
    bb41__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_160 = const _<br/>_98 = &amp;(*_160)<br/></td></tr><tr><td align="left">_97 = &lt;LendingError as ToString&gt;::to_string(move _98)</td></tr></table>>];
    bb42__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 62_u32 }<br/>_101 = anchor_lang::error::ErrorOrigin::Source(move _102)<br/>StorageDead(_102)<br/>_100 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _101)<br/>StorageDead(_101)<br/>StorageLive(_103)<br/>_103 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_91 = anchor_lang::error::AnchorError { error_name: move _92, error_code_number: move _95, error_msg: move _97, error_origin: move _100, compared_values: move _103 }<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _91)</td></tr></table>>];
    bb43__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_0 = std::result::Result::&lt;TimestampedPrice, anchor_lang::error::Error&gt;::Err(move _90)<br/>StorageDead(_90)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = const ()<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_56<br/></td></tr><tr><td align="left">_106 = rust_decimal::decimal::Decimal::mantissa(move _107)</td></tr></table>>];
    bb45__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;u128 as TryFrom&lt;i128&gt;&gt;::try_from(move _106)</td></tr></table>>];
    bb46__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = const &quot;a `&lt;= 0` check above guarantees this&quot;<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_104 = std::result::Result::&lt;u128, TryFromIntError&gt;::expect(move _105, move _108)</td></tr></table>>];
    bb47__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_56<br/></td></tr><tr><td align="left">_110 = rust_decimal::decimal::Decimal::scale(move _111)</td></tr></table>>];
    bb48__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;_32<br/></td></tr><tr><td align="left">_117 = &lt;Ref&lt;'_, PullFeedAccountData&gt; as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb49__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_116 = &amp;((*_117).15: sbod_itf::accounts::CurrentResult)<br/></td></tr><tr><td align="left">_115 = CurrentResult::std_dev(move _116)</td></tr></table>>];
    bb50__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_163 = const _<br/>_122 = &amp;(*_163)<br/></td></tr><tr><td align="left">_121 = LendingError::name(move _122)</td></tr></table>>];
    bb51__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = LendingError::SwitchboardV2Error<br/></td></tr><tr><td align="left">_124 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _125)</td></tr></table>>];
    bb52__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_162 = const _<br/>_127 = &amp;(*_162)<br/></td></tr><tr><td align="left">_126 = &lt;LendingError as ToString&gt;::to_string(move _127)</td></tr></table>>];
    bb53__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 71_u32 }<br/>_130 = anchor_lang::error::ErrorOrigin::Source(move _131)<br/>StorageDead(_131)<br/>_129 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _130)<br/>StorageDead(_130)<br/>StorageLive(_132)<br/>_132 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_120 = anchor_lang::error::AnchorError { error_name: move _121, error_code_number: move _124, error_msg: move _126, error_origin: move _129, compared_values: move _132 }<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _120)</td></tr></table>>];
    bb54__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_114 = std::option::Option::&lt;rust_decimal::decimal::Decimal&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _115, move _119)</td></tr></table>>];
    bb55__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;rust_decimal::decimal::Decimal, anchor_lang::error::Error&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb56__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_133 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb57__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_113 as Continue).0: rust_decimal::decimal::Decimal)<br/>_112 = _137<br/>StorageDead(_137)<br/>_174 = discriminant(_113)<br/>StorageDead(_117)<br/>StorageDead(_113)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = &amp;_112<br/></td></tr><tr><td align="left">_142 = rust_decimal::decimal::Decimal::mantissa(move _143)</td></tr></table>>];
    bb58__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = move ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_136)<br/>_136 = move _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPrice, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb59__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>_180 = discriminant(_113)<br/>StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;u128 as TryFrom&lt;i128&gt;&gt;::try_from(move _142)</td></tr></table>>];
    bb61__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageLive(_144)<br/>_144 = {closure@programs\klend\src\utils\prices\switchboard.rs:72:67: 72:70}<br/></td></tr><tr><td align="left">_140 = std::result::Result::&lt;u128, TryFromIntError&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\utils\prices\switchboard.rs:72:67: 72:70}&gt;(move _141, move _144)</td></tr></table>>];
    bb62__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = &lt;std::result::Result&lt;u128, anchor_lang::error::Error&gt; as Try&gt;::branch(move _140)</td></tr></table>>];
    bb63__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_145 = discriminant(_139)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb64__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_139 as Continue).0: u128)<br/>_138 = _149<br/>StorageDead(_149)<br/>_176 = discriminant(_139)<br/>StorageDead(_139)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_112<br/></td></tr><tr><td align="left">_150 = rust_decimal::decimal::Decimal::scale(move _151)</td></tr></table>>];
    bb65__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = move ((_139 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_148)<br/>_148 = move _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPrice, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb66__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>_178 = discriminant(_139)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = {closure@programs\klend\src\utils\prices\switchboard.rs:78:31: 78:38} { price_switchboard_desc_mantissa: _104, price_switchboard_desc_scale: _110, stdev_mantissa: _138, stdev_scale: _150 }<br/></td></tr><tr><td align="left">_152 = Box::&lt;{closure@programs\klend\src\utils\prices\switchboard.rs:78:31: 78:38}&gt;::new(move _153)</td></tr></table>>];
    bb68__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = move _152<br/>_155 = move _156 as std::boxed::Box&lt;dyn std::ops::FnOnce() -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt; (PointerCoercion(Unsize))<br/>StorageDead(_156)<br/>StorageLive(_157)<br/>_157 = _47<br/>_154 = TimestampedPrice { price_load: move _155, timestamp: move _157 }<br/>StorageDead(_157)<br/>StorageDead(_155)<br/>_0 = std::result::Result::&lt;TimestampedPrice, anchor_lang::error::Error&gt;::Ok(move _154)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_138)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_104)<br/>StorageDead(_56)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb69__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb70__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb73__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb74__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left">return</td></tr></table>>];
    bb76__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb77__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb78__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb79__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb80__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb81__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb82__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb83__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_188 = discriminant(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left" balign="left">_189 = discriminant(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left" balign="left">_190 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left" balign="left">_191 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2632 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left" balign="left">_192 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2632 -> bb1__0_2632 [label="return"];
    bb1__0_2632 -> bb7__0_2632 [label="0"];
    bb1__0_2632 -> bb2__0_2632 [label="otherwise"];
    bb2__0_2632 -> bb3__0_2632 [label="return"];
    bb3__0_2632 -> bb4__0_2632 [label="return"];
    bb3__0_2632 -> bb81__0_2632 [label="unwind"];
    bb4__0_2632 -> bb5__0_2632 [label="return"];
    bb4__0_2632 -> bb81__0_2632 [label="unwind"];
    bb5__0_2632 -> bb6__0_2632 [label="return"];
    bb5__0_2632 -> bb82__0_2632 [label="unwind"];
    bb6__0_2632 -> bb75__0_2632 [label=""];
    bb7__0_2632 -> bb8__0_2632 [label="return"];
    bb8__0_2632 -> bb9__0_2632 [label="return"];
    bb8__0_2632 -> bb82__0_2632 [label="unwind"];
    bb9__0_2632 -> bb10__0_2632 [label="0"];
    bb9__0_2632 -> bb12__0_2632 [label="1"];
    bb9__0_2632 -> bb11__0_2632 [label="otherwise"];
    bb10__0_2632 -> bb14__0_2632 [label="return"];
    bb10__0_2632 -> bb80__0_2632 [label="unwind"];
    bb12__0_2632 -> bb13__0_2632 [label="return"];
    bb12__0_2632 -> bb87__0_2632 [label="unwind"];
    bb13__0_2632 -> bb74__0_2632 [label=""];
    bb14__0_2632 -> bb15__0_2632 [label="return"];
    bb14__0_2632 -> bb80__0_2632 [label="unwind"];
    bb15__0_2632 -> bb16__0_2632 [label="0"];
    bb15__0_2632 -> bb17__0_2632 [label="1"];
    bb15__0_2632 -> bb11__0_2632 [label="otherwise"];
    bb16__0_2632 -> bb19__0_2632 [label="return"];
    bb16__0_2632 -> bb79__0_2632 [label="unwind"];
    bb17__0_2632 -> bb18__0_2632 [label="return"];
    bb17__0_2632 -> bb86__0_2632 [label="unwind"];
    bb18__0_2632 -> bb73__0_2632 [label=""];
    bb19__0_2632 -> bb20__0_2632 [label="return"];
    bb19__0_2632 -> bb79__0_2632 [label="unwind"];
    bb20__0_2632 -> bb21__0_2632 [label="return"];
    bb20__0_2632 -> bb79__0_2632 [label="unwind"];
    bb21__0_2632 -> bb22__0_2632 [label="return"];
    bb21__0_2632 -> bb79__0_2632 [label="unwind"];
    bb22__0_2632 -> bb23__0_2632 [label="success"];
    bb22__0_2632 -> bb79__0_2632 [label="unwind"];
    bb23__0_2632 -> bb24__0_2632 [label="success"];
    bb23__0_2632 -> bb79__0_2632 [label="unwind"];
    bb24__0_2632 -> bb25__0_2632 [label="return"];
    bb24__0_2632 -> bb79__0_2632 [label="unwind"];
    bb25__0_2632 -> bb26__0_2632 [label="return"];
    bb25__0_2632 -> bb79__0_2632 [label="unwind"];
    bb26__0_2632 -> bb27__0_2632 [label="return"];
    bb26__0_2632 -> bb79__0_2632 [label="unwind"];
    bb27__0_2632 -> bb28__0_2632 [label="return"];
    bb27__0_2632 -> bb79__0_2632 [label="unwind"];
    bb28__0_2632 -> bb29__0_2632 [label="return"];
    bb28__0_2632 -> bb78__0_2632 [label="unwind"];
    bb29__0_2632 -> bb30__0_2632 [label="return"];
    bb29__0_2632 -> bb78__0_2632 [label="unwind"];
    bb30__0_2632 -> bb31__0_2632 [label="return"];
    bb30__0_2632 -> bb79__0_2632 [label="unwind"];
    bb31__0_2632 -> bb32__0_2632 [label="return"];
    bb31__0_2632 -> bb79__0_2632 [label="unwind"];
    bb32__0_2632 -> bb33__0_2632 [label="return"];
    bb32__0_2632 -> bb79__0_2632 [label="unwind"];
    bb33__0_2632 -> bb34__0_2632 [label="0"];
    bb33__0_2632 -> bb35__0_2632 [label="1"];
    bb33__0_2632 -> bb11__0_2632 [label="otherwise"];
    bb34__0_2632 -> bb37__0_2632 [label="return"];
    bb34__0_2632 -> bb79__0_2632 [label="unwind"];
    bb35__0_2632 -> bb36__0_2632 [label="return"];
    bb35__0_2632 -> bb85__0_2632 [label="unwind"];
    bb36__0_2632 -> bb72__0_2632 [label=""];
    bb37__0_2632 -> bb44__0_2632 [label="0"];
    bb37__0_2632 -> bb38__0_2632 [label="otherwise"];
    bb38__0_2632 -> bb39__0_2632 [label="return"];
    bb38__0_2632 -> bb79__0_2632 [label="unwind"];
    bb39__0_2632 -> bb40__0_2632 [label="return"];
    bb39__0_2632 -> bb79__0_2632 [label="unwind"];
    bb40__0_2632 -> bb41__0_2632 [label="return"];
    bb40__0_2632 -> bb77__0_2632 [label="unwind"];
    bb41__0_2632 -> bb42__0_2632 [label="return"];
    bb41__0_2632 -> bb77__0_2632 [label="unwind"];
    bb42__0_2632 -> bb43__0_2632 [label="return"];
    bb42__0_2632 -> bb79__0_2632 [label="unwind"];
    bb43__0_2632 -> bb72__0_2632 [label=""];
    bb44__0_2632 -> bb45__0_2632 [label="return"];
    bb44__0_2632 -> bb79__0_2632 [label="unwind"];
    bb45__0_2632 -> bb46__0_2632 [label="return"];
    bb45__0_2632 -> bb79__0_2632 [label="unwind"];
    bb46__0_2632 -> bb47__0_2632 [label="return"];
    bb46__0_2632 -> bb79__0_2632 [label="unwind"];
    bb47__0_2632 -> bb48__0_2632 [label="return"];
    bb47__0_2632 -> bb79__0_2632 [label="unwind"];
    bb48__0_2632 -> bb49__0_2632 [label="return"];
    bb48__0_2632 -> bb79__0_2632 [label="unwind"];
    bb49__0_2632 -> bb50__0_2632 [label="return"];
    bb49__0_2632 -> bb79__0_2632 [label="unwind"];
    bb50__0_2632 -> bb51__0_2632 [label="return"];
    bb50__0_2632 -> bb79__0_2632 [label="unwind"];
    bb51__0_2632 -> bb52__0_2632 [label="return"];
    bb51__0_2632 -> bb76__0_2632 [label="unwind"];
    bb52__0_2632 -> bb53__0_2632 [label="return"];
    bb52__0_2632 -> bb76__0_2632 [label="unwind"];
    bb53__0_2632 -> bb54__0_2632 [label="return"];
    bb53__0_2632 -> bb79__0_2632 [label="unwind"];
    bb54__0_2632 -> bb55__0_2632 [label="return"];
    bb54__0_2632 -> bb79__0_2632 [label="unwind"];
    bb55__0_2632 -> bb56__0_2632 [label="return"];
    bb55__0_2632 -> bb79__0_2632 [label="unwind"];
    bb56__0_2632 -> bb57__0_2632 [label="0"];
    bb56__0_2632 -> bb58__0_2632 [label="1"];
    bb56__0_2632 -> bb11__0_2632 [label="otherwise"];
    bb57__0_2632 -> bb60__0_2632 [label="return"];
    bb57__0_2632 -> bb79__0_2632 [label="unwind"];
    bb58__0_2632 -> bb59__0_2632 [label="return"];
    bb58__0_2632 -> bb84__0_2632 [label="unwind"];
    bb59__0_2632 -> bb71__0_2632 [label=""];
    bb60__0_2632 -> bb61__0_2632 [label="return"];
    bb60__0_2632 -> bb79__0_2632 [label="unwind"];
    bb61__0_2632 -> bb62__0_2632 [label="return"];
    bb61__0_2632 -> bb79__0_2632 [label="unwind"];
    bb62__0_2632 -> bb63__0_2632 [label="return"];
    bb62__0_2632 -> bb79__0_2632 [label="unwind"];
    bb63__0_2632 -> bb64__0_2632 [label="0"];
    bb63__0_2632 -> bb65__0_2632 [label="1"];
    bb63__0_2632 -> bb11__0_2632 [label="otherwise"];
    bb64__0_2632 -> bb67__0_2632 [label="return"];
    bb64__0_2632 -> bb79__0_2632 [label="unwind"];
    bb65__0_2632 -> bb66__0_2632 [label="return"];
    bb65__0_2632 -> bb83__0_2632 [label="unwind"];
    bb66__0_2632 -> bb71__0_2632 [label=""];
    bb67__0_2632 -> bb68__0_2632 [label="return"];
    bb67__0_2632 -> bb79__0_2632 [label="unwind"];
    bb68__0_2632 -> bb69__0_2632 [label="return"];
    bb68__0_2632 -> bb80__0_2632 [label="unwind"];
    bb69__0_2632 -> bb70__0_2632 [label="return"];
    bb69__0_2632 -> bb82__0_2632 [label="unwind"];
    bb70__0_2632 -> bb75__0_2632 [label=""];
    bb71__0_2632 -> bb72__0_2632 [label=""];
    bb72__0_2632 -> bb73__0_2632 [label="return"];
    bb72__0_2632 -> bb80__0_2632 [label="unwind"];
    bb73__0_2632 -> bb74__0_2632 [label="return"];
    bb73__0_2632 -> bb82__0_2632 [label="unwind"];
    bb74__0_2632 -> bb75__0_2632 [label=""];
    bb76__0_2632 -> bb79__0_2632 [label="return"];
    bb77__0_2632 -> bb79__0_2632 [label="return"];
    bb78__0_2632 -> bb79__0_2632 [label="return"];
    bb79__0_2632 -> bb80__0_2632 [label="return"];
    bb80__0_2632 -> bb82__0_2632 [label="return"];
    bb81__0_2632 -> bb82__0_2632 [label="return"];
    bb83__0_2632 -> bb79__0_2632 [label=""];
    bb84__0_2632 -> bb79__0_2632 [label=""];
    bb85__0_2632 -> bb79__0_2632 [label=""];
    bb86__0_2632 -> bb80__0_2632 [label=""];
    bb87__0_2632 -> bb82__0_2632 [label=""];
}
