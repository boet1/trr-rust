digraph Mir_0_11445 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;uint_types::U256 as From&lt;u64&gt;&gt;::from(_1: u64) -&gt; utils::fraction::uint_types::U256<br align="left"/>let mut _2: [u64; 4_usize];<br align="left"/>let mut _3: u64;<br align="left"/>let _4: usize;<br align="left"/>let mut _5: usize;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: [u64; 4_usize];<br align="left"/>debug value =&gt; _1;<br align="left"/>debug ret =&gt; _2;<br align="left"/>>;
    bb0__0_11445 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = [const 0_u64; 4]<br/>StorageLive(_3)<br/>_3 = _1<br/>StorageLive(_4)<br/>_4 = const 0_usize<br/>_5 = Len(_2)<br/>_6 = Lt(_4, _5)<br/></td></tr><tr><td align="left">assert(move _6, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _5, _4)</td></tr></table>>];
    bb1__0_11445 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_2[_4] = move _3<br/>StorageDead(_3)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>_7 = _2<br/>_0 = uint_types::U256(move _7)<br/>StorageDead(_7)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11445 -> bb1__0_11445 [label="success"];
}
