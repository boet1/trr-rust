// MIR for `config_items::<impl at programs\klend\src\lending_market\config_items.rs:174:1: 175:45>::representing_u8_enum` before PreCodegen

fn config_items::<impl at programs\klend\src\lending_market\config_items.rs:174:1: 175:45>::representing_u8_enum(_1: ConfigItemUpdater<'_, H, u8, S, G, V, R>) -> ConfigItemUpdater<'_, H, u8, S, G, for<'a> fn(&'a u8) -> std::result::Result<(), anchor_lang::error::Error> {check_valid_u8_enum::<E>}, for<'a, 'b, 'c> fn(&'a u8, &'b mut Formatter<'c>) -> std::result::Result<(), std::fmt::Error> {as_u8_enum::<E>}> {
    debug self => _1;
    let mut _0: lending_market::config_items::ConfigItemUpdater<'_, H, u8, S, G, for<'a> fn(&'a u8) -> std::result::Result<(), anchor_lang::error::Error> {lending_market::config_items::validations::check_valid_u8_enum::<E>}, for<'a, 'b, 'c> fn(&'a u8, &'b mut std::fmt::Formatter<'c>) -> std::result::Result<(), std::fmt::Error> {lending_market::config_items::renderings::as_u8_enum::<E>}>;
    let mut _2: lending_market::config_items::ConfigItemUpdater<'_, H, u8, S, G, for<'a> fn(&'a u8) -> std::result::Result<(), anchor_lang::error::Error> {lending_market::config_items::validations::check_valid_u8_enum::<E>}, R>;
    let mut _3: lending_market::config_items::ConfigItemUpdater<'_, H, u8, S, G, V, R>;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = move _1;
        _2 = ConfigItemUpdater::<'_, H, u8, S, G, V, R>::validating::<for<'a> fn(&'a u8) -> std::result::Result<(), anchor_lang::error::Error> {check_valid_u8_enum::<E>}>(move _3, check_valid_u8_enum::<E>) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        StorageDead(_3);
        _0 = ConfigItemUpdater::<'_, H, u8, S, G, for<'a> fn(&'a u8) -> std::result::Result<(), anchor_lang::error::Error> {check_valid_u8_enum::<E>}, R>::rendering::<for<'a, 'b, 'c> fn(&'a u8, &'b mut Formatter<'c>) -> std::result::Result<(), std::fmt::Error> {as_u8_enum::<E>}>(move _2, as_u8_enum::<E>) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_2);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
