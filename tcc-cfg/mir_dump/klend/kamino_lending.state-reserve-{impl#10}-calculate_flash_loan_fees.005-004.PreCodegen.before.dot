digraph Mir_0_1967 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveFees::calculate_flash_loan_fees(_1: &amp;ReErased state::reserve::ReserveFees, _2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _3: u16, _4: bool) -&gt; std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt;<br align="left"/>let _5: u64;<br align="left"/>let _6: u64;<br align="left"/>let mut _7: (u64, u64);<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, (u64, u64)&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _11: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: state::reserve::FeeCalculation;<br align="left"/>let mut _14: u16;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: (u64, u64);<br align="left"/>let mut _21: (u64, u64);<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug flash_loan_amount_f =&gt; _2;<br align="left"/>debug referral_fee_bps =&gt; _3;<br align="left"/>debug has_referrer =&gt; _4;<br align="left"/>debug protocol_fee =&gt; _5;<br align="left"/>debug referral_fee =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>>;
    bb0__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = _2<br/>StorageLive(_12)<br/>_12 = ((*_1).1: u64)<br/>StorageLive(_13)<br/>_13 = reserve::FeeCalculation::Exclusive<br/>StorageLive(_14)<br/>_14 = _3<br/>StorageLive(_15)<br/>_15 = _4<br/></td></tr><tr><td align="left">_9 = ReserveFees::calculate_fees(move _10, move _11, move _12, move _13, move _14, move _15)</td></tr></table>>];
    bb1__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_16 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_8 as Continue).0: (u64, u64))<br/>_7 = _20<br/>StorageDead(_20)<br/>StorageLive(_5)<br/>_5 = (_7.0: u64)<br/>StorageLive(_6)<br/>_6 = (_7.1: u64)<br/>_24 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _5<br/>StorageLive(_23)<br/>_23 = _6<br/>_21 = (move _22, move _23)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>_0 = std::result::Result::&lt;(u64, u64), anchor_lang::error::Error&gt;::Ok(move _21)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_26 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb9__0_1967 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left" balign="left">_28 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1967 -> bb1__0_1967 [label="return"];
    bb1__0_1967 -> bb2__0_1967 [label="return"];
    bb1__0_1967 -> bb8__0_1967 [label="unwind"];
    bb2__0_1967 -> bb3__0_1967 [label="0"];
    bb2__0_1967 -> bb5__0_1967 [label="1"];
    bb2__0_1967 -> bb4__0_1967 [label="otherwise"];
    bb3__0_1967 -> bb7__0_1967 [label=""];
    bb5__0_1967 -> bb6__0_1967 [label="return"];
    bb5__0_1967 -> bb9__0_1967 [label="unwind"];
    bb6__0_1967 -> bb7__0_1967 [label=""];
    bb9__0_1967 -> bb8__0_1967 [label=""];
}
