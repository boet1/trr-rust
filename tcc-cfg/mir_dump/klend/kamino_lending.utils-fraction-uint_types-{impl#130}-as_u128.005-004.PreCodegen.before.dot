digraph Mir_0_11846 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::as_u128(_1: &amp;ReErased utils::fraction::uint_types::U128) -&gt; u128<br align="left"/>let _2: &amp;ReErased [u64; 2_usize];<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _5: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _6: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _7: ();<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _10: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _12: isize;<br align="left"/>let mut _13: !;<br align="left"/>let _14: usize;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u64;<br align="left"/>let _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: !;<br align="left"/>let _21: !;<br align="left"/>let mut _22: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _23: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _25: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _26: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _27: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug arr =&gt; _2;<br align="left"/>debug iter =&gt; _6;<br align="left"/>debug i =&gt; _14;<br align="left"/>>;
    bb0__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;((*_1).0: [u64; 2])<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = std::ops::Range::&lt;usize&gt; { start: const 2_usize, end: const 2_usize }<br/></td></tr><tr><td align="left">_4 = &lt;std::ops::Range&lt;usize&gt; as IntoIterator&gt;::into_iter(move _5)</td></tr></table>>];
    bb1__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>_6 = move _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut _6<br/>_10 = &amp;mut (*_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::ops::Range&lt;usize&gt; as Iterator&gt;::next(move _10)</td></tr></table>>];
    bb3__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Some).0: usize)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _14<br/>_18 = Len((*_2))<br/>_19 = Lt(_17, _18)<br/></td></tr><tr><td align="left">assert(move _19, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _18, _17)</td></tr></table>>];
    bb5__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_3 = const ()<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_27)<br/>_27 = &amp;(*_1)<br/></td></tr><tr><td align="left">_0 = uint_types::U128::low_u128(move _27)</td></tr></table>>];
    bb7__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_16 = (*_2)[_17]<br/>_15 = Ne(move _16, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb8__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_28 = const _<br/>_25 = &amp;(*_28)<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = Arguments::&lt;'_&gt;::new_const(move _23)</td></tr></table>>];
    bb9__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = panic_fmt(move _22)</td></tr></table>>];
    bb10__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>_8 = const ()<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>_7 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_11846 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11846 -> bb1__0_11846 [label="return"];
    bb1__0_11846 -> bb2__0_11846 [label=""];
    bb2__0_11846 -> bb3__0_11846 [label="return"];
    bb3__0_11846 -> bb6__0_11846 [label="0"];
    bb3__0_11846 -> bb4__0_11846 [label="1"];
    bb3__0_11846 -> bb5__0_11846 [label="otherwise"];
    bb4__0_11846 -> bb7__0_11846 [label="success"];
    bb6__0_11846 -> bb11__0_11846 [label="return"];
    bb7__0_11846 -> bb10__0_11846 [label="0"];
    bb7__0_11846 -> bb8__0_11846 [label="otherwise"];
    bb8__0_11846 -> bb9__0_11846 [label="return"];
    bb10__0_11846 -> bb2__0_11846 [label=""];
}
