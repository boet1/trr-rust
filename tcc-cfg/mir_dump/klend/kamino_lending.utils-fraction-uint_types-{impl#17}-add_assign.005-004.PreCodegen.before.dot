digraph Mir_0_11462 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;uint_types::U256 as AddAssign&gt;::add_assign(_1: &amp;ReErased mut utils::fraction::uint_types::U256, _2: utils::fraction::uint_types::U256) -&gt; ()<br align="left"/>let _3: utils::fraction::uint_types::U256;<br align="left"/>let _4: bool;<br align="left"/>let mut _5: (utils::fraction::uint_types::U256, bool);<br align="left"/>let mut _6: utils::fraction::uint_types::U256;<br align="left"/>let mut _7: utils::fraction::uint_types::U256;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: !;<br align="left"/>let _11: !;<br align="left"/>let mut _12: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _14: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _15: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _16: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _17: utils::fraction::uint_types::U256;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug result =&gt; _3;<br align="left"/>debug overflow =&gt; _4;<br align="left"/>>;
    bb0__0_11462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = (*_1)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_5 = uint_types::U256::overflowing_add(move _6, move _7)</td></tr></table>>];
    bb1__0_11462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_3)<br/>_3 = (_5.0: utils::fraction::uint_types::U256)<br/>StorageLive(_4)<br/>_4 = (_5.1: bool)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb2__0_11462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_18 = const _<br/>_15 = &amp;(*_18)<br/>_14 = &amp;(*_15)<br/>_13 = move _14 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = Arguments::&lt;'_&gt;::new_const(move _13)</td></tr></table>>];
    bb3__0_11462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = panic_fmt(move _12)</td></tr></table>>];
    bb4__0_11462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_17)<br/>_17 = _3<br/>(*_1) = move _17<br/>_0 = const ()<br/>StorageDead(_17)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11462 -> bb1__0_11462 [label="return"];
    bb1__0_11462 -> bb4__0_11462 [label="0"];
    bb1__0_11462 -> bb2__0_11462 [label="otherwise"];
    bb2__0_11462 -> bb3__0_11462 [label="return"];
}
