// MIR for `state::<impl at programs\klend\src\state\mod.rs:89:5: 89:15>::from_str` after PreCodegen

fn state::<impl at programs\klend\src\state\mod.rs:89:5: 89:15>::from_str(_1: &str) -> std::result::Result<state::UpdateConfigMode, strum::ParseError> {
    debug s => _1;
    let mut _0: std::result::Result<state::UpdateConfigMode, strum::ParseError>;
    let mut _2: bool;
    let mut _3: bool;
    let mut _4: bool;
    let mut _5: bool;
    let mut _6: bool;
    let mut _7: bool;
    let mut _8: bool;
    let mut _9: bool;
    let mut _10: bool;
    let mut _11: bool;
    let mut _12: bool;
    let mut _13: bool;
    let mut _14: bool;
    let mut _15: bool;
    let mut _16: bool;
    let mut _17: bool;
    let mut _18: bool;
    let mut _19: bool;
    let mut _20: bool;
    let mut _21: bool;
    let mut _22: bool;
    let mut _23: bool;
    let mut _24: bool;
    let mut _25: bool;
    let mut _26: bool;
    let mut _27: bool;
    let mut _28: bool;
    let mut _29: bool;
    let mut _30: bool;
    let mut _31: bool;
    let mut _32: bool;
    let mut _33: bool;
    let mut _34: bool;
    let mut _35: bool;
    let mut _36: bool;
    let mut _37: bool;
    let mut _38: bool;
    let mut _39: bool;
    let mut _40: bool;
    let mut _41: bool;
    let mut _42: bool;
    let mut _43: bool;
    let mut _44: bool;
    let mut _45: bool;
    let mut _46: bool;
    let mut _47: bool;
    let mut _48: bool;
    let mut _49: bool;
    let mut _50: bool;
    let mut _51: bool;
    let mut _52: state::UpdateConfigMode;
    let mut _53: state::UpdateConfigMode;
    let mut _54: state::UpdateConfigMode;
    let mut _55: state::UpdateConfigMode;
    let mut _56: state::UpdateConfigMode;
    let mut _57: state::UpdateConfigMode;
    let mut _58: state::UpdateConfigMode;
    let mut _59: state::UpdateConfigMode;
    let mut _60: state::UpdateConfigMode;
    let mut _61: state::UpdateConfigMode;
    let mut _62: state::UpdateConfigMode;
    let mut _63: state::UpdateConfigMode;
    let mut _64: state::UpdateConfigMode;
    let mut _65: state::UpdateConfigMode;
    let mut _66: state::UpdateConfigMode;
    let mut _67: state::UpdateConfigMode;
    let mut _68: state::UpdateConfigMode;
    let mut _69: state::UpdateConfigMode;
    let mut _70: state::UpdateConfigMode;
    let mut _71: state::UpdateConfigMode;
    let mut _72: state::UpdateConfigMode;
    let mut _73: state::UpdateConfigMode;
    let mut _74: state::UpdateConfigMode;
    let mut _75: state::UpdateConfigMode;
    let mut _76: state::UpdateConfigMode;
    let mut _77: state::UpdateConfigMode;
    let mut _78: state::UpdateConfigMode;
    let mut _79: state::UpdateConfigMode;
    let mut _80: state::UpdateConfigMode;
    let mut _81: state::UpdateConfigMode;
    let mut _82: state::UpdateConfigMode;
    let mut _83: state::UpdateConfigMode;
    let mut _84: state::UpdateConfigMode;
    let mut _85: state::UpdateConfigMode;
    let mut _86: state::UpdateConfigMode;
    let mut _87: state::UpdateConfigMode;
    let mut _88: state::UpdateConfigMode;
    let mut _89: state::UpdateConfigMode;
    let mut _90: state::UpdateConfigMode;
    let mut _91: state::UpdateConfigMode;
    let mut _92: state::UpdateConfigMode;
    let mut _93: state::UpdateConfigMode;
    let mut _94: state::UpdateConfigMode;
    let mut _95: state::UpdateConfigMode;
    let mut _96: state::UpdateConfigMode;
    let mut _97: state::UpdateConfigMode;
    let mut _98: state::UpdateConfigMode;
    let mut _99: state::UpdateConfigMode;
    let mut _100: state::UpdateConfigMode;
    let mut _101: state::UpdateConfigMode;
    let mut _102: strum::ParseError;

    bb0: {
        _2 = <str as PartialEq>::eq(_1, const "UpdateLoanToValuePct") -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _2) -> [0: bb2, otherwise: bb101];
    }

    bb2: {
        _3 = <str as PartialEq>::eq(_1, const "UpdateMaxLiquidationBonusBps") -> [return: bb3, unwind continue];
    }

    bb3: {
        switchInt(move _3) -> [0: bb4, otherwise: bb102];
    }

    bb4: {
        _4 = <str as PartialEq>::eq(_1, const "UpdateLiquidationThresholdPct") -> [return: bb5, unwind continue];
    }

    bb5: {
        switchInt(move _4) -> [0: bb6, otherwise: bb103];
    }

    bb6: {
        _5 = <str as PartialEq>::eq(_1, const "UpdateProtocolLiquidationFee") -> [return: bb7, unwind continue];
    }

    bb7: {
        switchInt(move _5) -> [0: bb8, otherwise: bb104];
    }

    bb8: {
        _6 = <str as PartialEq>::eq(_1, const "UpdateProtocolTakeRate") -> [return: bb9, unwind continue];
    }

    bb9: {
        switchInt(move _6) -> [0: bb10, otherwise: bb105];
    }

    bb10: {
        _7 = <str as PartialEq>::eq(_1, const "UpdateFeesBorrowFee") -> [return: bb11, unwind continue];
    }

    bb11: {
        switchInt(move _7) -> [0: bb12, otherwise: bb106];
    }

    bb12: {
        _8 = <str as PartialEq>::eq(_1, const "UpdateFeesFlashLoanFee") -> [return: bb13, unwind continue];
    }

    bb13: {
        switchInt(move _8) -> [0: bb14, otherwise: bb107];
    }

    bb14: {
        _9 = <str as PartialEq>::eq(_1, const "DeprecatedUpdateFeesReferralFeeBps") -> [return: bb15, unwind continue];
    }

    bb15: {
        switchInt(move _9) -> [0: bb16, otherwise: bb108];
    }

    bb16: {
        _10 = <str as PartialEq>::eq(_1, const "UpdateDepositLimit") -> [return: bb17, unwind continue];
    }

    bb17: {
        switchInt(move _10) -> [0: bb18, otherwise: bb109];
    }

    bb18: {
        _11 = <str as PartialEq>::eq(_1, const "UpdateBorrowLimit") -> [return: bb19, unwind continue];
    }

    bb19: {
        switchInt(move _11) -> [0: bb20, otherwise: bb110];
    }

    bb20: {
        _12 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoLowerHeuristic") -> [return: bb21, unwind continue];
    }

    bb21: {
        switchInt(move _12) -> [0: bb22, otherwise: bb111];
    }

    bb22: {
        _13 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoUpperHeuristic") -> [return: bb23, unwind continue];
    }

    bb23: {
        switchInt(move _13) -> [0: bb24, otherwise: bb112];
    }

    bb24: {
        _14 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoExpHeuristic") -> [return: bb25, unwind continue];
    }

    bb25: {
        switchInt(move _14) -> [0: bb26, otherwise: bb113];
    }

    bb26: {
        _15 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoTwapDivergence") -> [return: bb27, unwind continue];
    }

    bb27: {
        switchInt(move _15) -> [0: bb28, otherwise: bb114];
    }

    bb28: {
        _16 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoScopeTwap") -> [return: bb29, unwind continue];
    }

    bb29: {
        switchInt(move _16) -> [0: bb30, otherwise: bb115];
    }

    bb30: {
        _17 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoScopeChain") -> [return: bb31, unwind continue];
    }

    bb31: {
        switchInt(move _17) -> [0: bb32, otherwise: bb116];
    }

    bb32: {
        _18 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoName") -> [return: bb33, unwind continue];
    }

    bb33: {
        switchInt(move _18) -> [0: bb34, otherwise: bb117];
    }

    bb34: {
        _19 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoPriceMaxAge") -> [return: bb35, unwind continue];
    }

    bb35: {
        switchInt(move _19) -> [0: bb36, otherwise: bb118];
    }

    bb36: {
        _20 = <str as PartialEq>::eq(_1, const "UpdateTokenInfoTwapMaxAge") -> [return: bb37, unwind continue];
    }

    bb37: {
        switchInt(move _20) -> [0: bb38, otherwise: bb119];
    }

    bb38: {
        _21 = <str as PartialEq>::eq(_1, const "UpdateScopePriceFeed") -> [return: bb39, unwind continue];
    }

    bb39: {
        switchInt(move _21) -> [0: bb40, otherwise: bb120];
    }

    bb40: {
        _22 = <str as PartialEq>::eq(_1, const "UpdatePythPrice") -> [return: bb41, unwind continue];
    }

    bb41: {
        switchInt(move _22) -> [0: bb42, otherwise: bb121];
    }

    bb42: {
        _23 = <str as PartialEq>::eq(_1, const "UpdateSwitchboardFeed") -> [return: bb43, unwind continue];
    }

    bb43: {
        switchInt(move _23) -> [0: bb44, otherwise: bb122];
    }

    bb44: {
        _24 = <str as PartialEq>::eq(_1, const "UpdateSwitchboardTwapFeed") -> [return: bb45, unwind continue];
    }

    bb45: {
        switchInt(move _24) -> [0: bb46, otherwise: bb123];
    }

    bb46: {
        _25 = <str as PartialEq>::eq(_1, const "UpdateBorrowRateCurve") -> [return: bb47, unwind continue];
    }

    bb47: {
        switchInt(move _25) -> [0: bb48, otherwise: bb124];
    }

    bb48: {
        _26 = <str as PartialEq>::eq(_1, const "UpdateEntireReserveConfig") -> [return: bb49, unwind continue];
    }

    bb49: {
        switchInt(move _26) -> [0: bb50, otherwise: bb125];
    }

    bb50: {
        _27 = <str as PartialEq>::eq(_1, const "UpdateDebtWithdrawalCap") -> [return: bb51, unwind continue];
    }

    bb51: {
        switchInt(move _27) -> [0: bb52, otherwise: bb126];
    }

    bb52: {
        _28 = <str as PartialEq>::eq(_1, const "UpdateDepositWithdrawalCap") -> [return: bb53, unwind continue];
    }

    bb53: {
        switchInt(move _28) -> [0: bb54, otherwise: bb127];
    }

    bb54: {
        _29 = <str as PartialEq>::eq(_1, const "DeprecatedUpdateDebtWithdrawalCapCurrentTotal") -> [return: bb55, unwind continue];
    }

    bb55: {
        switchInt(move _29) -> [0: bb56, otherwise: bb128];
    }

    bb56: {
        _30 = <str as PartialEq>::eq(_1, const "DeprecatedUpdateDepositWithdrawalCapCurrentTotal") -> [return: bb57, unwind continue];
    }

    bb57: {
        switchInt(move _30) -> [0: bb58, otherwise: bb129];
    }

    bb58: {
        _31 = <str as PartialEq>::eq(_1, const "UpdateBadDebtLiquidationBonusBps") -> [return: bb59, unwind continue];
    }

    bb59: {
        switchInt(move _31) -> [0: bb60, otherwise: bb130];
    }

    bb60: {
        _32 = <str as PartialEq>::eq(_1, const "UpdateMinLiquidationBonusBps") -> [return: bb61, unwind continue];
    }

    bb61: {
        switchInt(move _32) -> [0: bb62, otherwise: bb131];
    }

    bb62: {
        _33 = <str as PartialEq>::eq(_1, const "UpdateDeleveragingMarginCallPeriod") -> [return: bb63, unwind continue];
    }

    bb63: {
        switchInt(move _33) -> [0: bb64, otherwise: bb132];
    }

    bb64: {
        _34 = <str as PartialEq>::eq(_1, const "UpdateBorrowFactor") -> [return: bb65, unwind continue];
    }

    bb65: {
        switchInt(move _34) -> [0: bb66, otherwise: bb133];
    }

    bb66: {
        _35 = <str as PartialEq>::eq(_1, const "UpdateAssetTier") -> [return: bb67, unwind continue];
    }

    bb67: {
        switchInt(move _35) -> [0: bb68, otherwise: bb134];
    }

    bb68: {
        _36 = <str as PartialEq>::eq(_1, const "UpdateElevationGroup") -> [return: bb69, unwind continue];
    }

    bb69: {
        switchInt(move _36) -> [0: bb70, otherwise: bb135];
    }

    bb70: {
        _37 = <str as PartialEq>::eq(_1, const "UpdateDeleveragingThresholdDecreaseBpsPerDay") -> [return: bb71, unwind continue];
    }

    bb71: {
        switchInt(move _37) -> [0: bb72, otherwise: bb136];
    }

    bb72: {
        _38 = <str as PartialEq>::eq(_1, const "DeprecatedUpdateMultiplierSideBoost") -> [return: bb73, unwind continue];
    }

    bb73: {
        switchInt(move _38) -> [0: bb74, otherwise: bb137];
    }

    bb74: {
        _39 = <str as PartialEq>::eq(_1, const "DeprecatedUpdateMultiplierTagBoost") -> [return: bb75, unwind continue];
    }

    bb75: {
        switchInt(move _39) -> [0: bb76, otherwise: bb138];
    }

    bb76: {
        _40 = <str as PartialEq>::eq(_1, const "UpdateReserveStatus") -> [return: bb77, unwind continue];
    }

    bb77: {
        switchInt(move _40) -> [0: bb78, otherwise: bb139];
    }

    bb78: {
        _41 = <str as PartialEq>::eq(_1, const "UpdateFarmCollateral") -> [return: bb79, unwind continue];
    }

    bb79: {
        switchInt(move _41) -> [0: bb80, otherwise: bb140];
    }

    bb80: {
        _42 = <str as PartialEq>::eq(_1, const "UpdateFarmDebt") -> [return: bb81, unwind continue];
    }

    bb81: {
        switchInt(move _42) -> [0: bb82, otherwise: bb141];
    }

    bb82: {
        _43 = <str as PartialEq>::eq(_1, const "UpdateDisableUsageAsCollateralOutsideEmode") -> [return: bb83, unwind continue];
    }

    bb83: {
        switchInt(move _43) -> [0: bb84, otherwise: bb142];
    }

    bb84: {
        _44 = <str as PartialEq>::eq(_1, const "UpdateBlockBorrowingAboveUtilizationPct") -> [return: bb85, unwind continue];
    }

    bb85: {
        switchInt(move _44) -> [0: bb86, otherwise: bb143];
    }

    bb86: {
        _45 = <str as PartialEq>::eq(_1, const "UpdateBlockPriceUsage") -> [return: bb87, unwind continue];
    }

    bb87: {
        switchInt(move _45) -> [0: bb88, otherwise: bb144];
    }

    bb88: {
        _46 = <str as PartialEq>::eq(_1, const "UpdateBorrowLimitOutsideElevationGroup") -> [return: bb89, unwind continue];
    }

    bb89: {
        switchInt(move _46) -> [0: bb90, otherwise: bb145];
    }

    bb90: {
        _47 = <str as PartialEq>::eq(_1, const "UpdateBorrowLimitsInElevationGroupAgainstThisReserve") -> [return: bb91, unwind continue];
    }

    bb91: {
        switchInt(move _47) -> [0: bb92, otherwise: bb146];
    }

    bb92: {
        _48 = <str as PartialEq>::eq(_1, const "UpdateHostFixedInterestRateBps") -> [return: bb93, unwind continue];
    }

    bb93: {
        switchInt(move _48) -> [0: bb94, otherwise: bb147];
    }

    bb94: {
        _49 = <str as PartialEq>::eq(_1, const "UpdateAutodeleverageEnabled") -> [return: bb95, unwind continue];
    }

    bb95: {
        switchInt(move _49) -> [0: bb96, otherwise: bb148];
    }

    bb96: {
        _50 = <str as PartialEq>::eq(_1, const "UpdateDeleveragingBonusIncreaseBpsPerDay") -> [return: bb97, unwind continue];
    }

    bb97: {
        switchInt(move _50) -> [0: bb98, otherwise: bb149];
    }

    bb98: {
        _51 = <str as PartialEq>::eq(_1, const "UpdateProtocolOrderExecutionFee") -> [return: bb99, unwind continue];
    }

    bb99: {
        switchInt(move _51) -> [0: bb100, otherwise: bb150];
    }

    bb100: {
        StorageLive(_102);
        _102 = VariantNotFound;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Err(move _102);
        StorageDead(_102);
        goto -> bb151;
    }

    bb101: {
        StorageLive(_52);
        _52 = state::UpdateConfigMode::UpdateLoanToValuePct;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _52);
        StorageDead(_52);
        goto -> bb151;
    }

    bb102: {
        StorageLive(_53);
        _53 = state::UpdateConfigMode::UpdateMaxLiquidationBonusBps;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _53);
        StorageDead(_53);
        goto -> bb151;
    }

    bb103: {
        StorageLive(_54);
        _54 = state::UpdateConfigMode::UpdateLiquidationThresholdPct;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _54);
        StorageDead(_54);
        goto -> bb151;
    }

    bb104: {
        StorageLive(_55);
        _55 = state::UpdateConfigMode::UpdateProtocolLiquidationFee;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _55);
        StorageDead(_55);
        goto -> bb151;
    }

    bb105: {
        StorageLive(_56);
        _56 = state::UpdateConfigMode::UpdateProtocolTakeRate;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _56);
        StorageDead(_56);
        goto -> bb151;
    }

    bb106: {
        StorageLive(_57);
        _57 = state::UpdateConfigMode::UpdateFeesBorrowFee;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _57);
        StorageDead(_57);
        goto -> bb151;
    }

    bb107: {
        StorageLive(_58);
        _58 = state::UpdateConfigMode::UpdateFeesFlashLoanFee;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _58);
        StorageDead(_58);
        goto -> bb151;
    }

    bb108: {
        StorageLive(_59);
        _59 = state::UpdateConfigMode::DeprecatedUpdateFeesReferralFeeBps;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _59);
        StorageDead(_59);
        goto -> bb151;
    }

    bb109: {
        StorageLive(_60);
        _60 = state::UpdateConfigMode::UpdateDepositLimit;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _60);
        StorageDead(_60);
        goto -> bb151;
    }

    bb110: {
        StorageLive(_61);
        _61 = state::UpdateConfigMode::UpdateBorrowLimit;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _61);
        StorageDead(_61);
        goto -> bb151;
    }

    bb111: {
        StorageLive(_62);
        _62 = state::UpdateConfigMode::UpdateTokenInfoLowerHeuristic;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _62);
        StorageDead(_62);
        goto -> bb151;
    }

    bb112: {
        StorageLive(_63);
        _63 = state::UpdateConfigMode::UpdateTokenInfoUpperHeuristic;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _63);
        StorageDead(_63);
        goto -> bb151;
    }

    bb113: {
        StorageLive(_64);
        _64 = state::UpdateConfigMode::UpdateTokenInfoExpHeuristic;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _64);
        StorageDead(_64);
        goto -> bb151;
    }

    bb114: {
        StorageLive(_65);
        _65 = state::UpdateConfigMode::UpdateTokenInfoTwapDivergence;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _65);
        StorageDead(_65);
        goto -> bb151;
    }

    bb115: {
        StorageLive(_66);
        _66 = state::UpdateConfigMode::UpdateTokenInfoScopeTwap;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _66);
        StorageDead(_66);
        goto -> bb151;
    }

    bb116: {
        StorageLive(_67);
        _67 = state::UpdateConfigMode::UpdateTokenInfoScopeChain;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _67);
        StorageDead(_67);
        goto -> bb151;
    }

    bb117: {
        StorageLive(_68);
        _68 = state::UpdateConfigMode::UpdateTokenInfoName;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _68);
        StorageDead(_68);
        goto -> bb151;
    }

    bb118: {
        StorageLive(_69);
        _69 = state::UpdateConfigMode::UpdateTokenInfoPriceMaxAge;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _69);
        StorageDead(_69);
        goto -> bb151;
    }

    bb119: {
        StorageLive(_70);
        _70 = state::UpdateConfigMode::UpdateTokenInfoTwapMaxAge;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _70);
        StorageDead(_70);
        goto -> bb151;
    }

    bb120: {
        StorageLive(_71);
        _71 = state::UpdateConfigMode::UpdateScopePriceFeed;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _71);
        StorageDead(_71);
        goto -> bb151;
    }

    bb121: {
        StorageLive(_72);
        _72 = state::UpdateConfigMode::UpdatePythPrice;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _72);
        StorageDead(_72);
        goto -> bb151;
    }

    bb122: {
        StorageLive(_73);
        _73 = state::UpdateConfigMode::UpdateSwitchboardFeed;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _73);
        StorageDead(_73);
        goto -> bb151;
    }

    bb123: {
        StorageLive(_74);
        _74 = state::UpdateConfigMode::UpdateSwitchboardTwapFeed;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _74);
        StorageDead(_74);
        goto -> bb151;
    }

    bb124: {
        StorageLive(_75);
        _75 = state::UpdateConfigMode::UpdateBorrowRateCurve;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _75);
        StorageDead(_75);
        goto -> bb151;
    }

    bb125: {
        StorageLive(_76);
        _76 = state::UpdateConfigMode::UpdateEntireReserveConfig;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _76);
        StorageDead(_76);
        goto -> bb151;
    }

    bb126: {
        StorageLive(_77);
        _77 = state::UpdateConfigMode::UpdateDebtWithdrawalCap;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _77);
        StorageDead(_77);
        goto -> bb151;
    }

    bb127: {
        StorageLive(_78);
        _78 = state::UpdateConfigMode::UpdateDepositWithdrawalCap;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _78);
        StorageDead(_78);
        goto -> bb151;
    }

    bb128: {
        StorageLive(_79);
        _79 = state::UpdateConfigMode::DeprecatedUpdateDebtWithdrawalCapCurrentTotal;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _79);
        StorageDead(_79);
        goto -> bb151;
    }

    bb129: {
        StorageLive(_80);
        _80 = state::UpdateConfigMode::DeprecatedUpdateDepositWithdrawalCapCurrentTotal;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _80);
        StorageDead(_80);
        goto -> bb151;
    }

    bb130: {
        StorageLive(_81);
        _81 = state::UpdateConfigMode::UpdateBadDebtLiquidationBonusBps;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _81);
        StorageDead(_81);
        goto -> bb151;
    }

    bb131: {
        StorageLive(_82);
        _82 = state::UpdateConfigMode::UpdateMinLiquidationBonusBps;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _82);
        StorageDead(_82);
        goto -> bb151;
    }

    bb132: {
        StorageLive(_83);
        _83 = state::UpdateConfigMode::UpdateDeleveragingMarginCallPeriod;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _83);
        StorageDead(_83);
        goto -> bb151;
    }

    bb133: {
        StorageLive(_84);
        _84 = state::UpdateConfigMode::UpdateBorrowFactor;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _84);
        StorageDead(_84);
        goto -> bb151;
    }

    bb134: {
        StorageLive(_85);
        _85 = state::UpdateConfigMode::UpdateAssetTier;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _85);
        StorageDead(_85);
        goto -> bb151;
    }

    bb135: {
        StorageLive(_86);
        _86 = state::UpdateConfigMode::UpdateElevationGroup;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _86);
        StorageDead(_86);
        goto -> bb151;
    }

    bb136: {
        StorageLive(_87);
        _87 = state::UpdateConfigMode::UpdateDeleveragingThresholdDecreaseBpsPerDay;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _87);
        StorageDead(_87);
        goto -> bb151;
    }

    bb137: {
        StorageLive(_88);
        _88 = state::UpdateConfigMode::DeprecatedUpdateMultiplierSideBoost;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _88);
        StorageDead(_88);
        goto -> bb151;
    }

    bb138: {
        StorageLive(_89);
        _89 = state::UpdateConfigMode::DeprecatedUpdateMultiplierTagBoost;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _89);
        StorageDead(_89);
        goto -> bb151;
    }

    bb139: {
        StorageLive(_90);
        _90 = state::UpdateConfigMode::UpdateReserveStatus;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _90);
        StorageDead(_90);
        goto -> bb151;
    }

    bb140: {
        StorageLive(_91);
        _91 = state::UpdateConfigMode::UpdateFarmCollateral;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _91);
        StorageDead(_91);
        goto -> bb151;
    }

    bb141: {
        StorageLive(_92);
        _92 = state::UpdateConfigMode::UpdateFarmDebt;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _92);
        StorageDead(_92);
        goto -> bb151;
    }

    bb142: {
        StorageLive(_93);
        _93 = state::UpdateConfigMode::UpdateDisableUsageAsCollateralOutsideEmode;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _93);
        StorageDead(_93);
        goto -> bb151;
    }

    bb143: {
        StorageLive(_94);
        _94 = state::UpdateConfigMode::UpdateBlockBorrowingAboveUtilizationPct;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _94);
        StorageDead(_94);
        goto -> bb151;
    }

    bb144: {
        StorageLive(_95);
        _95 = state::UpdateConfigMode::UpdateBlockPriceUsage;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _95);
        StorageDead(_95);
        goto -> bb151;
    }

    bb145: {
        StorageLive(_96);
        _96 = state::UpdateConfigMode::UpdateBorrowLimitOutsideElevationGroup;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _96);
        StorageDead(_96);
        goto -> bb151;
    }

    bb146: {
        StorageLive(_97);
        _97 = state::UpdateConfigMode::UpdateBorrowLimitsInElevationGroupAgainstThisReserve;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _97);
        StorageDead(_97);
        goto -> bb151;
    }

    bb147: {
        StorageLive(_98);
        _98 = state::UpdateConfigMode::UpdateHostFixedInterestRateBps;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _98);
        StorageDead(_98);
        goto -> bb151;
    }

    bb148: {
        StorageLive(_99);
        _99 = state::UpdateConfigMode::UpdateAutodeleverageEnabled;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _99);
        StorageDead(_99);
        goto -> bb151;
    }

    bb149: {
        StorageLive(_100);
        _100 = state::UpdateConfigMode::UpdateDeleveragingBonusIncreaseBpsPerDay;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _100);
        StorageDead(_100);
        goto -> bb151;
    }

    bb150: {
        StorageLive(_101);
        _101 = state::UpdateConfigMode::UpdateProtocolOrderExecutionFee;
        _0 = std::result::Result::<state::UpdateConfigMode, strum::ParseError>::Ok(move _101);
        StorageDead(_101);
        goto -> bb151;
    }

    bb151: {
        return;
    }
}
