// MIR for `state::<impl at programs\klend\src\state\mod.rs:54:1: 54:30>::to_raw_bytes` before PreCodegen

fn state::<impl at programs\klend\src\state\mod.rs:54:1: 54:30>::to_raw_bytes(_1: &UpdateReserveConfigValue) -> Vec<u8> {
    debug self => _1;
    let mut _0: std::vec::Vec<u8>;
    let mut _2: isize;
    let _3: &bool;
    let mut _4: std::boxed::Box<[u8]>;
    let mut _5: std::boxed::Box<[u8; 1]>;
    let mut _6: usize;
    let mut _7: usize;
    let mut _8: *mut u8;
    let mut _9: std::boxed::Box<[u8; 1]>;
    let mut _10: u8;
    let mut _11: bool;
    let _12: &u8;
    let mut _13: std::boxed::Box<[u8]>;
    let mut _14: std::boxed::Box<[u8; 1]>;
    let mut _15: usize;
    let mut _16: usize;
    let mut _17: *mut u8;
    let mut _18: std::boxed::Box<[u8; 1]>;
    let mut _19: u8;
    let _20: &u16;
    let mut _21: &[u8];
    let mut _22: &[u8; 2];
    let _23: [u8; 2];
    let mut _24: u16;
    let _25: &u64;
    let mut _26: &[u8];
    let mut _27: &[u8; 8];
    let _28: [u8; 8];
    let mut _29: u64;
    let _30: &anchor_lang::prelude::Pubkey;
    let mut _31: &[u8];
    let _32: &[u8];
    let mut _33: &anchor_lang::prelude::Pubkey;
    let _34: &[u16; 4];
    let mut _35: &[[u8; 2]];
    let mut _36: &[[u8; 2]; 4];
    let _37: [[u8; 2]; 4];
    let mut _38: [u16; 4];
    let mut _39: {closure@programs\klend\src\state\mod.rs:66:70: 66:73};
    let _40: &[u8; 32];
    let mut _41: &[u8];
    let mut _42: &[u8; 32];
    let _43: &std::boxed::Box<state::reserve::ReserveConfig>;
    let mut _44: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _45: &std::boxed::Box<state::reserve::ReserveConfig>;
    let _46: &utils::borrow_rate_curve::BorrowRateCurve;
    let mut _47: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _48: &utils::borrow_rate_curve::BorrowRateCurve;
    let _49: &u64;
    let _50: &u64;
    let mut _51: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _52: &(u64, u64);
    let _53: (u64, u64);
    let mut _54: u64;
    let mut _55: u64;
    let _56: &[u8; 20];
    let mut _57: &[u8];
    let mut _58: &[u8; 20];
    let _59: &u8;
    let _60: &u8;
    let mut _61: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _62: &(u8, u8);
    let _63: (u8, u8);
    let mut _64: u8;
    let mut _65: u8;
    let _66: &[u64; 32];
    let mut _67: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _68: &[u64; 32];
    let mut _69: *const [u8; 1];
    let mut _70: *const [u8; 1];
    scope 1 {
        debug v => _3;
        scope 2 {
        }
    }
    scope 3 {
        debug v => _12;
        scope 4 {
        }
    }
    scope 5 {
        debug v => _20;
    }
    scope 6 {
        debug v => _25;
    }
    scope 7 {
        debug v => _30;
    }
    scope 8 {
        debug chain => _34;
    }
    scope 9 {
        debug v => _40;
    }
    scope 10 {
        debug config => _43;
    }
    scope 11 {
        debug curve => _46;
    }
    scope 12 {
        debug cap => _49;
        debug interval => _50;
    }
    scope 13 {
        debug groups => _56;
    }
    scope 14 {
        debug mode => _59;
        debug value => _60;
    }
    scope 15 {
        debug e => _66;
    }

    bb0: {
        _2 = discriminant((*_1));
        switchInt(move _2) -> [0: bb3, 1: bb6, 2: bb34, 3: bb9, 4: bb12, 5: bb15, 6: bb18, 7: bb21, 8: bb26, 9: bb23, 10: bb29, 11: bb32, 12: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_66);
        _66 = &(((*_1) as ElevationGroupBorrowLimits).0: [u64; 32]);
        StorageLive(_67);
        StorageLive(_68);
        _68 = &(*_66);
        _67 = <[u64; 32] as BorshSerialize>::try_to_vec(move _68) -> [return: bb37, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_3);
        _3 = &(((*_1) as Bool).0: bool);
        StorageLive(_4);
        StorageLive(_5);
        _6 = SizeOf([u8; 1]);
        _7 = AlignOf([u8; 1]);
        _8 = alloc::alloc::exchange_malloc(move _6, move _7) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_9);
        _9 = ShallowInitBox(move _8, [u8; 1]);
        StorageLive(_10);
        StorageLive(_11);
        _11 = (*_3);
        _10 = move _11 as u8 (IntToInt);
        StorageDead(_11);
        _69 = (((_9.0: std::ptr::Unique<[u8; 1]>).0: std::ptr::NonNull<[u8; 1]>).0: *const [u8; 1]);
        (*_69) = [move _10];
        StorageDead(_10);
        _5 = move _9;
        _4 = move _5 as std::boxed::Box<[u8]> (PointerCoercion(Unsize));
        StorageDead(_9);
        StorageDead(_5);
        _0 = std::slice::<impl [u8]>::into_vec::<std::alloc::Global>(move _4) -> [return: bb5, unwind: bb40];
    }

    bb5: {
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb39;
    }

    bb6: {
        StorageLive(_12);
        _12 = &(((*_1) as U8).0: u8);
        StorageLive(_13);
        StorageLive(_14);
        _15 = SizeOf([u8; 1]);
        _16 = AlignOf([u8; 1]);
        _17 = alloc::alloc::exchange_malloc(move _15, move _16) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_18);
        _18 = ShallowInitBox(move _17, [u8; 1]);
        StorageLive(_19);
        _19 = (*_12);
        _70 = (((_18.0: std::ptr::Unique<[u8; 1]>).0: std::ptr::NonNull<[u8; 1]>).0: *const [u8; 1]);
        (*_70) = [move _19];
        StorageDead(_19);
        _14 = move _18;
        _13 = move _14 as std::boxed::Box<[u8]> (PointerCoercion(Unsize));
        StorageDead(_18);
        StorageDead(_14);
        _0 = std::slice::<impl [u8]>::into_vec::<std::alloc::Global>(move _13) -> [return: bb8, unwind: bb40];
    }

    bb8: {
        StorageDead(_13);
        StorageDead(_12);
        goto -> bb39;
    }

    bb9: {
        StorageLive(_20);
        _20 = &(((*_1) as U16).0: u16);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        _24 = (*_20);
        _23 = core::num::<impl u16>::to_le_bytes(move _24) -> [return: bb10, unwind continue];
    }

    bb10: {
        _22 = &_23;
        _21 = move _22 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_24);
        StorageDead(_22);
        _0 = std::slice::<impl [u8]>::to_vec(move _21) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_20);
        goto -> bb39;
    }

    bb12: {
        StorageLive(_25);
        _25 = &(((*_1) as U64).0: u64);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = (*_25);
        _28 = core::num::<impl u64>::to_le_bytes(move _29) -> [return: bb13, unwind continue];
    }

    bb13: {
        _27 = &_28;
        _26 = move _27 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_29);
        StorageDead(_27);
        _0 = std::slice::<impl [u8]>::to_vec(move _26) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_28);
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb39;
    }

    bb15: {
        StorageLive(_30);
        _30 = &(((*_1) as Pubkey).0: anchor_lang::prelude::Pubkey);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        _33 = &(*_30);
        _32 = <anchor_lang::prelude::Pubkey as AsRef<[u8]>>::as_ref(move _33) -> [return: bb16, unwind continue];
    }

    bb16: {
        _31 = &(*_32);
        StorageDead(_33);
        _0 = std::slice::<impl [u8]>::to_vec(move _31) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_30);
        goto -> bb39;
    }

    bb18: {
        StorageLive(_34);
        _34 = &(((*_1) as ScopeChain).0: [u16; 4]);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = (*_34);
        StorageLive(_39);
        _39 = {closure@programs\klend\src\state\mod.rs:66:70: 66:73};
        _37 = array::<impl [u16; 4]>::map::<{closure@programs\klend\src\state\mod.rs:66:70: 66:73}, [u8; 2]>(move _38, move _39) -> [return: bb19, unwind continue];
    }

    bb19: {
        _36 = &_37;
        _35 = move _36 as &[[u8; 2]] (PointerCoercion(Unsize));
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_36);
        _0 = std::slice::<impl [[u8; 2]]>::concat::<u8>(move _35) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_37);
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb39;
    }

    bb21: {
        StorageLive(_40);
        _40 = &(((*_1) as Name).0: [u8; 32]);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &(*_40);
        _41 = move _42 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_42);
        _0 = std::slice::<impl [u8]>::to_vec(move _41) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb39;
    }

    bb23: {
        StorageLive(_43);
        _43 = &(((*_1) as Full).0: std::boxed::Box<state::reserve::ReserveConfig>);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &(*_43);
        _44 = <Box<reserve::ReserveConfig> as BorshSerialize>::try_to_vec(move _45) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_45);
        _0 = std::result::Result::<Vec<u8>, std::io::Error>::unwrap(move _44) -> [return: bb25, unwind: bb40];
    }

    bb25: {
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb39;
    }

    bb26: {
        StorageLive(_46);
        _46 = &(((*_1) as BorrowRateCurve).0: utils::borrow_rate_curve::BorrowRateCurve);
        StorageLive(_47);
        StorageLive(_48);
        _48 = &(*_46);
        _47 = <BorrowRateCurve as BorshSerialize>::try_to_vec(move _48) -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageDead(_48);
        _0 = std::result::Result::<Vec<u8>, std::io::Error>::unwrap(move _47) -> [return: bb28, unwind: bb40];
    }

    bb28: {
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb39;
    }

    bb29: {
        StorageLive(_49);
        _49 = &(((*_1) as WithdrawalCap).0: u64);
        StorageLive(_50);
        _50 = &(((*_1) as WithdrawalCap).1: u64);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = (*_49);
        StorageLive(_55);
        _55 = (*_50);
        _53 = (move _54, move _55);
        _52 = &_53;
        StorageDead(_55);
        StorageDead(_54);
        _51 = <(u64, u64) as BorshSerialize>::try_to_vec(move _52) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_52);
        _0 = std::result::Result::<Vec<u8>, std::io::Error>::unwrap(move _51) -> [return: bb31, unwind: bb40];
    }

    bb31: {
        StorageDead(_51);
        StorageDead(_53);
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb39;
    }

    bb32: {
        StorageLive(_56);
        _56 = &(((*_1) as ElevationGroups).0: [u8; 20]);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &(*_56);
        _57 = move _58 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_58);
        _0 = std::slice::<impl [u8]>::to_vec(move _57) -> [return: bb33, unwind continue];
    }

    bb33: {
        StorageDead(_57);
        StorageDead(_56);
        goto -> bb39;
    }

    bb34: {
        StorageLive(_59);
        _59 = &(((*_1) as U8Tuple).0: u8);
        StorageLive(_60);
        _60 = &(((*_1) as U8Tuple).1: u8);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = (*_59);
        StorageLive(_65);
        _65 = (*_60);
        _63 = (move _64, move _65);
        _62 = &_63;
        StorageDead(_65);
        StorageDead(_64);
        _61 = <(u8, u8) as BorshSerialize>::try_to_vec(move _62) -> [return: bb35, unwind continue];
    }

    bb35: {
        StorageDead(_62);
        _0 = std::result::Result::<Vec<u8>, std::io::Error>::unwrap(move _61) -> [return: bb36, unwind: bb40];
    }

    bb36: {
        StorageDead(_63);
        StorageDead(_61);
        StorageDead(_60);
        StorageDead(_59);
        goto -> bb39;
    }

    bb37: {
        StorageDead(_68);
        _0 = std::result::Result::<Vec<u8>, std::io::Error>::unwrap(move _67) -> [return: bb38, unwind: bb40];
    }

    bb38: {
        StorageDead(_67);
        StorageDead(_66);
        goto -> bb39;
    }

    bb39: {
        return;
    }

    bb40 (cleanup): {
        resume;
    }
}
