// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate` after PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate(_1: &BorrowRateCurve, _2: FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>) -> std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> {
    debug self => _1;
    debug utilization_rate => _2;
    let mut _0: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let _3: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _4: bool;
    let mut _5: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _6: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _7: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _8: ();
    let mut _9: &str;
    let _10: &str;
    let mut _11: &std::string::String;
    let _12: &std::string::String;
    let _13: std::string::String;
    let _14: std::string::String;
    let mut _15: std::fmt::Arguments<'_>;
    let mut _16: &[&str];
    let mut _17: &[&str; 1];
    let _18: &[&str; 1];
    let _19: [&str; 1];
    let mut _20: &[core::fmt::rt::Argument<'_>];
    let mut _21: &[core::fmt::rt::Argument<'_>; 1];
    let _22: &[core::fmt::rt::Argument<'_>; 1];
    let _23: [core::fmt::rt::Argument<'_>; 1];
    let mut _24: core::fmt::rt::Argument<'_>;
    let mut _25: &u128;
    let _26: &u128;
    let _27: u128;
    let mut _28: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _30: std::option::Option<u32>;
    let mut _31: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _34: (&utils::borrow_rate_curve::CurvePoint, &utils::borrow_rate_curve::CurvePoint);
    let mut _35: std::option::Option<(&utils::borrow_rate_curve::CurvePoint, &utils::borrow_rate_curve::CurvePoint)>;
    let mut _36: &mut std::iter::Map<std::slice::Windows<'_, utils::borrow_rate_curve::CurvePoint>, {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}>;
    let mut _37: std::iter::Map<std::slice::Windows<'_, utils::borrow_rate_curve::CurvePoint>, {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}>;
    let mut _38: std::slice::Windows<'_, utils::borrow_rate_curve::CurvePoint>;
    let mut _39: &[utils::borrow_rate_curve::CurvePoint];
    let mut _40: &[utils::borrow_rate_curve::CurvePoint; 11];
    let mut _41: {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23};
    let mut _42: {closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36};
    let mut _43: &u32;
    let _44: ();
    let mut _45: bool;
    let mut _46: u32;
    let mut _47: u32;
    let mut _48: !;
    let mut _49: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _50: u32;
    let mut _51: bool;
    let mut _52: u32;
    let mut _53: u32;
    let mut _54: !;
    let mut _55: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _56: u32;
    let mut _58: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, utils::borrow_rate_curve::CurveSegment>;
    let mut _59: std::result::Result<utils::borrow_rate_curve::CurveSegment, anchor_lang::error::Error>;
    let mut _60: utils::borrow_rate_curve::CurvePoint;
    let mut _61: utils::borrow_rate_curve::CurvePoint;
    let mut _62: isize;
    let mut _64: !;
    let mut _65: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _67: &utils::borrow_rate_curve::CurveSegment;
    let mut _68: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _69: &[&str; 1];
    let mut _70: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _71: isize;
    let mut _72: isize;
    let mut _73: isize;
    let mut _74: isize;
    let mut _75: isize;
    scope 1 {
        debug utilization_rate => _3;
        let _29: u32;
        scope 3 {
            debug utilization_rate_bps => _29;
            let _32: &utils::borrow_rate_curve::CurvePoint;
            let _33: &utils::borrow_rate_curve::CurvePoint;
            scope 4 {
                debug start_pt => _32;
                debug end_pt => _33;
                let _57: utils::borrow_rate_curve::CurveSegment;
                let _63: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                let _66: utils::borrow_rate_curve::CurveSegment;
                scope 5 {
                    debug segment => _57;
                }
                scope 6 {
                    debug residual => _63;
                    scope 7 {
                    }
                }
                scope 8 {
                    debug val => _66;
                    scope 9 {
                    }
                }
            }
        }
    }
    scope 2 {
        debug res => _14;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &_2;
        StorageLive(_6);
        _70 = const _;
        _6 = &(*_70);
        _4 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::gt(move _5, move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _4) -> [0: bb10, otherwise: bb2];
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _69 = const _;
        _18 = &(*_69);
        _17 = &(*_18);
        _16 = move _17 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_17);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = _2;
        _27 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::to_bits(move _28) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_28);
        _26 = &_27;
        _25 = &(*_26);
        _24 = core::fmt::rt::Argument::<'_>::new_display::<u128>(move _25) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_25);
        _23 = [move _24];
        StorageDead(_24);
        _22 = &_23;
        _21 = &(*_22);
        _20 = move _21 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_21);
        _15 = Arguments::<'_>::new_v1(move _16, move _20) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_20);
        StorageDead(_16);
        _14 = format(move _15) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_15);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_18);
        _13 = move _14;
        StorageDead(_14);
        _12 = &_13;
        _11 = &(*_12);
        _10 = <std::string::String as Deref>::deref(move _11) -> [return: bb7, unwind: bb34];
    }

    bb7: {
        _9 = &(*_10);
        StorageDead(_11);
        _8 = solana_program::log::sol_log(move _9) -> [return: bb8, unwind: bb34];
    }

    bb8: {
        StorageDead(_9);
        drop(_13) -> [return: bb9, unwind: bb35];
    }

    bb9: {
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_8);
        _3 = const _;
        goto -> bb11;
    }

    bb10: {
        StorageDead(_6);
        StorageDead(_5);
        _3 = _2;
        goto -> bb11;
    }

    bb11: {
        StorageDead(_4);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &_3;
        _30 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_bps::<u32>(move _31) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_31);
        _29 = std::option::Option::<u32>::unwrap(move _30) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_30);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &((*_1).0: [utils::borrow_rate_curve::CurvePoint; 11]);
        _39 = move _40 as &[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize));
        StorageDead(_40);
        _38 = core::slice::<impl [CurvePoint]>::windows(move _39, const 2_usize) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_39);
        StorageLive(_41);
        _41 = {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23};
        _37 = <Windows<'_, CurvePoint> as Iterator>::map::<(&CurvePoint, &CurvePoint), {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}>(move _38, move _41) -> [return: bb15, unwind continue];
    }

    bb15: {
        _36 = &mut _37;
        StorageDead(_41);
        StorageDead(_38);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &_29;
        _42 = {closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36} { utilization_rate_bps: move _43 };
        StorageDead(_43);
        _35 = <std::iter::Map<Windows<'_, CurvePoint>, {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}> as Iterator>::find::<{closure@programs\klend\src\utils\borrow_rate_curve.rs:302:19: 302:36}>(move _36, move _42) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_42);
        StorageDead(_36);
        _34 = std::option::Option::<(&CurvePoint, &CurvePoint)>::unwrap(move _35) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_35);
        StorageLive(_32);
        _32 = (_34.0: &utils::borrow_rate_curve::CurvePoint);
        StorageLive(_33);
        _33 = (_34.1: &utils::borrow_rate_curve::CurvePoint);
        StorageDead(_37);
        StorageDead(_34);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _29;
        StorageLive(_47);
        _47 = ((*_32).0: u32);
        _45 = Eq(move _46, move _47);
        switchInt(move _45) -> [0: bb20, otherwise: bb18];
    }

    bb18: {
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_49);
        StorageLive(_50);
        _50 = ((*_32).1: u32);
        _49 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::from_bps::<u32>(move _50) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_50);
        _0 = std::result::Result::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>::Ok(move _49);
        StorageDead(_49);
        goto -> bb31;
    }

    bb20: {
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _29;
        StorageLive(_53);
        _53 = ((*_33).0: u32);
        _51 = Eq(move _52, move _53);
        switchInt(move _51) -> [0: bb23, otherwise: bb21];
    }

    bb21: {
        StorageDead(_53);
        StorageDead(_52);
        StorageLive(_55);
        StorageLive(_56);
        _56 = ((*_33).1: u32);
        _55 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::from_bps::<u32>(move _56) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_56);
        _0 = std::result::Result::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>::Ok(move _55);
        StorageDead(_55);
        StorageDead(_51);
        goto -> bb31;
    }

    bb23: {
        StorageDead(_53);
        StorageDead(_52);
        _44 = const ();
        StorageDead(_51);
        StorageDead(_45);
        StorageDead(_44);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        _60 = (*_32);
        StorageLive(_61);
        _61 = (*_33);
        _59 = CurveSegment::from_points(move _60, move _61) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_61);
        StorageDead(_60);
        _58 = <std::result::Result<CurveSegment, anchor_lang::error::Error> as Try>::branch(move _59) -> [return: bb25, unwind: bb35];
    }

    bb25: {
        StorageDead(_59);
        _62 = discriminant(_58);
        switchInt(move _62) -> [0: bb26, 1: bb28, otherwise: bb27];
    }

    bb26: {
        StorageLive(_66);
        _66 = move ((_58 as Continue).0: utils::borrow_rate_curve::CurveSegment);
        _57 = move _66;
        StorageDead(_66);
        _71 = discriminant(_58);
        StorageDead(_58);
        StorageLive(_67);
        _67 = &_57;
        StorageLive(_68);
        _68 = _3;
        _0 = CurveSegment::get_borrow_rate(move _67, move _68) -> [return: bb30, unwind continue];
    }

    bb27: {
        unreachable;
    }

    bb28: {
        StorageLive(_63);
        _63 = move ((_58 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_65);
        _65 = move _63;
        _0 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _65) -> [return: bb29, unwind: bb36];
    }

    bb29: {
        StorageDead(_65);
        StorageDead(_63);
        _73 = discriminant(_58);
        StorageDead(_58);
        StorageDead(_57);
        goto -> bb32;
    }

    bb30: {
        StorageDead(_68);
        StorageDead(_67);
        StorageDead(_57);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_3);
        goto -> bb33;
    }

    bb31: {
        StorageDead(_45);
        StorageDead(_44);
        goto -> bb32;
    }

    bb32: {
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_3);
        goto -> bb33;
    }

    bb33: {
        return;
    }

    bb34 (cleanup): {
        drop(_13) -> [return: bb35, unwind terminate(cleanup)];
    }

    bb35 (cleanup): {
        resume;
    }

    bb36 (cleanup): {
        _75 = discriminant(_58);
        goto -> bb35;
    }
}
