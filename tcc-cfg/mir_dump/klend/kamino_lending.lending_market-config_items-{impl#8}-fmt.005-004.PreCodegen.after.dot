digraph Mir_0_1052 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;RenderedOption&lt;'a, R, T&gt; as std::fmt::Display&gt;::fmt(_1: &amp;ReErased lending_market::config_items::RenderedOption&lt;ReErased, R/#1, T/#2&gt;, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: &amp;ReErased &amp;ReErased R/#1;<br align="left"/>let _4: &amp;ReErased std::result::Result&lt;std::option::Option&lt;&amp;ReErased T/#2&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: isize;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: &amp;ReErased &amp;ReErased T/#2;<br align="left"/>let mut _8: &amp;ReErased &amp;ReErased R/#1;<br align="left"/>let mut _9: (&amp;ReErased T/#2, &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;);<br align="left"/>let mut _10: &amp;ReErased T/#2;<br align="left"/>let mut _11: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let _15: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let mut _16: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _28: &amp;ReErased &amp;ReErased anchor_lang::error::Error;<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _30: &amp;ReErased T/#2;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug renderer =&gt; _3;<br align="left"/>debug value =&gt; _4;<br align="left"/>debug value =&gt; _7;<br align="left"/>debug error =&gt; _15;<br align="left"/>>;
    bb0__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;((*_1).0: &amp;R)<br/>StorageLive(_4)<br/>_4 = &amp;((*_1).1: std::result::Result&lt;std::option::Option&lt;&amp;T&gt;, anchor_lang::error::Error&gt;)<br/>_6 = discriminant((*_4))<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = discriminant((((*_4) as Ok).0: std::option::Option&lt;&amp;T&gt;))<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = &amp;(((*_4) as Err).0: anchor_lang::error::Error)<br/>StorageLive(_16)<br/>_16 = &amp;mut (*_2)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_29 = const _<br/>_20 = &amp;(*_29)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_15<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;anchor_lang::error::Error&gt;(move _27)</td></tr></table>>];
    bb4__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = &amp;(((((*_4) as Ok).0: std::option::Option&lt;&amp;T&gt;) as Some).0: &amp;T)<br/>StorageLive(_8)<br/>_8 = &amp;(*_3)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_30 = deref_copy (*_7)<br/>_10 = &amp;(*_30)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>_9 = (move _10, move _11)<br/></td></tr><tr><td align="left">_0 = &lt;&amp;R as Fn&lt;(&amp;T, &amp;mut Formatter&lt;'_&gt;)&gt;&gt;::call(move _8, move _9)</td></tr></table>>];
    bb5__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = &amp;mut (*_2)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = const &quot;&lt;not present&gt;&quot;<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_str(move _12, move _13)</td></tr></table>>];
    bb7__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = [move _26]<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_v1(move _18, move _22)</td></tr></table>>];
    bb9__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_fmt(move _16, move _17)</td></tr></table>>];
    bb10__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1052 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1052 -> bb1__0_1052 [label="0"];
    bb0__0_1052 -> bb3__0_1052 [label="1"];
    bb0__0_1052 -> bb2__0_1052 [label="otherwise"];
    bb1__0_1052 -> bb6__0_1052 [label="0"];
    bb1__0_1052 -> bb4__0_1052 [label="1"];
    bb1__0_1052 -> bb2__0_1052 [label="otherwise"];
    bb3__0_1052 -> bb8__0_1052 [label="return"];
    bb4__0_1052 -> bb5__0_1052 [label="return"];
    bb5__0_1052 -> bb11__0_1052 [label=""];
    bb6__0_1052 -> bb7__0_1052 [label="return"];
    bb7__0_1052 -> bb11__0_1052 [label=""];
    bb8__0_1052 -> bb9__0_1052 [label="return"];
    bb9__0_1052 -> bb10__0_1052 [label="return"];
    bb10__0_1052 -> bb11__0_1052 [label=""];
}
