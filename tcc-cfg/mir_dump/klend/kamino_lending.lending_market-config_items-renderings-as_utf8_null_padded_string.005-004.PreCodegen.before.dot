digraph Mir_0_988 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn as_utf8_null_padded_string(_1: &amp;ReErased [u8; N/#0: usize], _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: &amp;ReErased str;<br align="left"/>let mut _4: &amp;ReErased str;<br align="left"/>let _5: &amp;ReErased str;<br align="left"/>let mut _6: std::result::Result&lt;&amp;ReErased str, std::str::Utf8Error&gt;;<br align="left"/>let mut _7: &amp;ReErased [u8];<br align="left"/>let mut _8: &amp;ReErased [u8; N/#0: usize];<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let mut _10: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>debug value =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug str =&gt; _3;<br align="left"/>>;
    bb0__0_988 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/>_7 = move _8 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = from_utf8(move _7)</td></tr></table>>];
    bb1__0_988 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;&amp;str, Utf8Error&gt;::unwrap(move _6)</td></tr></table>>];
    bb2__0_988 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_4 = &amp;(*_5)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_3 = core::str::&lt;impl str&gt;::trim_end_matches::&lt;'_, char&gt;(move _4, const '\0')</td></tr></table>>];
    bb3__0_988 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>_9 = &amp;(*_3)<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_0 = &lt;str as std::fmt::Display&gt;::fmt(move _9, move _10)</td></tr></table>>];
    bb4__0_988 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_988 -> bb1__0_988 [label="return"];
    bb1__0_988 -> bb2__0_988 [label="return"];
    bb2__0_988 -> bb3__0_988 [label="return"];
    bb3__0_988 -> bb4__0_988 [label="return"];
}
