digraph Mir_0_1329 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::socialize_loss(_1: &amp;ReErased mut state::reserve::Reserve, _2: &amp;ReErased anchor_lang::prelude::Pubkey, _3: &amp;ReErased mut state::obligation::Obligation, _4: u64, _5: u64, _6: impl Iterator&lt;Item = T&gt;/#2) -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _10: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _17: bool;<br align="left"/>let mut _18: !;<br align="left"/>let _19: ();<br align="left"/>let mut _20: &amp;ReErased str;<br align="left"/>let _21: &amp;ReErased str;<br align="left"/>let mut _22: &amp;ReErased std::string::String;<br align="left"/>let _23: &amp;ReErased std::string::String;<br align="left"/>let _24: std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let mut _26: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _29: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _30: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _34: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _35: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased u8;<br align="left"/>let _37: &amp;ReErased u8;<br align="left"/>let _38: state::last_update::PriceStatusFlags;<br align="left"/>let mut _39: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _42: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _43: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _44: core::fmt::rt::Placeholder;<br align="left"/>let mut _45: core::fmt::rt::Alignment;<br align="left"/>let mut _46: core::fmt::rt::Count;<br align="left"/>let mut _47: core::fmt::rt::Count;<br align="left"/>let mut _48: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _49: anchor_lang::error::Error;<br align="left"/>let mut _50: LendingError;<br align="left"/>let _51: ();<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _54: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _61: bool;<br align="left"/>let mut _62: !;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _74: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased u8;<br align="left"/>let _81: &amp;ReErased u8;<br align="left"/>let _82: state::last_update::PriceStatusFlags;<br align="left"/>let mut _83: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Placeholder;<br align="left"/>let mut _89: core::fmt::rt::Alignment;<br align="left"/>let mut _90: core::fmt::rt::Count;<br align="left"/>let mut _91: core::fmt::rt::Count;<br align="left"/>let mut _92: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _93: anchor_lang::error::Error;<br align="left"/>let mut _94: LendingError;<br align="left"/>let _95: ();<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _98: !;<br align="left"/>let _99: ();<br align="left"/>let mut _100: &amp;ReErased str;<br align="left"/>let _101: &amp;ReErased str;<br align="left"/>let mut _102: anchor_lang::error::Error;<br align="left"/>let mut _103: LendingError;<br align="left"/>let _104: ();<br align="left"/>let mut _105: bool;<br align="left"/>let mut _106: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _109: !;<br align="left"/>let _110: ();<br align="left"/>let mut _111: &amp;ReErased str;<br align="left"/>let _112: &amp;ReErased str;<br align="left"/>let mut _113: anchor_lang::error::Error;<br align="left"/>let mut _114: LendingError;<br align="left"/>let _115: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _116: usize;<br align="left"/>let mut _117: (&amp;ReErased state::obligation::ObligationLiquidity, usize);<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, (&amp;ReErased state::obligation::ObligationLiquidity, usize)&gt;;<br align="left"/>let mut _119: std::result::Result&lt;(&amp;ReErased state::obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;;<br align="left"/>let mut _120: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _121: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _126: (&amp;ReErased state::obligation::ObligationLiquidity, usize);<br align="left"/>let _127: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _128: u64;<br align="left"/>let _129: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _130: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _131: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _132: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _133: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _134: ();<br align="left"/>let mut _135: bool;<br align="left"/>let mut _136: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _137: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _138: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _139: &amp;ReErased state::reserve::ReserveLiquidity;<br align="left"/>let _140: ();<br align="left"/>let mut _141: &amp;ReErased str;<br align="left"/>let _142: &amp;ReErased str;<br align="left"/>let _143: ();<br align="left"/>let mut _144: &amp;ReErased str;<br align="left"/>let _145: &amp;ReErased str;<br align="left"/>let mut _146: &amp;ReErased std::string::String;<br align="left"/>let _147: &amp;ReErased std::string::String;<br align="left"/>let _148: std::string::String;<br align="left"/>let _149: std::string::String;<br align="left"/>let mut _150: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _152: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _153: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _154: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _157: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _158: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _159: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _161: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _162: ();<br align="left"/>let mut _163: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _164: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _165: u64;<br align="left"/>let mut _166: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _167: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _168: usize;<br align="left"/>let mut _169: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _170: impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _175: ();<br align="left"/>let _176: ();<br align="left"/>let mut _177: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _178: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _179: ();<br align="left"/>let mut _180: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _181: ();<br align="left"/>let mut _182: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _183: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _184: usize;<br align="left"/>let _185: ();<br align="left"/>let mut _186: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let _187: ();<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _190: bool;<br align="left"/>let mut _191: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _192: bool;<br align="left"/>let _193: ();<br align="left"/>let mut _194: &amp;ReErased str;<br align="left"/>let _195: &amp;ReErased str;<br align="left"/>let _196: ();<br align="left"/>let mut _197: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _198: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _200: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _201: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _202: bool;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug reserve_pk =&gt; _2;<br align="left"/>debug obligation =&gt; _3;<br align="left"/>debug liquidity_amount =&gt; _4;<br align="left"/>debug slot =&gt; _5;<br align="left"/>debug deposit_reserves_iter =&gt; _6;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug res =&gt; _25;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug liquidity =&gt; _115;<br align="left"/>debug liquidity_index =&gt; _116;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug liquidity_amount_f =&gt; _127;<br align="left"/>debug borrowed_amount_f =&gt; _129;<br align="left"/>debug forgive_amount_f =&gt; _131;<br align="left"/>debug res =&gt; _149;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug obligation_had_orders =&gt; _190;<br align="left"/>>;
    bb0__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_202 = const false<br/>_202 = const true<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_12)<br/>_12 = _5<br/></td></tr><tr><td align="left">_10 = last_update::LastUpdate::is_stale(move _11, move _12, const _)</td></tr></table>>];
    bb1__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: bool)<br/>_8 = _17<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_16)<br/>_16 = move _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_221 = discriminant(_9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_37 = &amp;(_38.0: u8)<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _36)</td></tr></table>>];
    bb8__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = [move _35]<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_46)<br/>_46 = core::fmt::rt::Count::Implied<br/>StorageLive(_47)<br/>_47 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_44 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _45, const 8_u32, move _46, move _47)</td></tr></table>>];
    bb9__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>_43 = [move _44]<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/>StorageLive(_48)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb10__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">_26 = Arguments::&lt;'_&gt;::new_v1_formatted(move _27, move _31, move _40, move _48)</td></tr></table>>];
    bb11__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_40)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = format(move _26)</td></tr></table>>];
    bb12__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>_24 = move _25<br/>StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::string::String as Deref&gt;::deref(move _22)</td></tr></table>>];
    bb13__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_20 = &amp;(*_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_19 = solana_program::log::sol_log(move _20)</td></tr></table>>];
    bb14__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb15__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_49 = &lt;LendingError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _50)</td></tr></table>>];
    bb16__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Err(move _49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb18__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_57 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb19__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_53 as Continue).0: bool)<br/>_52 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb20__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_60)<br/>_60 = move _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb21__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>_219 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = &amp;(_82.0: u8)<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _80)</td></tr></table>>];
    bb23__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_90)<br/>_90 = core::fmt::rt::Count::Implied<br/>StorageLive(_91)<br/>_91 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _89, const 8_u32, move _90, move _91)</td></tr></table>>];
    bb24__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/>StorageLive(_92)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb25__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1_formatted(move _71, move _75, move _84, move _92)</td></tr></table>>];
    bb26__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb27__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::string::String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb28__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb29__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb30__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = LendingError::ObligationStale<br/></td></tr><tr><td align="left">_93 = &lt;LendingError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _94)</td></tr></table>>];
    bb31__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Err(move _93)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb33__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_95 = const ()<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;(*_3)<br/></td></tr><tr><td align="left">_105 = obligation::Obligation::active_deposits_empty(move _106)</td></tr></table>>];
    bb34__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = const &quot;Obligation hasn't been fully liquidated!&quot;<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = solana_program::log::sol_log(move _100)</td></tr></table>>];
    bb35__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = LendingError::CannotSocializeObligationWithCollateral<br/></td></tr><tr><td align="left">_102 = &lt;LendingError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _103)</td></tr></table>>];
    bb36__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Err(move _102)<br/>StorageDead(_102)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb38__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;(*_3)<br/></td></tr><tr><td align="left">_107 = obligation::Obligation::active_borrows_empty(move _108)</td></tr></table>>];
    bb39__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb40__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = const &quot;Obligation has no deposits or borrows&quot;<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = solana_program::log::sol_log(move _111)</td></tr></table>>];
    bb41__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = LendingError::ObligationEmpty<br/></td></tr><tr><td align="left">_113 = &lt;LendingError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _114)</td></tr></table>>];
    bb42__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Err(move _113)<br/>StorageDead(_113)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_104 = const ()<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;(*_3)<br/>StorageLive(_121)<br/>_121 = (*_2)<br/></td></tr><tr><td align="left">_119 = obligation::Obligation::find_liquidity_in_borrows(move _120, move _121)</td></tr></table>>];
    bb46__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;(&amp;obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb47__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_122 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb48__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_118 as Continue).0: (&amp;state::obligation::ObligationLiquidity, usize))<br/>_117 = _126<br/>StorageDead(_126)<br/>StorageLive(_115)<br/>_115 = (_117.0: &amp;state::obligation::ObligationLiquidity)<br/>StorageLive(_116)<br/>_116 = (_117.1: usize)<br/>_211 = discriminant(_118)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _4<br/></td></tr><tr><td align="left">_127 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _128)</td></tr></table>>];
    bb49__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = move ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_125)<br/>_125 = move _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb50__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>_217 = discriminant(_118)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_115)<br/></td></tr><tr><td align="left">_129 = obligation::ObligationLiquidity::borrowed_amount(move _130)</td></tr></table>>];
    bb52__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _127<br/>StorageLive(_133)<br/>_133 = _129<br/></td></tr><tr><td align="left">_131 = std::cmp::min::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _132, move _133)</td></tr></table>>];
    bb53__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_131<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;((*_1).5: state::reserve::ReserveLiquidity)<br/></td></tr><tr><td align="left">_138 = ReserveLiquidity::total_supply(move _139)</td></tr></table>>];
    bb54__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_137 = &amp;_138<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_135 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _136, move _137)</td></tr></table>>];
    bb55__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb56__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = const &quot;Reserve becomes deprecated&quot;<br/>_141 = &amp;(*_142)<br/></td></tr><tr><td align="left">_140 = solana_program::log::sol_log(move _141)</td></tr></table>>];
    bb57__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>((*_1).0: u64) = const _<br/>_134 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_134 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_201 = const _<br/>_153 = &amp;(*_201)<br/>_152 = &amp;(*_153)<br/>_151 = move _152 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_152)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_131<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _160)</td></tr></table>>];
    bb60__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = [move _159]<br/>StorageDead(_159)<br/>_157 = &amp;_158<br/>_156 = &amp;(*_157)<br/>_155 = move _156 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_150 = Arguments::&lt;'_&gt;::new_v1(move _151, move _155)</td></tr></table>>];
    bb61__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">_149 = format(move _150)</td></tr></table>>];
    bb62__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_153)<br/>_148 = move _149<br/>StorageDead(_149)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::string::String as Deref&gt;::deref(move _146)</td></tr></table>>];
    bb63__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_144 = &amp;(*_145)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_143 = solana_program::log::sol_log(move _144)</td></tr></table>>];
    bb64__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">drop(_148)</td></tr></table>>];
    bb65__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;_131<br/></td></tr><tr><td align="left">_165 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_ceil::&lt;u64&gt;(move _166)</td></tr></table>>];
    bb66__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageLive(_167)<br/>_167 = &amp;mut (*_3)<br/>StorageLive(_168)<br/>_168 = _116<br/>StorageLive(_169)<br/>_169 = &amp;mut (*_1)<br/>StorageLive(_170)<br/>_202 = const false<br/>_170 = move _6<br/></td></tr><tr><td align="left">_164 = update_elevation_group_debt_trackers_on_repay::&lt;'_, T, impl Iterator&lt;Item = T&gt;&gt;(move _165, move _167, move _168, move _169, move _170)</td></tr></table>>];
    bb67__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _164)</td></tr></table>>];
    bb68__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_171 = discriminant(_163)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb69__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_163 as Continue).0: ())<br/>_162 = _175<br/>StorageDead(_175)<br/>_213 = discriminant(_163)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;mut ((*_1).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_178)<br/>_178 = _131<br/></td></tr><tr><td align="left">_176 = ReserveLiquidity::forgive_debt(move _177, move _178)</td></tr></table>>];
    bb70__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = move ((_163 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_174)<br/>_174 = move _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb71__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>_215 = discriminant(_163)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_179 = last_update::LastUpdate::mark_stale(move _180)</td></tr></table>>];
    bb73__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;mut (*_3)<br/>StorageLive(_183)<br/>_183 = _131<br/>StorageLive(_184)<br/>_184 = _116<br/></td></tr><tr><td align="left">_181 = obligation::Obligation::repay(move _182, move _183, move _184)</td></tr></table>>];
    bb74__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_185 = obligation::Obligation::update_has_debt(move _186)</td></tr></table>>];
    bb75__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;(*_3)<br/></td></tr><tr><td align="left">_188 = obligation::Obligation::has_debt(move _189)</td></tr></table>>];
    bb76__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb77__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_187 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_190 = remove_all_orders(move _191)</td></tr></table>>];
    bb79__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb80__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = const &quot;Socializing loss has left the obligation with no debt; removing all its orders&quot;<br/>_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = solana_program::log::sol_log(move _194)</td></tr></table>>];
    bb81__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>_187 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_187 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;mut ((*_3).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_196 = last_update::LastUpdate::mark_stale(move _197)</td></tr></table>>];
    bb85__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_196)<br/>StorageLive(_198)<br/>_198 = _131<br/>_0 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::Ok(move _198)<br/>StorageDead(_198)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">return</td></tr></table>>];
    bb89__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">drop(_148)</td></tr></table>>];
    bb90__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb91__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb92__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb93__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_203 = discriminant(_9)<br/>StorageDead(_9)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_199 = const _<br/>_29 = &amp;(*_199)<br/>_28 = &amp;(*_29)<br/>_27 = move _28 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_28)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_38 = last_update::LastUpdate::get_price_status(move _39)</td></tr></table>>];
    bb94__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_205 = discriminant(_9)<br/>StorageDead(_9)<br/>_7 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;((*_3).1: state::last_update::LastUpdate)<br/>StorageLive(_56)<br/>_56 = _5<br/></td></tr><tr><td align="left">_54 = last_update::LastUpdate::is_stale(move _55, move _56, const _)</td></tr></table>>];
    bb95__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_207 = discriminant(_53)<br/>StorageDead(_53)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_200 = const _<br/>_73 = &amp;(*_200)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;((*_3).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_82 = last_update::LastUpdate::get_price_status(move _83)</td></tr></table>>];
    bb96__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_209 = discriminant(_53)<br/>StorageDead(_53)<br/>_51 = const ()<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;(*_3)<br/></td></tr><tr><td align="left">_96 = obligation::Obligation::active_deposits_empty(move _97)</td></tr></table>>];
    bb97__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb98__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left">switchInt(_202)</td></tr></table>>];
    bb99__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left" balign="left">_223 = discriminant(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left" balign="left">_224 = discriminant(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left" balign="left">_225 = discriminant(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left" balign="left">_226 = discriminant(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb104__0_1329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">switchInt(_202)</td></tr></table>>];
    bb0__0_1329 -> bb1__0_1329 [label="return"];
    bb0__0_1329 -> bb104__0_1329 [label="unwind"];
    bb1__0_1329 -> bb2__0_1329 [label="return"];
    bb1__0_1329 -> bb104__0_1329 [label="unwind"];
    bb2__0_1329 -> bb3__0_1329 [label="0"];
    bb2__0_1329 -> bb5__0_1329 [label="1"];
    bb2__0_1329 -> bb4__0_1329 [label="otherwise"];
    bb3__0_1329 -> bb94__0_1329 [label="0"];
    bb3__0_1329 -> bb93__0_1329 [label="otherwise"];
    bb5__0_1329 -> bb6__0_1329 [label="return"];
    bb5__0_1329 -> bb102__0_1329 [label="unwind"];
    bb6__0_1329 -> bb87__0_1329 [label=""];
    bb7__0_1329 -> bb8__0_1329 [label="return"];
    bb7__0_1329 -> bb104__0_1329 [label="unwind"];
    bb8__0_1329 -> bb9__0_1329 [label="return"];
    bb8__0_1329 -> bb104__0_1329 [label="unwind"];
    bb9__0_1329 -> bb10__0_1329 [label="return"];
    bb9__0_1329 -> bb104__0_1329 [label="unwind"];
    bb10__0_1329 -> bb11__0_1329 [label="return"];
    bb10__0_1329 -> bb104__0_1329 [label="unwind"];
    bb11__0_1329 -> bb12__0_1329 [label="return"];
    bb11__0_1329 -> bb104__0_1329 [label="unwind"];
    bb12__0_1329 -> bb13__0_1329 [label="return"];
    bb12__0_1329 -> bb91__0_1329 [label="unwind"];
    bb13__0_1329 -> bb14__0_1329 [label="return"];
    bb13__0_1329 -> bb91__0_1329 [label="unwind"];
    bb14__0_1329 -> bb15__0_1329 [label="return"];
    bb14__0_1329 -> bb104__0_1329 [label="unwind"];
    bb15__0_1329 -> bb16__0_1329 [label="return"];
    bb15__0_1329 -> bb104__0_1329 [label="unwind"];
    bb16__0_1329 -> bb87__0_1329 [label=""];
    bb17__0_1329 -> bb18__0_1329 [label="return"];
    bb17__0_1329 -> bb104__0_1329 [label="unwind"];
    bb18__0_1329 -> bb19__0_1329 [label="0"];
    bb18__0_1329 -> bb20__0_1329 [label="1"];
    bb18__0_1329 -> bb4__0_1329 [label="otherwise"];
    bb19__0_1329 -> bb96__0_1329 [label="0"];
    bb19__0_1329 -> bb95__0_1329 [label="otherwise"];
    bb20__0_1329 -> bb21__0_1329 [label="return"];
    bb20__0_1329 -> bb101__0_1329 [label="unwind"];
    bb21__0_1329 -> bb86__0_1329 [label=""];
    bb22__0_1329 -> bb23__0_1329 [label="return"];
    bb22__0_1329 -> bb104__0_1329 [label="unwind"];
    bb23__0_1329 -> bb24__0_1329 [label="return"];
    bb23__0_1329 -> bb104__0_1329 [label="unwind"];
    bb24__0_1329 -> bb25__0_1329 [label="return"];
    bb24__0_1329 -> bb104__0_1329 [label="unwind"];
    bb25__0_1329 -> bb26__0_1329 [label="return"];
    bb25__0_1329 -> bb104__0_1329 [label="unwind"];
    bb26__0_1329 -> bb27__0_1329 [label="return"];
    bb26__0_1329 -> bb104__0_1329 [label="unwind"];
    bb27__0_1329 -> bb28__0_1329 [label="return"];
    bb27__0_1329 -> bb90__0_1329 [label="unwind"];
    bb28__0_1329 -> bb29__0_1329 [label="return"];
    bb28__0_1329 -> bb90__0_1329 [label="unwind"];
    bb29__0_1329 -> bb30__0_1329 [label="return"];
    bb29__0_1329 -> bb104__0_1329 [label="unwind"];
    bb30__0_1329 -> bb31__0_1329 [label="return"];
    bb30__0_1329 -> bb104__0_1329 [label="unwind"];
    bb31__0_1329 -> bb86__0_1329 [label=""];
    bb32__0_1329 -> bb34__0_1329 [label="0"];
    bb32__0_1329 -> bb33__0_1329 [label="otherwise"];
    bb33__0_1329 -> bb37__0_1329 [label="return"];
    bb33__0_1329 -> bb104__0_1329 [label="unwind"];
    bb34__0_1329 -> bb35__0_1329 [label="return"];
    bb34__0_1329 -> bb104__0_1329 [label="unwind"];
    bb35__0_1329 -> bb36__0_1329 [label="return"];
    bb35__0_1329 -> bb104__0_1329 [label="unwind"];
    bb36__0_1329 -> bb98__0_1329 [label=""];
    bb37__0_1329 -> bb44__0_1329 [label="0"];
    bb37__0_1329 -> bb38__0_1329 [label="otherwise"];
    bb38__0_1329 -> bb39__0_1329 [label="return"];
    bb38__0_1329 -> bb104__0_1329 [label="unwind"];
    bb39__0_1329 -> bb43__0_1329 [label="0"];
    bb39__0_1329 -> bb40__0_1329 [label="otherwise"];
    bb40__0_1329 -> bb41__0_1329 [label="return"];
    bb40__0_1329 -> bb104__0_1329 [label="unwind"];
    bb41__0_1329 -> bb42__0_1329 [label="return"];
    bb41__0_1329 -> bb104__0_1329 [label="unwind"];
    bb42__0_1329 -> bb98__0_1329 [label=""];
    bb43__0_1329 -> bb45__0_1329 [label=""];
    bb44__0_1329 -> bb45__0_1329 [label=""];
    bb45__0_1329 -> bb46__0_1329 [label="return"];
    bb45__0_1329 -> bb104__0_1329 [label="unwind"];
    bb46__0_1329 -> bb47__0_1329 [label="return"];
    bb46__0_1329 -> bb104__0_1329 [label="unwind"];
    bb47__0_1329 -> bb48__0_1329 [label="0"];
    bb47__0_1329 -> bb49__0_1329 [label="1"];
    bb47__0_1329 -> bb4__0_1329 [label="otherwise"];
    bb48__0_1329 -> bb51__0_1329 [label="return"];
    bb48__0_1329 -> bb104__0_1329 [label="unwind"];
    bb49__0_1329 -> bb50__0_1329 [label="return"];
    bb49__0_1329 -> bb100__0_1329 [label="unwind"];
    bb50__0_1329 -> bb98__0_1329 [label=""];
    bb51__0_1329 -> bb52__0_1329 [label="return"];
    bb51__0_1329 -> bb104__0_1329 [label="unwind"];
    bb52__0_1329 -> bb53__0_1329 [label="return"];
    bb52__0_1329 -> bb104__0_1329 [label="unwind"];
    bb53__0_1329 -> bb54__0_1329 [label="return"];
    bb53__0_1329 -> bb104__0_1329 [label="unwind"];
    bb54__0_1329 -> bb55__0_1329 [label="return"];
    bb54__0_1329 -> bb104__0_1329 [label="unwind"];
    bb55__0_1329 -> bb58__0_1329 [label="0"];
    bb55__0_1329 -> bb56__0_1329 [label="otherwise"];
    bb56__0_1329 -> bb57__0_1329 [label="return"];
    bb56__0_1329 -> bb104__0_1329 [label="unwind"];
    bb57__0_1329 -> bb59__0_1329 [label=""];
    bb58__0_1329 -> bb59__0_1329 [label=""];
    bb59__0_1329 -> bb60__0_1329 [label="return"];
    bb59__0_1329 -> bb104__0_1329 [label="unwind"];
    bb60__0_1329 -> bb61__0_1329 [label="return"];
    bb60__0_1329 -> bb104__0_1329 [label="unwind"];
    bb61__0_1329 -> bb62__0_1329 [label="return"];
    bb61__0_1329 -> bb104__0_1329 [label="unwind"];
    bb62__0_1329 -> bb63__0_1329 [label="return"];
    bb62__0_1329 -> bb89__0_1329 [label="unwind"];
    bb63__0_1329 -> bb64__0_1329 [label="return"];
    bb63__0_1329 -> bb89__0_1329 [label="unwind"];
    bb64__0_1329 -> bb65__0_1329 [label="return"];
    bb64__0_1329 -> bb104__0_1329 [label="unwind"];
    bb65__0_1329 -> bb66__0_1329 [label="return"];
    bb65__0_1329 -> bb104__0_1329 [label="unwind"];
    bb66__0_1329 -> bb67__0_1329 [label="return"];
    bb66__0_1329 -> bb104__0_1329 [label="unwind"];
    bb67__0_1329 -> bb68__0_1329 [label="return"];
    bb67__0_1329 -> bb104__0_1329 [label="unwind"];
    bb68__0_1329 -> bb69__0_1329 [label="0"];
    bb68__0_1329 -> bb70__0_1329 [label="1"];
    bb68__0_1329 -> bb4__0_1329 [label="otherwise"];
    bb69__0_1329 -> bb72__0_1329 [label="return"];
    bb69__0_1329 -> bb104__0_1329 [label="unwind"];
    bb70__0_1329 -> bb71__0_1329 [label="return"];
    bb70__0_1329 -> bb99__0_1329 [label="unwind"];
    bb71__0_1329 -> bb98__0_1329 [label=""];
    bb72__0_1329 -> bb73__0_1329 [label="return"];
    bb72__0_1329 -> bb104__0_1329 [label="unwind"];
    bb73__0_1329 -> bb74__0_1329 [label="return"];
    bb73__0_1329 -> bb104__0_1329 [label="unwind"];
    bb74__0_1329 -> bb75__0_1329 [label="return"];
    bb74__0_1329 -> bb104__0_1329 [label="unwind"];
    bb75__0_1329 -> bb76__0_1329 [label="return"];
    bb75__0_1329 -> bb104__0_1329 [label="unwind"];
    bb76__0_1329 -> bb78__0_1329 [label="0"];
    bb76__0_1329 -> bb77__0_1329 [label="otherwise"];
    bb77__0_1329 -> bb84__0_1329 [label=""];
    bb78__0_1329 -> bb79__0_1329 [label="return"];
    bb78__0_1329 -> bb104__0_1329 [label="unwind"];
    bb79__0_1329 -> bb82__0_1329 [label="0"];
    bb79__0_1329 -> bb80__0_1329 [label="otherwise"];
    bb80__0_1329 -> bb81__0_1329 [label="return"];
    bb80__0_1329 -> bb104__0_1329 [label="unwind"];
    bb81__0_1329 -> bb83__0_1329 [label=""];
    bb82__0_1329 -> bb83__0_1329 [label=""];
    bb83__0_1329 -> bb84__0_1329 [label=""];
    bb84__0_1329 -> bb85__0_1329 [label="return"];
    bb84__0_1329 -> bb104__0_1329 [label="unwind"];
    bb85__0_1329 -> bb88__0_1329 [label=""];
    bb86__0_1329 -> bb98__0_1329 [label=""];
    bb87__0_1329 -> bb98__0_1329 [label=""];
    bb89__0_1329 -> bb104__0_1329 [label="return"];
    bb90__0_1329 -> bb104__0_1329 [label="return"];
    bb91__0_1329 -> bb104__0_1329 [label="return"];
    bb93__0_1329 -> bb7__0_1329 [label="return"];
    bb93__0_1329 -> bb104__0_1329 [label="unwind"];
    bb94__0_1329 -> bb17__0_1329 [label="return"];
    bb94__0_1329 -> bb104__0_1329 [label="unwind"];
    bb95__0_1329 -> bb22__0_1329 [label="return"];
    bb95__0_1329 -> bb104__0_1329 [label="unwind"];
    bb96__0_1329 -> bb32__0_1329 [label="return"];
    bb96__0_1329 -> bb104__0_1329 [label="unwind"];
    bb97__0_1329 -> bb88__0_1329 [label="return"];
    bb97__0_1329 -> bb92__0_1329 [label="unwind"];
    bb98__0_1329 -> bb88__0_1329 [label="0"];
    bb98__0_1329 -> bb97__0_1329 [label="otherwise"];
    bb99__0_1329 -> bb104__0_1329 [label=""];
    bb100__0_1329 -> bb104__0_1329 [label=""];
    bb101__0_1329 -> bb104__0_1329 [label=""];
    bb102__0_1329 -> bb104__0_1329 [label=""];
    bb103__0_1329 -> bb92__0_1329 [label="return"];
    bb104__0_1329 -> bb92__0_1329 [label="0"];
    bb104__0_1329 -> bb103__0_1329 [label="otherwise"];
}
