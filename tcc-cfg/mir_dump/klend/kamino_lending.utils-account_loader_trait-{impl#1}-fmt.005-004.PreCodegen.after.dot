digraph Mir_0_2123 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;account_loader_trait::FatAccountLoader&lt;'info, T&gt; as std::fmt::Debug&gt;::fmt(_1: &amp;ReErased utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _4: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _5: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _8: std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _20: &amp;ReErased std::marker::PhantomData&lt;&amp;ReErased T/#1&gt;;<br align="left"/>let _21: &amp;ReErased std::marker::PhantomData&lt;&amp;ReErased T/#1&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>>;
    bb0__0_2123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_2)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = const &quot;AccountLoader&quot;<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_8 = Formatter::&lt;'_&gt;::debug_struct(move _9, move _10)</td></tr></table>>];
    bb1__0_2123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_7 = &amp;mut _8<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = const &quot;acc_info&quot;<br/>_12 = &amp;(*_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_15 = &amp;(*_16)<br/>_14 = move _15 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_6 = DebugStruct::&lt;'_, '_&gt;::field(move _7, move _12, move _14)</td></tr></table>>];
    bb2__0_2123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = &amp;mut (*_6)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = const &quot;phantom&quot;<br/>_17 = &amp;(*_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).1: std::marker::PhantomData&lt;&amp;T&gt;)<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_4 = DebugStruct::&lt;'_, '_&gt;::field(move _5, move _17, move _19)</td></tr></table>>];
    bb3__0_2123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_3 = &amp;mut (*_4)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_0 = DebugStruct::&lt;'_, '_&gt;::finish(move _3)</td></tr></table>>];
    bb4__0_2123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2123 -> bb1__0_2123 [label="return"];
    bb1__0_2123 -> bb2__0_2123 [label="return"];
    bb2__0_2123 -> bb3__0_2123 [label="return"];
    bb3__0_2123 -> bb4__0_2123 [label="return"];
}
