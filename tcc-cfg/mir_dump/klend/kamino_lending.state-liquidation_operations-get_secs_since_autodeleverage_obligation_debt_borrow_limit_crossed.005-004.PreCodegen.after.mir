// MIR for `get_secs_since_autodeleverage_obligation_debt_borrow_limit_crossed` after PreCodegen

fn get_secs_since_autodeleverage_obligation_debt_borrow_limit_crossed(_1: &reserve::Reserve, _2: u64) -> std::option::Option<u64> {
    debug debt_reserve => _1;
    debug timestamp => _2;
    let mut _0: std::option::Option<u64>;
    let mut _3: bool;
    let mut _4: &state::reserve::Reserve;
    let mut _5: bool;
    let mut _6: u64;
    let _7: ();
    let _8: ();
    let mut _9: std::fmt::Arguments<'_>;
    let mut _10: &[&str];
    let mut _11: &[&str; 1];
    let _12: &[&str; 1];
    let _13: [&str; 1];
    let _14: ();
    let _15: ();
    let mut _16: std::fmt::Arguments<'_>;
    let mut _17: &[&str];
    let mut _18: &[&str; 1];
    let _19: &[&str; 1];
    let _20: [&str; 1];
    let _21: u64;
    let mut _22: u64;
    let mut _23: u64;
    let mut _24: u64;
    let mut _25: u64;
    let _26: ();
    let _27: ();
    let mut _28: std::fmt::Arguments<'_>;
    let mut _29: &[&str];
    let mut _30: &[&str; 1];
    let _31: &[&str; 1];
    let _32: [&str; 1];
    let mut _33: &[&str; 1];
    let mut _34: &[&str; 1];
    let mut _35: &[&str; 1];
    scope 1 {
        debug secs_since_margin_call_started => _21;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = reserve::Reserve::borrow_limit_crossed(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb12, otherwise: bb2];
    }

    bb2: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (((*_1).5: state::reserve::ReserveLiquidity).9: u64);
        _5 = Eq(move _6, const 0_u64);
        switchInt(move _5) -> [0: bb6, otherwise: bb3];
    }

    bb3: {
        StorageDead(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _33 = const _;
        _12 = &(*_33);
        _11 = &(*_12);
        _10 = move _11 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_11);
        _9 = Arguments::<'_>::new_const(move _10) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_10);
        _8 = _print(move _9) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_9);
        StorageDead(_12);
        StorageDead(_8);
        _7 = const ();
        StorageDead(_7);
        _0 = std::option::Option::<u64>::None;
        goto -> bb11;
    }

    bb6: {
        StorageDead(_6);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _34 = const _;
        _19 = &(*_34);
        _18 = &(*_19);
        _17 = move _18 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_18);
        _16 = Arguments::<'_>::new_const(move _17) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_17);
        _15 = _print(move _16) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_16);
        StorageDead(_19);
        StorageDead(_15);
        _14 = const ();
        StorageDead(_14);
        StorageLive(_21);
        StorageLive(_22);
        _22 = _2;
        StorageLive(_23);
        _23 = (((*_1).5: state::reserve::ReserveLiquidity).9: u64);
        _21 = core::num::<impl u64>::saturating_sub(move _22, move _23) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_23);
        StorageDead(_22);
        StorageLive(_24);
        _24 = (((*_1).9: state::reserve::ReserveConfig).12: u64);
        StorageLive(_25);
        _25 = _21;
        _0 = get_secs_since_deleveraging_started(move _24, move _25) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_21);
        goto -> bb11;
    }

    bb11: {
        StorageDead(_5);
        goto -> bb15;
    }

    bb12: {
        StorageDead(_4);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _35 = const _;
        _31 = &(*_35);
        _30 = &(*_31);
        _29 = move _30 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_30);
        _28 = Arguments::<'_>::new_const(move _29) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_29);
        _27 = _print(move _28) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_28);
        StorageDead(_31);
        StorageDead(_27);
        _26 = const ();
        StorageDead(_26);
        _0 = std::option::Option::<u64>::None;
        goto -> bb15;
    }

    bb15: {
        StorageDead(_3);
        return;
    }
}
