// MIR for `__idl::<impl at programs\klend\src\lib.rs:33:1: 33:11>::clone` before PreCodegen

fn __idl::<impl at programs\klend\src\lib.rs:33:1: 33:11>::clone(_1: &__idl::IdlAccount) -> __idl::IdlAccount {
    debug self => _1;
    let mut _0: __private::__idl::IdlAccount;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: &anchor_lang::prelude::Pubkey;
    let _4: &anchor_lang::prelude::Pubkey;
    let mut _5: u32;
    let mut _6: &u32;
    let _7: &u32;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _3 = &(*_4);
        _2 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: u32);
        _6 = &(*_7);
        _5 = <u32 as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        _0 = __idl::IdlAccount { authority: move _2, data_len: move _5 };
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
