digraph Mir_0_11871 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::is_zero(_1: &amp;ReErased utils::fraction::uint_types::U128) -&gt; bool<br align="left"/>let mut _2: !;<br align="left"/>let _3: &amp;ReErased [u64; 2_usize];<br align="left"/>let mut _4: usize;<br align="left"/>let _5: ();<br align="left"/>let mut _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let _11: usize;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: (usize, bool);<br align="left"/>let mut _16: !;<br align="left"/>let _17: ();<br align="left"/>let mut _18: !;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug arr =&gt; _3;<br align="left"/>debug i =&gt; _4;<br align="left"/>>;
    bb0__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;((*_1).0: [u64; 2])<br/>StorageLive(_4)<br/>_4 = const 0_usize<br/>StorageLive(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _4<br/>_7 = Lt(move _8, const 2_usize)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _4<br/>_12 = Len((*_3))<br/>_13 = Lt(_11, _12)<br/></td></tr><tr><td align="left">assert(move _13, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _12, _11)</td></tr></table>>];
    bb3__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_10 = (*_3)[_11]<br/>_9 = Ne(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_0 = const false<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_15 = CheckedAdd(_4, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_15.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _4, const 1_usize)</td></tr></table>>];
    bb6__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_4 = move (_15.0: usize)<br/>_6 = const ()<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_17)<br/>_5 = const ()<br/>StorageDead(_17)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_11871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11871 -> bb1__0_11871 [label=""];
    bb1__0_11871 -> bb7__0_11871 [label="0"];
    bb1__0_11871 -> bb2__0_11871 [label="otherwise"];
    bb2__0_11871 -> bb3__0_11871 [label="success"];
    bb3__0_11871 -> bb5__0_11871 [label="0"];
    bb3__0_11871 -> bb4__0_11871 [label="otherwise"];
    bb4__0_11871 -> bb8__0_11871 [label=""];
    bb5__0_11871 -> bb6__0_11871 [label="success"];
    bb6__0_11871 -> bb1__0_11871 [label=""];
    bb7__0_11871 -> bb8__0_11871 [label=""];
}
