digraph Mir_0_1503 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;state::lending_market::LendingMarket as Default&gt;::default() -&gt; state::lending_market::LendingMarket<br align="left"/>let mut _1: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _2: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _3: [u8; 32_usize];<br align="left"/>let mut _4: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: [u8; 8_usize];<br align="left"/>let mut _6: [u8; 8_usize];<br align="left"/>let mut _7: [state::lending_market::ElevationGroup; 32_usize];<br align="left"/>let mut _8: state::lending_market::ElevationGroup;<br align="left"/>let mut _9: [u64; 90_usize];<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: [u8; 32_usize];<br align="left"/>let mut _12: [u8; 5_usize];<br align="left"/>let mut _13: [u64; 169_usize];<br align="left"/>>;
    bb0__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_1)<br/></td></tr><tr><td align="left">_1 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb1__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/></td></tr><tr><td align="left">_2 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb2__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = [const 0_u8; 32]<br/>StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb3__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = [const 0_u8; 8]<br/>StorageLive(_6)<br/>_6 = [const 0_u8; 8]<br/>StorageLive(_7)<br/>StorageLive(_8)<br/></td></tr><tr><td align="left">_8 = &lt;state::lending_market::ElevationGroup as Default&gt;::default()</td></tr></table>>];
    bb4__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_7 = [move _8; 32]<br/>StorageDead(_8)<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = default_array::&lt;u64, 90&gt;()</td></tr></table>>];
    bb5__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/></td></tr><tr><td align="left">_10 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(const _)</td></tr></table>>];
    bb6__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = [const 0_u8; 32]<br/>StorageLive(_12)<br/></td></tr><tr><td align="left">_12 = default_array::&lt;u8, 5&gt;()</td></tr></table>>];
    bb7__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/></td></tr><tr><td align="left">_13 = default_array::&lt;u64, 169&gt;()</td></tr></table>>];
    bb8__0_1503 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_0 = state::lending_market::LendingMarket { version: const 0_u64, bump_seed: const 0_u64, lending_market_owner: move _1, lending_market_owner_cached: move _4, quote_currency: move _3, referral_fee_bps: const 0_u16, emergency_mode: const 0_u8, autodeleverage_enabled: const 0_u8, borrow_disabled: const 0_u8, price_refresh_trigger_to_max_age_pct: const 0_u8, liquidation_max_debt_close_factor_pct: const _, insolvency_risk_unhealthy_ltv_pct: const _, min_full_liquidation_value_threshold: const _, max_liquidatable_debt_market_value_at_once: const _, reserved0: move _5, global_allowed_borrow_value: const _, risk_council: move _2, reserved1: move _6, elevation_groups: move _7, elevation_group_padding: move _9, min_net_value_in_obligation_sf: move _10, min_value_skip_liquidation_ltv_checks: const 0_u64, name: move _11, min_value_skip_liquidation_bf_checks: const 0_u64, individual_autodeleverage_margin_call_period_secs: const 0_u64, min_initial_deposit_amount: const _, obligation_order_execution_enabled: const 0_u8, immutable: const 0_u8, obligation_order_creation_enabled: const 0_u8, padding2: move _12, padding1: move _13 }<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_1)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1503 -> bb1__0_1503 [label="return"];
    bb1__0_1503 -> bb2__0_1503 [label="return"];
    bb2__0_1503 -> bb3__0_1503 [label="return"];
    bb3__0_1503 -> bb4__0_1503 [label="return"];
    bb4__0_1503 -> bb5__0_1503 [label="return"];
    bb5__0_1503 -> bb6__0_1503 [label="return"];
    bb6__0_1503 -> bb7__0_1503 [label="return"];
    bb7__0_1503 -> bb8__0_1503 [label="return"];
}
