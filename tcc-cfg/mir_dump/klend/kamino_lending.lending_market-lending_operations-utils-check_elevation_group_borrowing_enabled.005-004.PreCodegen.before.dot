digraph Mir_0_1360 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_elevation_group_borrowing_enabled(_1: &amp;ReErased state::lending_market::LendingMarket, _2: &amp;ReErased state::obligation::Obligation) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: u8;<br align="left"/>let mut _8: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: anchor_lang::error::Error;<br align="left"/>let mut _21: anchor_lang::error::AnchorError;<br align="left"/>let mut _22: std::string::String;<br align="left"/>let mut _23: &amp;ReErased LendingError;<br align="left"/>let _24: LendingError;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: LendingError;<br align="left"/>let mut _27: std::string::String;<br align="left"/>let mut _28: &amp;ReErased LendingError;<br align="left"/>let _29: LendingError;<br align="left"/>let mut _30: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _31: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _32: anchor_lang::error::Source;<br align="left"/>let mut _33: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _34: ();<br align="left"/>let mut _35: &amp;ReErased LendingError;<br align="left"/>let mut _36: &amp;ReErased LendingError;<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug elevation_group =&gt; _15;<br align="left"/>>;
    bb0__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_37 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_2).14: u8)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = get_elevation_group(move _7, move _8)</td></tr></table>>];
    bb1__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_37 = const true<br/>StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;)<br/>_4 = _13<br/>StorageDead(_13)<br/>_14 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb4__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_4 as Some).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_15)<br/></td></tr><tr><td align="left">_17 = state::lending_market::ElevationGroup::new_loans_disabled(move _18)</td></tr></table>>];
    bb9__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb10__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_36 = const _<br/>_23 = &amp;(*_36)<br/></td></tr><tr><td align="left">_22 = LendingError::name(move _23)</td></tr></table>>];
    bb11__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>_3 = const ()<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = LendingError::ElevationGroupNewLoansDisabled<br/></td></tr><tr><td align="left">_25 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _26)</td></tr></table>>];
    bb13__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_35 = const _<br/>_28 = &amp;(*_35)<br/></td></tr><tr><td align="left">_27 = &lt;LendingError as ToString&gt;::to_string(move _28)</td></tr></table>>];
    bb14__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2432_u32 }<br/>_31 = anchor_lang::error::ErrorOrigin::Source(move _32)<br/>StorageDead(_32)<br/>_30 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _31)<br/>StorageDead(_31)<br/>StorageLive(_33)<br/>_33 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_21 = anchor_lang::error::AnchorError { error_name: move _22, error_code_number: move _25, error_msg: move _27, error_origin: move _30, compared_values: move _33 }<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _21)</td></tr></table>>];
    bb15__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _20)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_40 = discriminant(_5)<br/>_37 = const false<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb18__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb19__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb20__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_38 = discriminant(_5)<br/>_37 = const false<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_34)<br/>_34 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _34)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1360 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left" balign="left">_42 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1360 -> bb1__0_1360 [label="return"];
    bb1__0_1360 -> bb2__0_1360 [label="return"];
    bb1__0_1360 -> bb19__0_1360 [label="unwind"];
    bb2__0_1360 -> bb3__0_1360 [label="0"];
    bb2__0_1360 -> bb5__0_1360 [label="1"];
    bb2__0_1360 -> bb4__0_1360 [label="otherwise"];
    bb3__0_1360 -> bb8__0_1360 [label="1"];
    bb3__0_1360 -> bb7__0_1360 [label="otherwise"];
    bb5__0_1360 -> bb6__0_1360 [label="return"];
    bb5__0_1360 -> bb21__0_1360 [label="unwind"];
    bb6__0_1360 -> bb16__0_1360 [label=""];
    bb7__0_1360 -> bb20__0_1360 [label=""];
    bb8__0_1360 -> bb9__0_1360 [label="return"];
    bb8__0_1360 -> bb21__0_1360 [label="unwind"];
    bb9__0_1360 -> bb11__0_1360 [label="0"];
    bb9__0_1360 -> bb10__0_1360 [label="otherwise"];
    bb10__0_1360 -> bb12__0_1360 [label="return"];
    bb10__0_1360 -> bb21__0_1360 [label="unwind"];
    bb11__0_1360 -> bb20__0_1360 [label=""];
    bb12__0_1360 -> bb13__0_1360 [label="return"];
    bb12__0_1360 -> bb18__0_1360 [label="unwind"];
    bb13__0_1360 -> bb14__0_1360 [label="return"];
    bb13__0_1360 -> bb18__0_1360 [label="unwind"];
    bb14__0_1360 -> bb15__0_1360 [label="return"];
    bb14__0_1360 -> bb21__0_1360 [label="unwind"];
    bb15__0_1360 -> bb16__0_1360 [label=""];
    bb16__0_1360 -> bb17__0_1360 [label=""];
    bb18__0_1360 -> bb21__0_1360 [label="return"];
    bb20__0_1360 -> bb17__0_1360 [label=""];
    bb21__0_1360 -> bb19__0_1360 [label=""];
}
