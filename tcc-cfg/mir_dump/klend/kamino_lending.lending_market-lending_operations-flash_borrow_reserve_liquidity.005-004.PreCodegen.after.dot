digraph Mir_0_1325 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::flash_borrow_reserve_liquidity(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: !;<br align="left"/>let _7: ();<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let mut _10: anchor_lang::error::Error;<br align="left"/>let mut _11: anchor_lang::error::AnchorError;<br align="left"/>let mut _12: std::string::String;<br align="left"/>let mut _13: &amp;ReErased LendingError;<br align="left"/>let _14: LendingError;<br align="left"/>let mut _15: u32;<br align="left"/>let mut _16: LendingError;<br align="left"/>let mut _17: std::string::String;<br align="left"/>let mut _18: &amp;ReErased LendingError;<br align="left"/>let _19: LendingError;<br align="left"/>let mut _20: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _21: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _22: anchor_lang::error::Source;<br align="left"/>let mut _23: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _24: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _25: u64;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _30: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: ();<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _38: ();<br align="left"/>let mut _39: &amp;ReErased LendingError;<br align="left"/>let mut _40: &amp;ReErased LendingError;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug liquidity_amount_f =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>>;
    bb0__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((((*_1).9: state::reserve::ReserveConfig).14: state::reserve::ReserveFees).1: u64)<br/>_4 = Eq(move _5, const _)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = const &quot;Flash loans are disabled for this reserve&quot;<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = solana_program::log::sol_log(move _8)</td></tr></table>>];
    bb2__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_40 = const _<br/>_13 = &amp;(*_40)<br/></td></tr><tr><td align="left">_12 = LendingError::name(move _13)</td></tr></table>>];
    bb3__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = LendingError::FlashLoansDisabled<br/></td></tr><tr><td align="left">_15 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _16)</td></tr></table>>];
    bb4__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_39 = const _<br/>_18 = &amp;(*_39)<br/></td></tr><tr><td align="left">_17 = &lt;LendingError as ToString&gt;::to_string(move _18)</td></tr></table>>];
    bb5__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1650_u32 }<br/>_21 = anchor_lang::error::ErrorOrigin::Source(move _22)<br/>StorageDead(_22)<br/>_20 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _21)<br/>StorageDead(_21)<br/>StorageLive(_23)<br/>_23 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_11 = anchor_lang::error::AnchorError { error_name: move _12, error_code_number: move _15, error_msg: move _17, error_origin: move _20, compared_values: move _23 }<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _11)</td></tr></table>>];
    bb6__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _10)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _2<br/></td></tr><tr><td align="left">_24 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _25)</td></tr></table>>];
    bb8__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut ((*_1).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_30)<br/>_30 = _24<br/></td></tr><tr><td align="left">_28 = ReserveLiquidity::borrow(move _29, move _30)</td></tr></table>>];
    bb9__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb10__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_31 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Continue).0: ())<br/>_26 = _35<br/>StorageDead(_35)<br/>_41 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_36 = last_update::LastUpdate::mark_stale(move _37)</td></tr></table>>];
    bb12__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb14__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_43 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>_38 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _38)<br/>StorageDead(_38)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb18__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb19__0_1325 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left" balign="left">_45 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1325 -> bb7__0_1325 [label="0"];
    bb0__0_1325 -> bb1__0_1325 [label="otherwise"];
    bb1__0_1325 -> bb2__0_1325 [label="return"];
    bb2__0_1325 -> bb3__0_1325 [label="return"];
    bb3__0_1325 -> bb4__0_1325 [label="return"];
    bb3__0_1325 -> bb17__0_1325 [label="unwind"];
    bb4__0_1325 -> bb5__0_1325 [label="return"];
    bb4__0_1325 -> bb17__0_1325 [label="unwind"];
    bb5__0_1325 -> bb6__0_1325 [label="return"];
    bb5__0_1325 -> bb18__0_1325 [label="unwind"];
    bb6__0_1325 -> bb16__0_1325 [label=""];
    bb7__0_1325 -> bb8__0_1325 [label="return"];
    bb8__0_1325 -> bb9__0_1325 [label="return"];
    bb9__0_1325 -> bb10__0_1325 [label="return"];
    bb9__0_1325 -> bb18__0_1325 [label="unwind"];
    bb10__0_1325 -> bb11__0_1325 [label="0"];
    bb10__0_1325 -> bb13__0_1325 [label="1"];
    bb10__0_1325 -> bb12__0_1325 [label="otherwise"];
    bb11__0_1325 -> bb15__0_1325 [label="return"];
    bb13__0_1325 -> bb14__0_1325 [label="return"];
    bb13__0_1325 -> bb19__0_1325 [label="unwind"];
    bb14__0_1325 -> bb16__0_1325 [label=""];
    bb15__0_1325 -> bb16__0_1325 [label=""];
    bb17__0_1325 -> bb18__0_1325 [label="return"];
    bb19__0_1325 -> bb18__0_1325 [label=""];
}
