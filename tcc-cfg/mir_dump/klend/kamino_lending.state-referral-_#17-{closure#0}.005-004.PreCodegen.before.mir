// MIR for `referral::_::{closure#0}` before PreCodegen

fn referral::_::{closure#0}(_1: &{closure@programs\klend\src\state\referral.rs:83:12: 83:24}) -> () {
    let mut _0: ();
    let mut _2: unsafe extern "rust-intrinsic" fn(state::referral::UserMetadata) -> state::referral::_::{closure#0}::TypeWithoutPadding {std::intrinsics::transmute::<state::referral::UserMetadata, state::referral::_::{closure#0}::TypeWithoutPadding>};
    scope 1 {
    }

    bb0: {
        StorageLive(_2);
        _2 = transmute::<referral::UserMetadata, referral::_::{closure#0}::TypeWithoutPadding>;
        StorageDead(_2);
        _0 = const ();
        return;
    }
}
