digraph Mir_0_1908 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveLiquidity::withdraw(_1: &amp;ReErased mut state::reserve::ReserveLiquidity, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: anchor_lang::error::Error;<br align="left"/>let mut _12: anchor_lang::error::AnchorError;<br align="left"/>let mut _13: std::string::String;<br align="left"/>let mut _14: &amp;ReErased LendingError;<br align="left"/>let _15: LendingError;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: LendingError;<br align="left"/>let mut _18: std::string::String;<br align="left"/>let mut _19: &amp;ReErased LendingError;<br align="left"/>let _20: LendingError;<br align="left"/>let mut _21: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _22: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _23: anchor_lang::error::Source;<br align="left"/>let mut _24: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, u64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u64, LendingError&gt;;<br align="left"/>let mut _28: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: LendingError;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _36: u64;<br align="left"/>let mut _37: ();<br align="left"/>let mut _38: &amp;ReErased LendingError;<br align="left"/>let mut _39: &amp;ReErased LendingError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>>;
    bb0__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>StorageLive(_6)<br/>_6 = ((*_1).3: u64)<br/>_4 = Gt(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = const &quot;Withdraw amount cannot exceed available amount&quot;<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb2__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_39 = const _<br/>_14 = &amp;(*_39)<br/></td></tr><tr><td align="left">_13 = LendingError::name(move _14)</td></tr></table>>];
    bb3__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = LendingError::InsufficientLiquidity<br/></td></tr><tr><td align="left">_16 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _17)</td></tr></table>>];
    bb4__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_38 = const _<br/>_19 = &amp;(*_38)<br/></td></tr><tr><td align="left">_18 = &lt;LendingError as ToString&gt;::to_string(move _19)</td></tr></table>>];
    bb5__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\reserve.rs&quot;, line: const 552_u32 }<br/>_22 = anchor_lang::error::ErrorOrigin::Source(move _23)<br/>StorageDead(_23)<br/>_21 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _22)<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_12 = anchor_lang::error::AnchorError { error_name: move _13, error_code_number: move _16, error_msg: move _18, error_origin: move _21, compared_values: move _24 }<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _12)</td></tr></table>>];
    bb6__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _11)<br/>StorageDead(_11)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).3: u64)<br/>StorageLive(_30)<br/>_30 = _2<br/></td></tr><tr><td align="left">_28 = core::num::&lt;impl u64&gt;::checked_sub(move _29, move _30)</td></tr></table>>];
    bb8__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_27 = std::option::Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _28, move _31)</td></tr></table>>];
    bb9__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb10__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_32 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb11__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_26 as Continue).0: u64)<br/>_25 = _36<br/>StorageDead(_36)<br/>((*_1).3: u64) = move _25<br/>StorageDead(_25)<br/>StorageDead(_26)<br/>StorageLive(_37)<br/>_37 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb14__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb16__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb17__0_1908 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1908 -> bb7__0_1908 [label="0"];
    bb0__0_1908 -> bb1__0_1908 [label="otherwise"];
    bb1__0_1908 -> bb2__0_1908 [label="return"];
    bb2__0_1908 -> bb3__0_1908 [label="return"];
    bb3__0_1908 -> bb4__0_1908 [label="return"];
    bb3__0_1908 -> bb16__0_1908 [label="unwind"];
    bb4__0_1908 -> bb5__0_1908 [label="return"];
    bb4__0_1908 -> bb16__0_1908 [label="unwind"];
    bb5__0_1908 -> bb6__0_1908 [label="return"];
    bb5__0_1908 -> bb17__0_1908 [label="unwind"];
    bb6__0_1908 -> bb15__0_1908 [label=""];
    bb7__0_1908 -> bb8__0_1908 [label="return"];
    bb8__0_1908 -> bb9__0_1908 [label="return"];
    bb9__0_1908 -> bb10__0_1908 [label="return"];
    bb10__0_1908 -> bb11__0_1908 [label="0"];
    bb10__0_1908 -> bb13__0_1908 [label="1"];
    bb10__0_1908 -> bb12__0_1908 [label="otherwise"];
    bb11__0_1908 -> bb15__0_1908 [label=""];
    bb13__0_1908 -> bb14__0_1908 [label="return"];
    bb14__0_1908 -> bb15__0_1908 [label=""];
    bb16__0_1908 -> bb17__0_1908 [label="return"];
}
