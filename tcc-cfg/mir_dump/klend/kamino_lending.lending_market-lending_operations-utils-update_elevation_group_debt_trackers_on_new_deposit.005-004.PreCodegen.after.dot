digraph Mir_0_1376 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_elevation_group_debt_trackers_on_new_deposit(_1: std::option::Option&lt;u64&gt;, _2: &amp;ReErased mut state::obligation::ObligationCollateral, _3: usize, _4: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased mut state::reserve::Reserve, _7: state::types::MaxReservesAsCollateralCheck) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: isize;<br align="left"/>let _10: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: anchor_lang::error::Error;<br align="left"/>let mut _17: anchor_lang::error::Error;<br align="left"/>let mut _18: anchor_lang::error::AnchorError;<br align="left"/>let mut _19: std::string::String;<br align="left"/>let mut _20: &amp;ReErased LendingError;<br align="left"/>let _21: LendingError;<br align="left"/>let mut _22: u32;<br align="left"/>let mut _23: LendingError;<br align="left"/>let mut _24: std::string::String;<br align="left"/>let mut _25: &amp;ReErased LendingError;<br align="left"/>let _26: LendingError;<br align="left"/>let mut _27: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _28: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _29: anchor_lang::error::Source;<br align="left"/>let mut _30: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _31: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _32: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: anchor_lang::prelude::Pubkey;<br align="left"/>let _34: ();<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _37: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let _38: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let _39: ();<br align="left"/>let mut _40: bool;<br align="left"/>let mut _41: usize;<br align="left"/>let mut _42: u8;<br align="left"/>let mut _43: usize;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: (usize, bool);<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: anchor_lang::error::Error;<br align="left"/>let mut _48: anchor_lang::error::Error;<br align="left"/>let mut _49: anchor_lang::error::AnchorError;<br align="left"/>let mut _50: std::string::String;<br align="left"/>let mut _51: &amp;ReErased LendingError;<br align="left"/>let _52: LendingError;<br align="left"/>let mut _53: u32;<br align="left"/>let mut _54: LendingError;<br align="left"/>let mut _55: std::string::String;<br align="left"/>let mut _56: &amp;ReErased LendingError;<br align="left"/>let _57: LendingError;<br align="left"/>let mut _58: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _59: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _60: anchor_lang::error::Source;<br align="left"/>let mut _61: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _62: (usize, usize);<br align="left"/>let mut _63: usize;<br align="left"/>let mut _64: u8;<br align="left"/>let mut _65: usize;<br align="left"/>let mut _66: usize;<br align="left"/>let mut _67: (usize, bool);<br align="left"/>let _68: usize;<br align="left"/>let mut _69: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _70: u64;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u64&gt;;<br align="left"/>let mut _72: std::result::Result&lt;u64, anchor_lang::error::Error&gt;;<br align="left"/>let mut _73: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _74: Closure(DefId(0:1377 ~ kamino_lending[6389]::lending_market::lending_operations::utils::update_elevation_group_debt_trackers_on_new_deposit::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: u64;<br align="left"/>let mut _80: u64;<br align="left"/>let _81: usize;<br align="left"/>let mut _82: usize;<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: (u64, bool);<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: ();<br align="left"/>let mut _87: &amp;ReErased LendingError;<br align="left"/>let mut _88: &amp;ReErased LendingError;<br align="left"/>let mut _89: &amp;ReErased LendingError;<br align="left"/>let mut _90: &amp;ReErased LendingError;<br align="left"/>let mut _91: &amp;ReErased state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _92: bool;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>debug total_borrowed =&gt; _1;<br align="left"/>debug obligation_collateral =&gt; _2;<br align="left"/>debug pre_deposit_count =&gt; _3;<br align="left"/>debug elevation_group =&gt; _4;<br align="left"/>debug deposit_reserve_pk =&gt; _5;<br align="left"/>debug deposit_reserve =&gt; _6;<br align="left"/>debug max_reserves_as_collateral_check =&gt; _7;<br align="left"/>debug elevation_group =&gt; _10;<br align="left"/>debug elevation_group_index =&gt; _68;<br align="left"/>debug total_borrowed =&gt; _70;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>>;
    bb0__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_92 = const false<br/>StorageLive(_8)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Some).0: &amp;state::lending_market::ElevationGroup)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;((*_10).7: anchor_lang::prelude::Pubkey)<br/>StorageLive(_14)<br/>_14 = &amp;(*_5)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _13, move _14)</td></tr></table>>];
    bb2__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_88 = const _<br/>_20 = &amp;(*_88)<br/></td></tr><tr><td align="left">_19 = LendingError::name(move _20)</td></tr></table>>];
    bb4__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = LendingError::ElevationGroupDebtReserveAsCollateral<br/></td></tr><tr><td align="left">_22 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _23)</td></tr></table>>];
    bb5__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_87 = const _<br/>_25 = &amp;(*_87)<br/></td></tr><tr><td align="left">_24 = &lt;LendingError as ToString&gt;::to_string(move _25)</td></tr></table>>];
    bb6__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2697_u32 }<br/>_28 = anchor_lang::error::ErrorOrigin::Source(move _29)<br/>StorageDead(_29)<br/>_27 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _28)<br/>StorageDead(_28)<br/>StorageLive(_30)<br/>_30 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_18 = anchor_lang::error::AnchorError { error_name: move _19, error_code_number: move _22, error_msg: move _24, error_origin: move _27, compared_values: move _30 }<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _18)</td></tr></table>>];
    bb7__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = ((*_10).7: anchor_lang::prelude::Pubkey)<br/>StorageLive(_33)<br/>_33 = (*_5)<br/>_31 = (move _32, move _33)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_16 = anchor_lang::error::Error::with_pubkeys(move _17, move _31)</td></tr></table>>];
    bb8__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_17)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _16)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>_11 = const ()<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;_7<br/>StorageLive(_37)<br/>_91 = const _<br/>_37 = &amp;(*_91)<br/></td></tr><tr><td align="left">_35 = &lt;state::types::MaxReservesAsCollateralCheck as PartialEq&gt;::eq(move _36, move _37)</td></tr></table>>];
    bb10__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb11__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = ((*_10).5: u8)<br/></td></tr><tr><td align="left">_41 = &lt;usize as From&lt;u8&gt;&gt;::from(move _42)</td></tr></table>>];
    bb12__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _3<br/>_45 = CheckedAdd(_44, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_45.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _44, const 1_usize)</td></tr></table>>];
    bb13__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_43 = move (_45.0: usize)<br/>StorageDead(_44)<br/>_40 = Lt(move _41, move _43)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb14__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_90 = const _<br/>_51 = &amp;(*_90)<br/></td></tr><tr><td align="left">_50 = LendingError::name(move _51)</td></tr></table>>];
    bb15__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = LendingError::ObligationCollateralExceedsElevationGroupLimit<br/></td></tr><tr><td align="left">_53 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _54)</td></tr></table>>];
    bb16__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_89 = const _<br/>_56 = &amp;(*_89)<br/></td></tr><tr><td align="left">_55 = &lt;LendingError as ToString&gt;::to_string(move _56)</td></tr></table>>];
    bb17__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2704_u32 }<br/>_59 = anchor_lang::error::ErrorOrigin::Source(move _60)<br/>StorageDead(_60)<br/>_58 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _59)<br/>StorageDead(_59)<br/>StorageLive(_61)<br/>_61 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_49 = anchor_lang::error::AnchorError { error_name: move _50, error_code_number: move _53, error_msg: move _55, error_origin: move _58, compared_values: move _61 }<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _49)</td></tr></table>>];
    bb18__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_92 = const true<br/>StorageDead(_49)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = ((*_10).5: u8)<br/></td></tr><tr><td align="left">_63 = &lt;usize as From&lt;u8&gt;&gt;::from(move _64)</td></tr></table>>];
    bb19__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _3<br/>_67 = CheckedAdd(_66, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_67.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _66, const 1_usize)</td></tr></table>>];
    bb20__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_65 = move (_67.0: usize)<br/>StorageDead(_66)<br/>_62 = (move _63, move _65)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>_92 = const false<br/></td></tr><tr><td align="left">_47 = anchor_lang::error::Error::with_values::&lt;usize, usize&gt;(move _48, move _62)</td></tr></table>>];
    bb21__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_92 = const false<br/>StorageDead(_48)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _47)<br/>StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_39 = const ()<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_34 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>_34 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_10)<br/></td></tr><tr><td align="left">_68 = state::lending_market::ElevationGroup::get_index(move _69)</td></tr></table>>];
    bb25__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _1<br/>StorageLive(_74)<br/>_74 = {closure@programs\klend\src\lending_market\lending_operations.rs:2714:29: 2714:31}<br/></td></tr><tr><td align="left">_72 = std::option::Option::&lt;u64&gt;::ok_or_else::&lt;anchor_lang::error::Error, {closure@programs\klend\src\lending_market\lending_operations.rs:2714:29: 2714:31}&gt;(move _73, move _74)</td></tr></table>>];
    bb26__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb27__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_75 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb28__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_71 as Continue).0: u64)<br/>_70 = _79<br/>StorageDead(_79)<br/>_93 = discriminant(_71)<br/>StorageDead(_71)<br/>StorageLive(_80)<br/>_80 = _70<br/>StorageLive(_81)<br/>_81 = _68<br/>_82 = Len(((*_6).12: [u64; 32]))<br/>_83 = Lt(_81, _82)<br/></td></tr><tr><td align="left">assert(move _83, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _82, _81)</td></tr></table>>];
    bb29__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb30__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_95 = discriminant(_71)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_84 = CheckedAdd(((*_6).12: [u64; 32])[_81], _80)<br/></td></tr><tr><td align="left">assert(!move (_84.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, ((*_6).12: [u64; 32])[_81], move _80)</td></tr></table>>];
    bb33__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">((*_6).12: [u64; 32])[_81] = move (_84.0: u64)<br/>StorageDead(_80)<br/>StorageDead(_81)<br/>StorageLive(_85)<br/>_85 = _70<br/>((*_2).3: u64) = move _85<br/>StorageDead(_85)<br/>_8 = const ()<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_86)<br/>_86 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _86)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">return</td></tr></table>>];
    bb38__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb39__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb40__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb41__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left" balign="left">_97 = discriminant(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb43__0_1376 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">switchInt(_92)</td></tr></table>>];
    bb0__0_1376 -> bb1__0_1376 [label="1"];
    bb0__0_1376 -> bb34__0_1376 [label="otherwise"];
    bb1__0_1376 -> bb2__0_1376 [label="return"];
    bb2__0_1376 -> bb9__0_1376 [label="0"];
    bb2__0_1376 -> bb3__0_1376 [label="otherwise"];
    bb3__0_1376 -> bb4__0_1376 [label="return"];
    bb4__0_1376 -> bb5__0_1376 [label="return"];
    bb4__0_1376 -> bb39__0_1376 [label="unwind"];
    bb5__0_1376 -> bb6__0_1376 [label="return"];
    bb5__0_1376 -> bb39__0_1376 [label="unwind"];
    bb6__0_1376 -> bb7__0_1376 [label="return"];
    bb6__0_1376 -> bb40__0_1376 [label="unwind"];
    bb7__0_1376 -> bb8__0_1376 [label="return"];
    bb7__0_1376 -> bb40__0_1376 [label="unwind"];
    bb8__0_1376 -> bb36__0_1376 [label=""];
    bb9__0_1376 -> bb10__0_1376 [label="return"];
    bb10__0_1376 -> bb23__0_1376 [label="0"];
    bb10__0_1376 -> bb11__0_1376 [label="otherwise"];
    bb11__0_1376 -> bb12__0_1376 [label="return"];
    bb12__0_1376 -> bb13__0_1376 [label="success"];
    bb13__0_1376 -> bb22__0_1376 [label="0"];
    bb13__0_1376 -> bb14__0_1376 [label="otherwise"];
    bb14__0_1376 -> bb15__0_1376 [label="return"];
    bb15__0_1376 -> bb16__0_1376 [label="return"];
    bb15__0_1376 -> bb38__0_1376 [label="unwind"];
    bb16__0_1376 -> bb17__0_1376 [label="return"];
    bb16__0_1376 -> bb38__0_1376 [label="unwind"];
    bb17__0_1376 -> bb18__0_1376 [label="return"];
    bb17__0_1376 -> bb40__0_1376 [label="unwind"];
    bb18__0_1376 -> bb19__0_1376 [label="return"];
    bb18__0_1376 -> bb43__0_1376 [label="unwind"];
    bb19__0_1376 -> bb20__0_1376 [label="success"];
    bb19__0_1376 -> bb43__0_1376 [label="unwind"];
    bb20__0_1376 -> bb21__0_1376 [label="return"];
    bb20__0_1376 -> bb43__0_1376 [label="unwind"];
    bb21__0_1376 -> bb36__0_1376 [label=""];
    bb22__0_1376 -> bb24__0_1376 [label=""];
    bb23__0_1376 -> bb24__0_1376 [label=""];
    bb24__0_1376 -> bb25__0_1376 [label="return"];
    bb25__0_1376 -> bb26__0_1376 [label="return"];
    bb26__0_1376 -> bb27__0_1376 [label="return"];
    bb26__0_1376 -> bb40__0_1376 [label="unwind"];
    bb27__0_1376 -> bb28__0_1376 [label="0"];
    bb27__0_1376 -> bb30__0_1376 [label="1"];
    bb27__0_1376 -> bb29__0_1376 [label="otherwise"];
    bb28__0_1376 -> bb32__0_1376 [label="success"];
    bb30__0_1376 -> bb31__0_1376 [label="return"];
    bb30__0_1376 -> bb41__0_1376 [label="unwind"];
    bb31__0_1376 -> bb36__0_1376 [label=""];
    bb32__0_1376 -> bb33__0_1376 [label="success"];
    bb33__0_1376 -> bb35__0_1376 [label=""];
    bb34__0_1376 -> bb35__0_1376 [label=""];
    bb35__0_1376 -> bb37__0_1376 [label=""];
    bb36__0_1376 -> bb37__0_1376 [label=""];
    bb38__0_1376 -> bb40__0_1376 [label="return"];
    bb39__0_1376 -> bb40__0_1376 [label="return"];
    bb41__0_1376 -> bb40__0_1376 [label=""];
    bb42__0_1376 -> bb40__0_1376 [label="return"];
    bb43__0_1376 -> bb40__0_1376 [label="0"];
    bb43__0_1376 -> bb42__0_1376 [label="otherwise"];
}
