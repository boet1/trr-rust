digraph Mir_0_13845 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn kamino_lending::withdraw_referrer_fees(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_withdraw_referrer_fees::WithdrawReferrerFees&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let mut _12: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_withdraw_referrer_fees::WithdrawReferrerFees&lt;ReErased&gt;&gt;;<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_withdraw_referrer_fees::WithdrawReferrerFees&lt;ReErased&gt;;<br align="left"/>let mut _14: isize;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>>;
    bb0__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_13 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_referrer_fees::WithdrawReferrerFees&lt;'_&gt;)<br/>_6 = &amp;((*_13).6: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = utils::constraints::emergency_mode_disabled(move _5)</td></tr></table>>];
    bb1__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_14 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>_12 = move _1<br/></td></tr><tr><td align="left">_0 = handlers::handler_withdraw_referrer_fees::process(move _12)</td></tr></table>>];
    bb4__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_16 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb10__0_13845 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left" balign="left">_18 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_13845 -> bb1__0_13845 [label="return"];
    bb1__0_13845 -> bb2__0_13845 [label="return"];
    bb1__0_13845 -> bb9__0_13845 [label="unwind"];
    bb2__0_13845 -> bb3__0_13845 [label="0"];
    bb2__0_13845 -> bb5__0_13845 [label="1"];
    bb2__0_13845 -> bb4__0_13845 [label="otherwise"];
    bb3__0_13845 -> bb7__0_13845 [label="return"];
    bb5__0_13845 -> bb6__0_13845 [label="return"];
    bb5__0_13845 -> bb10__0_13845 [label="unwind"];
    bb6__0_13845 -> bb8__0_13845 [label=""];
    bb7__0_13845 -> bb8__0_13845 [label=""];
    bb10__0_13845 -> bb9__0_13845 [label=""];
}
