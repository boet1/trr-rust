digraph Mir_0_1382 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_withdraw_obligation_invariants(_1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: &amp;ReErased state::obligation::Obligation, _3: &amp;ReErased state::reserve::Reserve, _4: u8, _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _7: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _8: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _14: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _15: u128;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _19: &amp;ReErased i32;<br align="left"/>let _20: i32;<br align="left"/>let _21: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _22: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _26: &amp;ReErased i32;<br align="left"/>let _27: i32;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _30: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let _32: ();<br align="left"/>let mut _33: &amp;ReErased str;<br align="left"/>let _34: &amp;ReErased str;<br align="left"/>let mut _35: &amp;ReErased std::string::String;<br align="left"/>let _36: &amp;ReErased std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let _38: std::string::String;<br align="left"/>let mut _39: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _43: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _47: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _48: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _50: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _51: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _53: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased &amp;ReErased str;<br align="left"/>let _55: &amp;ReErased &amp;ReErased str;<br align="left"/>let _56: &amp;ReErased str;<br align="left"/>let mut _57: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _58: anchor_lang::error::Error;<br align="left"/>let mut _59: anchor_lang::error::AnchorError;<br align="left"/>let mut _60: std::string::String;<br align="left"/>let mut _61: &amp;ReErased LendingError;<br align="left"/>let _62: LendingError;<br align="left"/>let mut _63: u32;<br align="left"/>let mut _64: LendingError;<br align="left"/>let mut _65: std::string::String;<br align="left"/>let mut _66: &amp;ReErased LendingError;<br align="left"/>let _67: LendingError;<br align="left"/>let mut _68: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _69: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _70: anchor_lang::error::Source;<br align="left"/>let mut _71: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _75: &amp;ReErased i32;<br align="left"/>let _76: i32;<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: &amp;ReErased i32;<br align="left"/>let _80: i32;<br align="left"/>let mut _81: !;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: &amp;ReErased std::string::String;<br align="left"/>let _86: &amp;ReErased std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let mut _89: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _93: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _97: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _98: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _100: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _101: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _103: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _104: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _105: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _106: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _108: anchor_lang::error::Error;<br align="left"/>let mut _109: anchor_lang::error::AnchorError;<br align="left"/>let mut _110: std::string::String;<br align="left"/>let mut _111: &amp;ReErased LendingError;<br align="left"/>let _112: LendingError;<br align="left"/>let mut _113: u32;<br align="left"/>let mut _114: LendingError;<br align="left"/>let mut _115: std::string::String;<br align="left"/>let mut _116: &amp;ReErased LendingError;<br align="left"/>let _117: LendingError;<br align="left"/>let mut _118: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _119: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _120: anchor_lang::error::Source;<br align="left"/>let mut _121: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _122: ();<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _125: &amp;ReErased i32;<br align="left"/>let _126: i32;<br align="left"/>let _127: ();<br align="left"/>let mut _128: bool;<br align="left"/>let mut _129: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _130: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let _134: ();<br align="left"/>let mut _135: &amp;ReErased str;<br align="left"/>let _136: &amp;ReErased str;<br align="left"/>let mut _137: &amp;ReErased std::string::String;<br align="left"/>let _138: &amp;ReErased std::string::String;<br align="left"/>let _139: std::string::String;<br align="left"/>let _140: std::string::String;<br align="left"/>let mut _141: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _144: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _145: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _146: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _148: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _149: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _150: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _152: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _153: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _155: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _156: &amp;ReErased &amp;ReErased str;<br align="left"/>let _157: &amp;ReErased &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _160: anchor_lang::error::Error;<br align="left"/>let mut _161: anchor_lang::error::AnchorError;<br align="left"/>let mut _162: std::string::String;<br align="left"/>let mut _163: &amp;ReErased LendingError;<br align="left"/>let _164: LendingError;<br align="left"/>let mut _165: u32;<br align="left"/>let mut _166: LendingError;<br align="left"/>let mut _167: std::string::String;<br align="left"/>let mut _168: &amp;ReErased LendingError;<br align="left"/>let _169: LendingError;<br align="left"/>let mut _170: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _171: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _172: anchor_lang::error::Source;<br align="left"/>let mut _173: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _174: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _175: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _176: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _177: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _178: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _181: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _182: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _183: u8;<br align="left"/>let _184: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _185: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _186: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _189: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _190: bool;<br align="left"/>let mut _191: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _192: &amp;ReErased i32;<br align="left"/>let _193: i32;<br align="left"/>let mut _194: !;<br align="left"/>let _195: ();<br align="left"/>let mut _196: &amp;ReErased str;<br align="left"/>let _197: &amp;ReErased str;<br align="left"/>let mut _198: &amp;ReErased std::string::String;<br align="left"/>let _199: &amp;ReErased std::string::String;<br align="left"/>let _200: std::string::String;<br align="left"/>let _201: std::string::String;<br align="left"/>let mut _202: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _205: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _206: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _207: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _210: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _211: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _212: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _213: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _214: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _215: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _216: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _217: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _218: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _219: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _220: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _221: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased &amp;ReErased str;<br align="left"/>let _223: &amp;ReErased &amp;ReErased str;<br align="left"/>let _224: &amp;ReErased str;<br align="left"/>let mut _225: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _226: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _227: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _228: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _229: [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let mut _230: core::fmt::rt::Placeholder;<br align="left"/>let mut _231: core::fmt::rt::Alignment;<br align="left"/>let mut _232: core::fmt::rt::Count;<br align="left"/>let mut _233: core::fmt::rt::Count;<br align="left"/>let mut _234: core::fmt::rt::Placeholder;<br align="left"/>let mut _235: core::fmt::rt::Alignment;<br align="left"/>let mut _236: core::fmt::rt::Count;<br align="left"/>let mut _237: core::fmt::rt::Count;<br align="left"/>let mut _238: core::fmt::rt::Placeholder;<br align="left"/>let mut _239: core::fmt::rt::Alignment;<br align="left"/>let mut _240: core::fmt::rt::Count;<br align="left"/>let mut _241: core::fmt::rt::Count;<br align="left"/>let mut _242: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _243: anchor_lang::error::Error;<br align="left"/>let mut _244: anchor_lang::error::AnchorError;<br align="left"/>let mut _245: std::string::String;<br align="left"/>let mut _246: &amp;ReErased LendingError;<br align="left"/>let _247: LendingError;<br align="left"/>let mut _248: u32;<br align="left"/>let mut _249: LendingError;<br align="left"/>let mut _250: std::string::String;<br align="left"/>let mut _251: &amp;ReErased LendingError;<br align="left"/>let _252: LendingError;<br align="left"/>let mut _253: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _254: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _255: anchor_lang::error::Source;<br align="left"/>let mut _256: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _257: ();<br align="left"/>let mut _258: &amp;ReErased LendingError;<br align="left"/>let mut _259: &amp;ReErased LendingError;<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _261: &amp;ReErased LendingError;<br align="left"/>let mut _262: &amp;ReErased LendingError;<br align="left"/>let mut _263: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _264: &amp;ReErased LendingError;<br align="left"/>let mut _265: &amp;ReErased LendingError;<br align="left"/>let mut _266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _267: &amp;ReErased LendingError;<br align="left"/>let mut _268: &amp;ReErased LendingError;<br align="left"/>let mut _269: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _270: &amp;ReErased i32;<br align="left"/>let mut _271: &amp;ReErased i32;<br align="left"/>let mut _272: &amp;ReErased i32;<br align="left"/>let mut _273: &amp;ReErased i32;<br align="left"/>let mut _274: &amp;ReErased i32;<br align="left"/>let mut _275: &amp;ReErased i32;<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug reserve_liquidation_threshold_pct =&gt; _4;<br align="left"/>debug previous_collateral_asset_mv =&gt; _5;<br align="left"/>debug min_accepted_net_value =&gt; _6;<br align="left"/>debug asset_mv =&gt; _7;<br align="left"/>debug new_total_deposited_mv =&gt; _10;<br align="left"/>debug debt_value_bf =&gt; _14;<br align="left"/>debug new_collateral_asset_mv =&gt; _21;<br align="left"/>debug res =&gt; _38;<br align="left"/>debug res =&gt; _88;<br align="left"/>debug res =&gt; _140;<br align="left"/>debug new_ltv =&gt; _174;<br align="left"/>debug new_unhealthy_borrow_value =&gt; _177;<br align="left"/>debug new_unhealthy_ltv =&gt; _184;<br align="left"/>debug res =&gt; _201;<br align="left"/>>;
    bb0__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_3)<br/>StorageLive(_9)<br/>_9 = _1<br/></td></tr><tr><td align="left">_7 = calculate_market_value_from_liquidity_amount(move _8, move _9)</td></tr></table>>];
    bb1__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = ((*_2).6: u128)<br/></td></tr><tr><td align="left">_11 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _12)</td></tr></table>>];
    bb2__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>_13 = _7<br/></td></tr><tr><td align="left">_10 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _11, move _13)</td></tr></table>>];
    bb3__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_2).8: u128)<br/></td></tr><tr><td align="left">_14 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _15)</td></tr></table>>];
    bb4__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_5<br/>StorageLive(_19)<br/>_275 = const _<br/>_19 = &amp;(*_275)<br/></td></tr><tr><td align="left">_17 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&lt;i32&gt;&gt;::ne(move _18, move _19)</td></tr></table>>];
    bb5__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb6__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _5<br/>StorageLive(_23)<br/>_23 = _7<br/></td></tr><tr><td align="left">_21 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _22, move _23)</td></tr></table>>];
    bb7__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;_21<br/>StorageLive(_26)<br/>_274 = const _<br/>_26 = &amp;(*_274)<br/></td></tr><tr><td align="left">_24 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _25, move _26)</td></tr></table>>];
    bb8__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb9__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_21<br/>StorageLive(_30)<br/>_30 = &amp;_6<br/></td></tr><tr><td align="left">_28 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _29, move _30)</td></tr></table>>];
    bb10__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb11__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_260 = const _<br/>_42 = &amp;(*_260)<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_21<br/></td></tr><tr><td align="left">_51 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _52)</td></tr></table>>];
    bb12__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _49)</td></tr></table>>];
    bb13__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_3)<br/></td></tr><tr><td align="left">_56 = reserve::Reserve::token_symbol(move _57)</td></tr></table>>];
    bb14__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _54)</td></tr></table>>];
    bb15__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_47 = [move _48, move _53]<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_39 = Arguments::&lt;'_&gt;::new_v1(move _40, move _44)</td></tr></table>>];
    bb16__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = format(move _39)</td></tr></table>>];
    bb17__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>_37 = move _38<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::string::String as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb18__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = solana_program::log::sol_log(move _33)</td></tr></table>>];
    bb19__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb20__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_259 = const _<br/>_61 = &amp;(*_259)<br/></td></tr><tr><td align="left">_60 = LendingError::name(move _61)</td></tr></table>>];
    bb21__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = LendingError::NetValueRemainingTooSmall<br/></td></tr><tr><td align="left">_63 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _64)</td></tr></table>>];
    bb22__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_258 = const _<br/>_66 = &amp;(*_258)<br/></td></tr><tr><td align="left">_65 = &lt;LendingError as ToString&gt;::to_string(move _66)</td></tr></table>>];
    bb23__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2828_u32 }<br/>_69 = anchor_lang::error::ErrorOrigin::Source(move _70)<br/>StorageDead(_70)<br/>_68 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _69)<br/>StorageDead(_69)<br/>StorageLive(_71)<br/>_71 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_59 = anchor_lang::error::AnchorError { error_name: move _60, error_code_number: move _63, error_msg: move _65, error_origin: move _68, compared_values: move _71 }<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _59)</td></tr></table>>];
    bb24__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _58)<br/>StorageDead(_58)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_16 = const ()<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_10<br/>StorageLive(_75)<br/>_273 = const _<br/>_75 = &amp;(*_273)<br/></td></tr><tr><td align="left">_73 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&lt;i32&gt;&gt;::eq(move _74, move _75)</td></tr></table>>];
    bb30__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb31__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_14<br/>StorageLive(_79)<br/>_272 = const _<br/>_79 = &amp;(*_272)<br/></td></tr><tr><td align="left">_77 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _78, move _79)</td></tr></table>>];
    bb32__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb33__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_263 = const _<br/>_92 = &amp;(*_263)<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_14<br/></td></tr><tr><td align="left">_101 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _102)</td></tr></table>>];
    bb34__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = &amp;_101<br/>_99 = &amp;(*_100)<br/></td></tr><tr><td align="left">_98 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _99)</td></tr></table>>];
    bb35__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_10<br/></td></tr><tr><td align="left">_106 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _107)</td></tr></table>>];
    bb36__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _104)</td></tr></table>>];
    bb37__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_97 = [move _98, move _103]<br/>StorageDead(_103)<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_89 = Arguments::&lt;'_&gt;::new_v1(move _90, move _94)</td></tr></table>>];
    bb38__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = format(move _89)</td></tr></table>>];
    bb39__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>_87 = move _88<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::string::String as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb40__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_83 = &amp;(*_84)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb41__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb42__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_262 = const _<br/>_111 = &amp;(*_262)<br/></td></tr><tr><td align="left">_110 = LendingError::name(move _111)</td></tr></table>>];
    bb43__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = LendingError::LiabilitiesBiggerThanAssets<br/></td></tr><tr><td align="left">_113 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _114)</td></tr></table>>];
    bb44__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_261 = const _<br/>_116 = &amp;(*_261)<br/></td></tr><tr><td align="left">_115 = &lt;LendingError as ToString&gt;::to_string(move _116)</td></tr></table>>];
    bb45__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2837_u32 }<br/>_119 = anchor_lang::error::ErrorOrigin::Source(move _120)<br/>StorageDead(_120)<br/>_118 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _119)<br/>StorageDead(_119)<br/>StorageLive(_121)<br/>_121 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_109 = anchor_lang::error::AnchorError { error_name: move _110, error_code_number: move _113, error_msg: move _115, error_origin: move _118, compared_values: move _121 }<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _109)</td></tr></table>>];
    bb46__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _108)<br/>StorageDead(_108)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_72 = const ()<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_10<br/>StorageLive(_125)<br/>_271 = const _<br/>_125 = &amp;(*_271)<br/></td></tr><tr><td align="left">_123 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&lt;i32&gt;&gt;::ne(move _124, move _125)</td></tr></table>>];
    bb50__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb51__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = ((*_2).9: u128)<br/></td></tr><tr><td align="left">_130 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _131)</td></tr></table>>];
    bb52__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_129 = &amp;_130<br/>StorageDead(_131)<br/>StorageLive(_132)<br/>_132 = &amp;_10<br/></td></tr><tr><td align="left">_128 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _129, move _132)</td></tr></table>>];
    bb53__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb54__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_266 = const _<br/>_144 = &amp;(*_266)<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;_10<br/></td></tr><tr><td align="left">_153 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _154)</td></tr></table>>];
    bb55__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = &amp;_153<br/>_151 = &amp;(*_152)<br/></td></tr><tr><td align="left">_150 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _151)</td></tr></table>>];
    bb56__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;(*_3)<br/></td></tr><tr><td align="left">_158 = reserve::Reserve::token_symbol(move _159)</td></tr></table>>];
    bb57__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_157 = &amp;_158<br/>_156 = &amp;(*_157)<br/></td></tr><tr><td align="left">_155 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _156)</td></tr></table>>];
    bb58__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_149 = [move _150, move _155]<br/>StorageDead(_155)<br/>StorageDead(_150)<br/>_148 = &amp;_149<br/>_147 = &amp;(*_148)<br/>_146 = move _147 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_141 = Arguments::&lt;'_&gt;::new_v1(move _142, move _146)</td></tr></table>>];
    bb59__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = format(move _141)</td></tr></table>>];
    bb60__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_144)<br/>_139 = move _140<br/>StorageDead(_140)<br/>_138 = &amp;_139<br/>_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::string::String as Deref&gt;::deref(move _137)</td></tr></table>>];
    bb61__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_135 = &amp;(*_136)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_134 = solana_program::log::sol_log(move _135)</td></tr></table>>];
    bb62__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/></td></tr><tr><td align="left">drop(_139)</td></tr></table>>];
    bb63__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_265 = const _<br/>_163 = &amp;(*_265)<br/></td></tr><tr><td align="left">_162 = LendingError::name(move _163)</td></tr></table>>];
    bb64__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = LendingError::LiabilitiesBiggerThanAssets<br/></td></tr><tr><td align="left">_165 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _166)</td></tr></table>>];
    bb65__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_264 = const _<br/>_168 = &amp;(*_264)<br/></td></tr><tr><td align="left">_167 = &lt;LendingError as ToString&gt;::to_string(move _168)</td></tr></table>>];
    bb66__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2852_u32 }<br/>_171 = anchor_lang::error::ErrorOrigin::Source(move _172)<br/>StorageDead(_172)<br/>_170 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _171)<br/>StorageDead(_171)<br/>StorageLive(_173)<br/>_173 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_161 = anchor_lang::error::AnchorError { error_name: move _162, error_code_number: move _165, error_msg: move _167, error_origin: move _170, compared_values: move _173 }<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _161)</td></tr></table>>];
    bb67__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _160)<br/>StorageDead(_160)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>_127 = const ()<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = _14<br/>StorageLive(_176)<br/>_176 = _10<br/></td></tr><tr><td align="left">_174 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _175, move _176)</td></tr></table>>];
    bb69__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = ((*_2).11: u128)<br/></td></tr><tr><td align="left">_178 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _179)</td></tr></table>>];
    bb70__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = _7<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = _4<br/></td></tr><tr><td align="left">_182 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u8&gt;(move _183)</td></tr></table>>];
    bb71__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/></td></tr><tr><td align="left">_180 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _181, move _182)</td></tr></table>>];
    bb72__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_177 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _178, move _180)</td></tr></table>>];
    bb73__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = _177<br/>StorageLive(_186)<br/>_186 = _10<br/></td></tr><tr><td align="left">_184 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _185, move _186)</td></tr></table>>];
    bb74__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_174<br/>StorageLive(_189)<br/>_189 = &amp;_184<br/></td></tr><tr><td align="left">_187 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _188, move _189)</td></tr></table>>];
    bb75__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb76__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_174<br/>StorageLive(_192)<br/>_270 = const _<br/>_192 = &amp;(*_270)<br/></td></tr><tr><td align="left">_190 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&lt;i32&gt;&gt;::ne(move _191, move _192)</td></tr></table>>];
    bb77__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb78__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_269 = const _<br/>_205 = &amp;(*_269)<br/>_204 = &amp;(*_205)<br/>_203 = move _204 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_204)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;_174<br/></td></tr><tr><td align="left">_214 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _215)</td></tr></table>>];
    bb79__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>_213 = &amp;_214<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _212)</td></tr></table>>];
    bb80__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = &amp;_184<br/></td></tr><tr><td align="left">_219 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _220)</td></tr></table>>];
    bb81__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_218 = &amp;_219<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _217)</td></tr></table>>];
    bb82__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;(*_3)<br/></td></tr><tr><td align="left">_224 = reserve::Reserve::token_symbol(move _225)</td></tr></table>>];
    bb83__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_223 = &amp;_224<br/>_222 = &amp;(*_223)<br/></td></tr><tr><td align="left">_221 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _222)</td></tr></table>>];
    bb84__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_210 = [move _211, move _216, move _221]<br/>StorageDead(_221)<br/>StorageDead(_216)<br/>StorageDead(_211)<br/>_209 = &amp;_210<br/>_208 = &amp;(*_209)<br/>_207 = move _208 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_208)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_232)<br/>_232 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_233)<br/>_233 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_230 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _231, const 0_u32, move _232, move _233)</td></tr></table>>];
    bb85__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_236)<br/>_236 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_237)<br/>_237 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_234 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _235, const 0_u32, move _236, move _237)</td></tr></table>>];
    bb86__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_240)<br/>_240 = core::fmt::rt::Count::Implied<br/>StorageLive(_241)<br/>_241 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_238 = core::fmt::rt::Placeholder::new(const 2_usize, const ' ', move _239, const 0_u32, move _240, move _241)</td></tr></table>>];
    bb87__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>_229 = [move _230, move _234, move _238]<br/>StorageDead(_238)<br/>StorageDead(_234)<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/>StorageLive(_242)<br/></td></tr><tr><td align="left">_242 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb88__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">_202 = Arguments::&lt;'_&gt;::new_v1_formatted(move _203, move _207, move _226, move _242)</td></tr></table>>];
    bb89__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_226)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = format(move _202)</td></tr></table>>];
    bb90__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_209)<br/>StorageDead(_205)<br/>_200 = move _201<br/>StorageDead(_201)<br/>_199 = &amp;_200<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_197 = &lt;std::string::String as Deref&gt;::deref(move _198)</td></tr></table>>];
    bb91__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_196 = &amp;(*_197)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_195 = solana_program::log::sol_log(move _196)</td></tr></table>>];
    bb92__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/></td></tr><tr><td align="left">drop(_200)</td></tr></table>>];
    bb93__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_268 = const _<br/>_246 = &amp;(*_268)<br/></td></tr><tr><td align="left">_245 = LendingError::name(move _246)</td></tr></table>>];
    bb94__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = LendingError::WorseLtvThanUnhealthyLtv<br/></td></tr><tr><td align="left">_248 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _249)</td></tr></table>>];
    bb95__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_267 = const _<br/>_251 = &amp;(*_267)<br/></td></tr><tr><td align="left">_250 = &lt;LendingError as ToString&gt;::to_string(move _251)</td></tr></table>>];
    bb96__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 2871_u32 }<br/>_254 = anchor_lang::error::ErrorOrigin::Source(move _255)<br/>StorageDead(_255)<br/>_253 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _254)<br/>StorageDead(_254)<br/>StorageLive(_256)<br/>_256 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_244 = anchor_lang::error::AnchorError { error_name: move _245, error_code_number: move _248, error_msg: move _250, error_origin: move _253, compared_values: move _256 }<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _244)</td></tr></table>>];
    bb97__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _243)<br/>StorageDead(_243)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_122 = const ()<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>_122 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageLive(_257)<br/>_257 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _257)<br/>StorageDead(_257)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left">return</td></tr></table>>];
    bb106__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left">drop(_245)</td></tr></table>>];
    bb107__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">107 (cleanup)</td></tr><tr><td align="left">drop(_200)</td></tr></table>>];
    bb108__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left">drop(_162)</td></tr></table>>];
    bb109__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left">drop(_139)</td></tr></table>>];
    bb110__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb111__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb112__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb113__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb114__0_1382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1382 -> bb1__0_1382 [label="return"];
    bb1__0_1382 -> bb2__0_1382 [label="return"];
    bb2__0_1382 -> bb3__0_1382 [label="return"];
    bb3__0_1382 -> bb4__0_1382 [label="return"];
    bb4__0_1382 -> bb5__0_1382 [label="return"];
    bb5__0_1382 -> bb28__0_1382 [label="0"];
    bb5__0_1382 -> bb6__0_1382 [label="otherwise"];
    bb6__0_1382 -> bb7__0_1382 [label="return"];
    bb7__0_1382 -> bb8__0_1382 [label="return"];
    bb8__0_1382 -> bb26__0_1382 [label="0"];
    bb8__0_1382 -> bb9__0_1382 [label="otherwise"];
    bb9__0_1382 -> bb10__0_1382 [label="return"];
    bb10__0_1382 -> bb25__0_1382 [label="0"];
    bb10__0_1382 -> bb11__0_1382 [label="otherwise"];
    bb11__0_1382 -> bb12__0_1382 [label="return"];
    bb12__0_1382 -> bb13__0_1382 [label="return"];
    bb13__0_1382 -> bb14__0_1382 [label="return"];
    bb14__0_1382 -> bb15__0_1382 [label="return"];
    bb15__0_1382 -> bb16__0_1382 [label="return"];
    bb16__0_1382 -> bb17__0_1382 [label="return"];
    bb17__0_1382 -> bb18__0_1382 [label="return"];
    bb17__0_1382 -> bb113__0_1382 [label="unwind"];
    bb18__0_1382 -> bb19__0_1382 [label="return"];
    bb18__0_1382 -> bb113__0_1382 [label="unwind"];
    bb19__0_1382 -> bb20__0_1382 [label="return"];
    bb19__0_1382 -> bb114__0_1382 [label="unwind"];
    bb20__0_1382 -> bb21__0_1382 [label="return"];
    bb21__0_1382 -> bb22__0_1382 [label="return"];
    bb21__0_1382 -> bb112__0_1382 [label="unwind"];
    bb22__0_1382 -> bb23__0_1382 [label="return"];
    bb22__0_1382 -> bb112__0_1382 [label="unwind"];
    bb23__0_1382 -> bb24__0_1382 [label="return"];
    bb23__0_1382 -> bb114__0_1382 [label="unwind"];
    bb24__0_1382 -> bb104__0_1382 [label=""];
    bb25__0_1382 -> bb27__0_1382 [label=""];
    bb26__0_1382 -> bb27__0_1382 [label=""];
    bb27__0_1382 -> bb29__0_1382 [label=""];
    bb28__0_1382 -> bb29__0_1382 [label=""];
    bb29__0_1382 -> bb30__0_1382 [label="return"];
    bb30__0_1382 -> bb48__0_1382 [label="0"];
    bb30__0_1382 -> bb31__0_1382 [label="otherwise"];
    bb31__0_1382 -> bb32__0_1382 [label="return"];
    bb32__0_1382 -> bb47__0_1382 [label="0"];
    bb32__0_1382 -> bb33__0_1382 [label="otherwise"];
    bb33__0_1382 -> bb34__0_1382 [label="return"];
    bb34__0_1382 -> bb35__0_1382 [label="return"];
    bb35__0_1382 -> bb36__0_1382 [label="return"];
    bb36__0_1382 -> bb37__0_1382 [label="return"];
    bb37__0_1382 -> bb38__0_1382 [label="return"];
    bb38__0_1382 -> bb39__0_1382 [label="return"];
    bb39__0_1382 -> bb40__0_1382 [label="return"];
    bb39__0_1382 -> bb111__0_1382 [label="unwind"];
    bb40__0_1382 -> bb41__0_1382 [label="return"];
    bb40__0_1382 -> bb111__0_1382 [label="unwind"];
    bb41__0_1382 -> bb42__0_1382 [label="return"];
    bb41__0_1382 -> bb114__0_1382 [label="unwind"];
    bb42__0_1382 -> bb43__0_1382 [label="return"];
    bb43__0_1382 -> bb44__0_1382 [label="return"];
    bb43__0_1382 -> bb110__0_1382 [label="unwind"];
    bb44__0_1382 -> bb45__0_1382 [label="return"];
    bb44__0_1382 -> bb110__0_1382 [label="unwind"];
    bb45__0_1382 -> bb46__0_1382 [label="return"];
    bb45__0_1382 -> bb114__0_1382 [label="unwind"];
    bb46__0_1382 -> bb104__0_1382 [label=""];
    bb47__0_1382 -> bb49__0_1382 [label=""];
    bb48__0_1382 -> bb49__0_1382 [label=""];
    bb49__0_1382 -> bb50__0_1382 [label="return"];
    bb50__0_1382 -> bb101__0_1382 [label="0"];
    bb50__0_1382 -> bb51__0_1382 [label="otherwise"];
    bb51__0_1382 -> bb52__0_1382 [label="return"];
    bb52__0_1382 -> bb53__0_1382 [label="return"];
    bb53__0_1382 -> bb68__0_1382 [label="0"];
    bb53__0_1382 -> bb54__0_1382 [label="otherwise"];
    bb54__0_1382 -> bb55__0_1382 [label="return"];
    bb55__0_1382 -> bb56__0_1382 [label="return"];
    bb56__0_1382 -> bb57__0_1382 [label="return"];
    bb57__0_1382 -> bb58__0_1382 [label="return"];
    bb58__0_1382 -> bb59__0_1382 [label="return"];
    bb59__0_1382 -> bb60__0_1382 [label="return"];
    bb60__0_1382 -> bb61__0_1382 [label="return"];
    bb60__0_1382 -> bb109__0_1382 [label="unwind"];
    bb61__0_1382 -> bb62__0_1382 [label="return"];
    bb61__0_1382 -> bb109__0_1382 [label="unwind"];
    bb62__0_1382 -> bb63__0_1382 [label="return"];
    bb62__0_1382 -> bb114__0_1382 [label="unwind"];
    bb63__0_1382 -> bb64__0_1382 [label="return"];
    bb64__0_1382 -> bb65__0_1382 [label="return"];
    bb64__0_1382 -> bb108__0_1382 [label="unwind"];
    bb65__0_1382 -> bb66__0_1382 [label="return"];
    bb65__0_1382 -> bb108__0_1382 [label="unwind"];
    bb66__0_1382 -> bb67__0_1382 [label="return"];
    bb66__0_1382 -> bb114__0_1382 [label="unwind"];
    bb67__0_1382 -> bb103__0_1382 [label=""];
    bb68__0_1382 -> bb69__0_1382 [label="return"];
    bb69__0_1382 -> bb70__0_1382 [label="return"];
    bb70__0_1382 -> bb71__0_1382 [label="return"];
    bb71__0_1382 -> bb72__0_1382 [label="return"];
    bb72__0_1382 -> bb73__0_1382 [label="return"];
    bb73__0_1382 -> bb74__0_1382 [label="return"];
    bb74__0_1382 -> bb75__0_1382 [label="return"];
    bb75__0_1382 -> bb99__0_1382 [label="0"];
    bb75__0_1382 -> bb76__0_1382 [label="otherwise"];
    bb76__0_1382 -> bb77__0_1382 [label="return"];
    bb77__0_1382 -> bb98__0_1382 [label="0"];
    bb77__0_1382 -> bb78__0_1382 [label="otherwise"];
    bb78__0_1382 -> bb79__0_1382 [label="return"];
    bb79__0_1382 -> bb80__0_1382 [label="return"];
    bb80__0_1382 -> bb81__0_1382 [label="return"];
    bb81__0_1382 -> bb82__0_1382 [label="return"];
    bb82__0_1382 -> bb83__0_1382 [label="return"];
    bb83__0_1382 -> bb84__0_1382 [label="return"];
    bb84__0_1382 -> bb85__0_1382 [label="return"];
    bb85__0_1382 -> bb86__0_1382 [label="return"];
    bb86__0_1382 -> bb87__0_1382 [label="return"];
    bb87__0_1382 -> bb88__0_1382 [label="return"];
    bb88__0_1382 -> bb89__0_1382 [label="return"];
    bb89__0_1382 -> bb90__0_1382 [label="return"];
    bb90__0_1382 -> bb91__0_1382 [label="return"];
    bb90__0_1382 -> bb107__0_1382 [label="unwind"];
    bb91__0_1382 -> bb92__0_1382 [label="return"];
    bb91__0_1382 -> bb107__0_1382 [label="unwind"];
    bb92__0_1382 -> bb93__0_1382 [label="return"];
    bb92__0_1382 -> bb114__0_1382 [label="unwind"];
    bb93__0_1382 -> bb94__0_1382 [label="return"];
    bb94__0_1382 -> bb95__0_1382 [label="return"];
    bb94__0_1382 -> bb106__0_1382 [label="unwind"];
    bb95__0_1382 -> bb96__0_1382 [label="return"];
    bb95__0_1382 -> bb106__0_1382 [label="unwind"];
    bb96__0_1382 -> bb97__0_1382 [label="return"];
    bb96__0_1382 -> bb114__0_1382 [label="unwind"];
    bb97__0_1382 -> bb103__0_1382 [label=""];
    bb98__0_1382 -> bb100__0_1382 [label=""];
    bb99__0_1382 -> bb100__0_1382 [label=""];
    bb100__0_1382 -> bb102__0_1382 [label=""];
    bb101__0_1382 -> bb102__0_1382 [label=""];
    bb102__0_1382 -> bb105__0_1382 [label=""];
    bb103__0_1382 -> bb104__0_1382 [label=""];
    bb104__0_1382 -> bb105__0_1382 [label=""];
    bb106__0_1382 -> bb114__0_1382 [label="return"];
    bb107__0_1382 -> bb114__0_1382 [label="return"];
    bb108__0_1382 -> bb114__0_1382 [label="return"];
    bb109__0_1382 -> bb114__0_1382 [label="return"];
    bb110__0_1382 -> bb114__0_1382 [label="return"];
    bb111__0_1382 -> bb114__0_1382 [label="return"];
    bb112__0_1382 -> bb114__0_1382 [label="return"];
    bb113__0_1382 -> bb114__0_1382 [label="return"];
}
