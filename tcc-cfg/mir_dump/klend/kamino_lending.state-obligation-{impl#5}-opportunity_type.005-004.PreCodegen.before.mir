// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:842:1: 842:21>::opportunity_type` before PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:842:1: 842:21>::opportunity_type(_1: &obligation::ObligationOrder) -> OpportunityType {
    debug self => _1;
    let mut _0: state::order_operations::OpportunityType;
    let mut _2: std::result::Result<state::order_operations::OpportunityType, num_enum::TryFromPrimitiveError<state::order_operations::OpportunityType>>;
    let mut _3: u8;
    let mut _4: &str;
    let _5: &str;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = ((*_1).5: u8);
        _2 = <OpportunityType as TryFrom<u8>>::try_from(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "Invalid serialized opportunity";
        _4 = &(*_5);
        _0 = std::result::Result::<OpportunityType, TryFromPrimitiveError<OpportunityType>>::expect(move _2, move _4) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_4);
        StorageDead(_2);
        StorageDead(_5);
        return;
    }
}
