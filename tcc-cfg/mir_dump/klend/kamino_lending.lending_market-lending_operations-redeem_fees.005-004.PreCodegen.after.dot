digraph Mir_0_1289 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::redeem_fees(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64) -&gt; std::result::Result&lt;u64, anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _6: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: bool;<br align="left"/>let mut _14: !;<br align="left"/>let _15: ();<br align="left"/>let mut _16: &amp;ReErased str;<br align="left"/>let _17: &amp;ReErased str;<br align="left"/>let mut _18: &amp;ReErased std::string::String;<br align="left"/>let _19: &amp;ReErased std::string::String;<br align="left"/>let _20: std::string::String;<br align="left"/>let _21: std::string::String;<br align="left"/>let mut _22: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _23: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _25: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _26: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _31: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased u8;<br align="left"/>let _33: &amp;ReErased u8;<br align="left"/>let _34: state::last_update::PriceStatusFlags;<br align="left"/>let mut _35: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Placeholder;<br align="left"/>let mut _41: core::fmt::rt::Alignment;<br align="left"/>let mut _42: core::fmt::rt::Count;<br align="left"/>let mut _43: core::fmt::rt::Count;<br align="left"/>let mut _44: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _45: anchor_lang::error::Error;<br align="left"/>let mut _46: anchor_lang::error::AnchorError;<br align="left"/>let mut _47: std::string::String;<br align="left"/>let mut _48: &amp;ReErased LendingError;<br align="left"/>let _49: LendingError;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: LendingError;<br align="left"/>let mut _52: std::string::String;<br align="left"/>let mut _53: &amp;ReErased LendingError;<br align="left"/>let _54: LendingError;<br align="left"/>let mut _55: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _56: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _57: anchor_lang::error::Source;<br align="left"/>let mut _58: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _59: u64;<br align="left"/>let mut _60: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _61: ();<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: anchor_lang::error::Error;<br align="left"/>let mut _66: anchor_lang::error::AnchorError;<br align="left"/>let mut _67: std::string::String;<br align="left"/>let mut _68: &amp;ReErased LendingError;<br align="left"/>let _69: LendingError;<br align="left"/>let mut _70: u32;<br align="left"/>let mut _71: LendingError;<br align="left"/>let mut _72: std::string::String;<br align="left"/>let mut _73: &amp;ReErased LendingError;<br align="left"/>let _74: LendingError;<br align="left"/>let mut _75: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _76: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _77: anchor_lang::error::Source;<br align="left"/>let mut _78: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _79: ();<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _81: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _82: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _88: ();<br align="left"/>let _89: ();<br align="left"/>let mut _90: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: &amp;ReErased LendingError;<br align="left"/>let mut _93: &amp;ReErased LendingError;<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _95: &amp;ReErased LendingError;<br align="left"/>let mut _96: &amp;ReErased LendingError;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>debug reserve =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug res =&gt; _21;<br align="left"/>debug withdraw_amount =&gt; _59;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>>;
    bb0__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = last_update::LastUpdate::is_stale(move _7, move _8, const _)</td></tr></table>>];
    bb1__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: bool)<br/>_4 = _13<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb4__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_105 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_33 = &amp;(_34.0: u8)<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _32)</td></tr></table>>];
    bb8__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = [move _31]<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/>_27 = move _28 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_28)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_42)<br/>_42 = core::fmt::rt::Count::Implied<br/>StorageLive(_43)<br/>_43 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _41, const 8_u32, move _42, move _43)</td></tr></table>>];
    bb9__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/>StorageLive(_44)<br/></td></tr><tr><td align="left">_44 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb10__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">_22 = Arguments::&lt;'_&gt;::new_v1_formatted(move _23, move _27, move _36, move _44)</td></tr></table>>];
    bb11__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_36)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = format(move _22)</td></tr></table>>];
    bb12__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_25)<br/>_20 = move _21<br/>StorageDead(_21)<br/>_19 = &amp;_20<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::string::String as Deref&gt;::deref(move _18)</td></tr></table>>];
    bb13__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_16 = &amp;(*_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_15 = solana_program::log::sol_log(move _16)</td></tr></table>>];
    bb14__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb15__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_93 = const _<br/>_48 = &amp;(*_93)<br/></td></tr><tr><td align="left">_47 = LendingError::name(move _48)</td></tr></table>>];
    bb16__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_50 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _51)</td></tr></table>>];
    bb17__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_92 = const _<br/>_53 = &amp;(*_92)<br/></td></tr><tr><td align="left">_52 = &lt;LendingError as ToString&gt;::to_string(move _53)</td></tr></table>>];
    bb18__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 662_u32 }<br/>_56 = anchor_lang::error::ErrorOrigin::Source(move _57)<br/>StorageDead(_57)<br/>_55 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _56)<br/>StorageDead(_56)<br/>StorageLive(_58)<br/>_58 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_46 = anchor_lang::error::AnchorError { error_name: move _47, error_code_number: move _50, error_msg: move _52, error_origin: move _55, compared_values: move _58 }<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _46)</td></tr></table>>];
    bb19__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _59<br/>_62 = Eq(move _63, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb21__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_96 = const _<br/>_68 = &amp;(*_96)<br/></td></tr><tr><td align="left">_67 = LendingError::name(move _68)</td></tr></table>>];
    bb22__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = LendingError::InsufficientProtocolFeesToRedeem<br/></td></tr><tr><td align="left">_70 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _71)</td></tr></table>>];
    bb23__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_95 = const _<br/>_73 = &amp;(*_95)<br/></td></tr><tr><td align="left">_72 = &lt;LendingError as ToString&gt;::to_string(move _73)</td></tr></table>>];
    bb24__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 668_u32 }<br/>_76 = anchor_lang::error::ErrorOrigin::Source(move _77)<br/>StorageDead(_77)<br/>_75 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _76)<br/>StorageDead(_76)<br/>StorageLive(_78)<br/>_78 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_66 = anchor_lang::error::AnchorError { error_name: move _67, error_code_number: move _70, error_msg: move _72, error_origin: move _75, compared_values: move _78 }<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _66)</td></tr></table>>];
    bb25__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _65)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = const ()<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;mut ((*_1).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_83)<br/>_83 = _59<br/></td></tr><tr><td align="left">_81 = ReserveLiquidity::redeem_fees(move _82, move _83)</td></tr></table>>];
    bb27__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb28__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_84 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb29__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_80 as Continue).0: ())<br/>_79 = _88<br/>StorageDead(_88)<br/>_101 = discriminant(_80)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;mut ((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_89 = last_update::LastUpdate::mark_stale(move _90)</td></tr></table>>];
    bb30__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = move ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_87)<br/>_87 = move _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb31__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>_103 = discriminant(_80)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_91)<br/>_91 = _59<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Ok(move _91)<br/>StorageDead(_91)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb36__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb37__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb38__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb39__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb40__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_97 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_94 = const _<br/>_25 = &amp;(*_94)<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;((*_1).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_34 = last_update::LastUpdate::get_price_status(move _35)</td></tr></table>>];
    bb41__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_99 = discriminant(_5)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_1)<br/></td></tr><tr><td align="left">_59 = reserve::Reserve::calculate_redeem_fees(move _60)</td></tr></table>>];
    bb42__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1289 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1289 -> bb1__0_1289 [label="return"];
    bb1__0_1289 -> bb2__0_1289 [label="return"];
    bb1__0_1289 -> bb39__0_1289 [label="unwind"];
    bb2__0_1289 -> bb3__0_1289 [label="0"];
    bb2__0_1289 -> bb5__0_1289 [label="1"];
    bb2__0_1289 -> bb4__0_1289 [label="otherwise"];
    bb3__0_1289 -> bb41__0_1289 [label="0"];
    bb3__0_1289 -> bb40__0_1289 [label="otherwise"];
    bb5__0_1289 -> bb6__0_1289 [label="return"];
    bb5__0_1289 -> bb43__0_1289 [label="unwind"];
    bb6__0_1289 -> bb34__0_1289 [label=""];
    bb7__0_1289 -> bb8__0_1289 [label="return"];
    bb8__0_1289 -> bb9__0_1289 [label="return"];
    bb9__0_1289 -> bb10__0_1289 [label="return"];
    bb10__0_1289 -> bb11__0_1289 [label="return"];
    bb11__0_1289 -> bb12__0_1289 [label="return"];
    bb12__0_1289 -> bb13__0_1289 [label="return"];
    bb12__0_1289 -> bb38__0_1289 [label="unwind"];
    bb13__0_1289 -> bb14__0_1289 [label="return"];
    bb13__0_1289 -> bb38__0_1289 [label="unwind"];
    bb14__0_1289 -> bb15__0_1289 [label="return"];
    bb14__0_1289 -> bb39__0_1289 [label="unwind"];
    bb15__0_1289 -> bb16__0_1289 [label="return"];
    bb16__0_1289 -> bb17__0_1289 [label="return"];
    bb16__0_1289 -> bb37__0_1289 [label="unwind"];
    bb17__0_1289 -> bb18__0_1289 [label="return"];
    bb17__0_1289 -> bb37__0_1289 [label="unwind"];
    bb18__0_1289 -> bb19__0_1289 [label="return"];
    bb18__0_1289 -> bb39__0_1289 [label="unwind"];
    bb19__0_1289 -> bb34__0_1289 [label=""];
    bb20__0_1289 -> bb26__0_1289 [label="0"];
    bb20__0_1289 -> bb21__0_1289 [label="otherwise"];
    bb21__0_1289 -> bb22__0_1289 [label="return"];
    bb22__0_1289 -> bb23__0_1289 [label="return"];
    bb22__0_1289 -> bb36__0_1289 [label="unwind"];
    bb23__0_1289 -> bb24__0_1289 [label="return"];
    bb23__0_1289 -> bb36__0_1289 [label="unwind"];
    bb24__0_1289 -> bb25__0_1289 [label="return"];
    bb24__0_1289 -> bb39__0_1289 [label="unwind"];
    bb25__0_1289 -> bb33__0_1289 [label=""];
    bb26__0_1289 -> bb27__0_1289 [label="return"];
    bb27__0_1289 -> bb28__0_1289 [label="return"];
    bb27__0_1289 -> bb39__0_1289 [label="unwind"];
    bb28__0_1289 -> bb29__0_1289 [label="0"];
    bb28__0_1289 -> bb30__0_1289 [label="1"];
    bb28__0_1289 -> bb4__0_1289 [label="otherwise"];
    bb29__0_1289 -> bb32__0_1289 [label="return"];
    bb30__0_1289 -> bb31__0_1289 [label="return"];
    bb30__0_1289 -> bb42__0_1289 [label="unwind"];
    bb31__0_1289 -> bb33__0_1289 [label=""];
    bb32__0_1289 -> bb35__0_1289 [label=""];
    bb33__0_1289 -> bb35__0_1289 [label=""];
    bb34__0_1289 -> bb35__0_1289 [label=""];
    bb36__0_1289 -> bb39__0_1289 [label="return"];
    bb37__0_1289 -> bb39__0_1289 [label="return"];
    bb38__0_1289 -> bb39__0_1289 [label="return"];
    bb40__0_1289 -> bb7__0_1289 [label="return"];
    bb41__0_1289 -> bb20__0_1289 [label="return"];
    bb42__0_1289 -> bb39__0_1289 [label=""];
    bb43__0_1289 -> bb39__0_1289 [label=""];
}
