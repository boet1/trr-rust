digraph Mir_0_1902 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveLiquidity::new(_1: state::reserve::NewReserveLiquidityParams) -&gt; state::reserve::ReserveLiquidity<br align="left"/>let _2: anchor_lang::prelude::Pubkey;<br align="left"/>let _3: u8;<br align="left"/>let _4: anchor_lang::prelude::Pubkey;<br align="left"/>let _5: anchor_lang::prelude::Pubkey;<br align="left"/>let _6: anchor_lang::prelude::Pubkey;<br align="left"/>let _7: u128;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u8;<br align="left"/>let mut _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: state::reserve::BigFractionBytes;<br align="left"/>let mut _16: utils::fraction::BigFraction;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: [u64; 51_usize];<br align="left"/>let mut _20: [u128; 32_usize];<br align="left"/>debug params =&gt; _1;<br align="left"/>debug mint_pubkey =&gt; _2;<br align="left"/>debug mint_decimals =&gt; _3;<br align="left"/>debug mint_token_program =&gt; _4;<br align="left"/>debug supply_vault =&gt; _5;<br align="left"/>debug fee_vault =&gt; _6;<br align="left"/>debug market_price_sf =&gt; _7;<br align="left"/>debug initial_amount_deposited_in_reserve =&gt; _8;<br align="left"/>>;
    bb0__0_1902 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = (_1.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_3)<br/>_3 = (_1.1: u8)<br/>StorageLive(_4)<br/>_4 = (_1.2: anchor_lang::prelude::Pubkey)<br/>StorageLive(_5)<br/>_5 = (_1.3: anchor_lang::prelude::Pubkey)<br/>StorageLive(_6)<br/>_6 = (_1.4: anchor_lang::prelude::Pubkey)<br/>StorageLive(_7)<br/>_7 = (_1.5: u128)<br/>StorageLive(_8)<br/>_8 = (_1.6: u64)<br/>StorageLive(_9)<br/>_9 = _2<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _3<br/></td></tr><tr><td align="left">_10 = &lt;u8 as Into&lt;u64&gt;&gt;::into(move _11)</td></tr></table>>];
    bb1__0_1902 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>_12 = _5<br/>StorageLive(_13)<br/>_13 = _6<br/>StorageLive(_14)<br/>_14 = _8<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;utils::fraction::BigFraction as From&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::from(const _)</td></tr></table>>];
    bb2__0_1902 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">_15 = &lt;reserve::BigFractionBytes as From&lt;utils::fraction::BigFraction&gt;&gt;::from(move _16)</td></tr></table>>];
    bb3__0_1902 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = _7<br/>StorageLive(_18)<br/>_18 = _4<br/>StorageLive(_19)<br/>_19 = [const 0_u64; 51]<br/>StorageLive(_20)<br/>_20 = [const 0_u128; 32]<br/>_0 = ReserveLiquidity { mint_pubkey: move _9, supply_vault: move _12, fee_vault: move _13, available_amount: move _14, borrowed_amount_sf: const 0_u128, market_price_sf: move _17, market_price_last_updated_ts: const 0_u64, mint_decimals: move _10, deposit_limit_crossed_timestamp: const 0_u64, borrow_limit_crossed_timestamp: const 0_u64, cumulative_borrow_rate_bsf: move _15, accumulated_protocol_fees_sf: const 0_u128, accumulated_referrer_fees_sf: const 0_u128, pending_referrer_fees_sf: const 0_u128, absolute_referral_rate_sf: const 0_u128, token_program: move _18, padding2: move _19, padding3: move _20 }<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1902 -> bb1__0_1902 [label="return"];
    bb1__0_1902 -> bb2__0_1902 [label="return"];
    bb2__0_1902 -> bb3__0_1902 [label="return"];
}
