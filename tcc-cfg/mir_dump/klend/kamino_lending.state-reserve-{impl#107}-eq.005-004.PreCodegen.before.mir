// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:1134:44: 1134:53>::eq` before PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:1134:44: 1134:53>::eq(_1: &reserve::WithdrawalCaps, _2: &reserve::WithdrawalCaps) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: i64;
    let mut _5: i64;
    let mut _6: bool;
    let mut _7: i64;
    let mut _8: i64;
    let mut _9: bool;
    let mut _10: u64;
    let mut _11: u64;
    let mut _12: u64;
    let mut _13: u64;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).0: i64);
        StorageLive(_5);
        _5 = ((*_2).0: i64);
        _3 = Eq(move _4, move _5);
        switchInt(move _3) -> [0: bb6, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = ((*_1).1: i64);
        StorageLive(_8);
        _8 = ((*_2).1: i64);
        _6 = Eq(move _7, move _8);
        switchInt(move _6) -> [0: bb5, otherwise: bb2];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = ((*_1).2: u64);
        StorageLive(_11);
        _11 = ((*_2).2: u64);
        _9 = Eq(move _10, move _11);
        switchInt(move _9) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        _12 = ((*_1).3: u64);
        StorageLive(_13);
        _13 = ((*_2).3: u64);
        _0 = Eq(move _12, move _13);
        StorageDead(_13);
        StorageDead(_12);
        goto -> bb8;
    }

    bb4: {
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb7;
    }

    bb5: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb7;
    }

    bb6: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb7;
    }

    bb7: {
        _0 = const false;
        goto -> bb8;
    }

    bb8: {
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
