digraph Mir_0_2715 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn refresh_ix_utils::check_refresh(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)], _3: &amp;ReErased anchor_lang::prelude::Pubkey, _4: &amp;ReErased [state::reserve::ReserveFarmKind]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let _7: &amp;ReErased str;<br align="left"/>let _8: ();<br align="left"/>let _9: lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _14: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: bool;<br align="left"/>let mut _21: !;<br align="left"/>let _22: ();<br align="left"/>let mut _23: &amp;ReErased str;<br align="left"/>let _24: &amp;ReErased str;<br align="left"/>let mut _25: anchor_lang::error::Error;<br align="left"/>let mut _26: anchor_lang::error::AnchorError;<br align="left"/>let mut _27: std::string::String;<br align="left"/>let mut _28: &amp;ReErased LendingError;<br align="left"/>let _29: LendingError;<br align="left"/>let mut _30: u32;<br align="left"/>let mut _31: LendingError;<br align="left"/>let mut _32: std::string::String;<br align="left"/>let mut _33: &amp;ReErased LendingError;<br align="left"/>let _34: LendingError;<br align="left"/>let mut _35: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _36: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _37: anchor_lang::error::Source;<br align="left"/>let mut _38: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _39: usize;<br align="left"/>let mut _40: u16;<br align="left"/>let mut _41: std::result::Result&lt;u16, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _42: &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let _43: Closure(DefId(0:2716 ~ kamino_lending[6389]::utils::refresh_ix_utils::check_refresh::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, utils::refresh_ix_utils::AppendedIxType)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), (&amp;ReErased usize, &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;)]);<br align="left"/>let mut _44: &amp;ReErased usize;<br align="left"/>let mut _45: &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let _46: usize;<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: usize;<br align="left"/>let mut _49: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _52: usize;<br align="left"/>let mut _53: usize;<br align="left"/>let mut _54: bool;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _56: usize;<br align="left"/>let mut _57: usize;<br align="left"/>let mut _58: bool;<br align="left"/>let mut _59: usize;<br align="left"/>let mut _60: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _61: (usize, bool);<br align="left"/>let mut _62: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _63: std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _64: usize;<br align="left"/>let mut _65: usize;<br align="left"/>let mut _66: usize;<br align="left"/>let mut _67: (usize, bool);<br align="left"/>let mut _68: usize;<br align="left"/>let mut _69: (usize, bool);<br align="left"/>let mut _70: std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _71: usize;<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::iter::Take&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;&gt;;<br align="left"/>let mut _74: std::iter::Take&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;&gt;;<br align="left"/>let mut _75: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;;<br align="left"/>let mut _76: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _77: usize;<br align="left"/>let mut _78: std::iter::Take&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;&gt;;<br align="left"/>let mut _79: ();<br align="left"/>let _80: ();<br align="left"/>let mut _81: std::option::Option&lt;&amp;ReErased (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;;<br align="left"/>let mut _82: &amp;ReErased mut std::iter::Take&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;&gt;;<br align="left"/>let mut _83: &amp;ReErased mut std::iter::Take&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;&gt;;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: !;<br align="left"/>let _86: &amp;ReErased (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve);<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _89: utils::refresh_ix_utils::RequiredIx;<br align="left"/>let mut _90: utils::refresh_ix_utils::RequiredIxType;<br align="left"/>let mut _91: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize), std::alloc::Global&gt;;<br align="left"/>let mut _92: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize)], std::alloc::Global&gt;;<br align="left"/>let mut _93: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize); 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _94: usize;<br align="left"/>let mut _95: usize;<br align="left"/>let mut _96: *mut u8;<br align="left"/>let mut _97: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize); 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _98: (anchor_lang::prelude::Pubkey, usize);<br align="left"/>let mut _99: anchor_lang::prelude::Pubkey;<br align="left"/>let _100: ();<br align="left"/>let mut _101: &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _102: utils::refresh_ix_utils::RequiredIx;<br align="left"/>let mut _103: utils::refresh_ix_utils::RequiredIxType;<br align="left"/>let mut _104: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize), std::alloc::Global&gt;;<br align="left"/>let mut _105: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize)], std::alloc::Global&gt;;<br align="left"/>let mut _106: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize); 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _107: usize;<br align="left"/>let mut _108: usize;<br align="left"/>let mut _109: *mut u8;<br align="left"/>let mut _110: std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize); 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _111: (anchor_lang::prelude::Pubkey, usize);<br align="left"/>let mut _112: anchor_lang::prelude::Pubkey;<br align="left"/>let _113: ();<br align="left"/>let mut _114: std::iter::Zip&lt;std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;, std::slice::Iter&lt;ReErased, state::reserve::ReserveFarmKind&gt;&gt;;<br align="left"/>let mut _115: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)&gt;;<br align="left"/>let mut _116: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _117: &amp;ReErased [state::reserve::ReserveFarmKind];<br align="left"/>let mut _118: Closure(DefId(0:2721 ~ kamino_lending[6389]::utils::refresh_ix_utils::check_refresh::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn(((&amp;ReErased (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve), &amp;ReErased state::reserve::ReserveFarmKind),)), []), (&amp;ReErased anchor_lang::prelude::Pubkey, &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;)]);<br align="left"/>let mut _119: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _120: &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _121: &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let _122: ();<br align="left"/>let mut _123: &amp;ReErased mut [utils::refresh_ix_utils::RequiredIx];<br align="left"/>let mut _124: &amp;ReErased mut [utils::refresh_ix_utils::RequiredIx];<br align="left"/>let mut _125: &amp;ReErased mut std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let _126: ();<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _128: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: &amp;ReErased Closure(DefId(0:2716 ~ kamino_lending[6389]::utils::refresh_ix_utils::check_refresh::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, utils::refresh_ix_utils::AppendedIxType)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), (&amp;ReErased usize, &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;)]);<br align="left"/>let mut _130: (std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, utils::refresh_ix_utils::AppendedIxType);<br align="left"/>let mut _131: std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _132: utils::refresh_ix_utils::AppendedIxType;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _137: ();<br align="left"/>let _138: ();<br align="left"/>let mut _139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _140: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _141: &amp;ReErased Closure(DefId(0:2716 ~ kamino_lending[6389]::utils::refresh_ix_utils::check_refresh::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, utils::refresh_ix_utils::AppendedIxType)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), (&amp;ReErased usize, &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;)]);<br align="left"/>let mut _142: (std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;, utils::refresh_ix_utils::AppendedIxType);<br align="left"/>let mut _143: std::vec::Vec&lt;utils::refresh_ix_utils::RequiredIx, std::alloc::Global&gt;;<br align="left"/>let mut _144: utils::refresh_ix_utils::AppendedIxType;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _149: ();<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased str;<br align="left"/>let _152: &amp;ReErased str;<br align="left"/>let _153: ();<br align="left"/>let mut _154: ();<br align="left"/>let mut _155: &amp;ReErased LendingError;<br align="left"/>let mut _156: &amp;ReErased LendingError;<br align="left"/>let mut _157: bool;<br align="left"/>let mut _158: bool;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: *const [(anchor_lang::prelude::Pubkey, usize); 1_usize];<br align="left"/>let mut _177: *const [(anchor_lang::prelude::Pubkey, usize); 1_usize];<br align="left"/>let mut _178: *const ();<br align="left"/>let mut _179: usize;<br align="left"/>let mut _180: usize;<br align="left"/>let mut _181: usize;<br align="left"/>let mut _182: usize;<br align="left"/>let mut _183: bool;<br align="left"/>let mut _184: *const ();<br align="left"/>let mut _185: usize;<br align="left"/>let mut _186: usize;<br align="left"/>let mut _187: usize;<br align="left"/>let mut _188: usize;<br align="left"/>let mut _189: bool;<br align="left"/>debug instruction_sysvar_account_info =&gt; _1;<br align="left"/>debug reserves =&gt; _2;<br align="left"/>debug obligation_address =&gt; _3;<br align="left"/>debug modes =&gt; _4;<br align="left"/>debug ix_loader =&gt; _9;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug current_idx =&gt; _39;<br align="left"/>debug check_ixns =&gt; _43;<br align="left"/>debug refresh_reserve_ixs =&gt; _46;<br align="left"/>debug required_pre_ixs =&gt; _63;<br align="left"/>debug required_post_ixs =&gt; _70;<br align="left"/>debug iter =&gt; _78;<br align="left"/>debug reserve =&gt; _86;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>>;
    bb0__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_158 = const false<br/>_157 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = const &quot;Beginning check_refresh&quot;<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = solana_program::log::sol_log(move _6)</td></tr></table>>];
    bb1__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log_compute_units()</td></tr></table>>];
    bb2__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>_9 = BpfInstructionLoader::&lt;'_, '_&gt; { instruction_sysvar_account_info: move _10 }<br/>StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_9<br/></td></tr><tr><td align="left">_14 = &lt;BpfInstructionLoader&lt;'_, '_&gt; as InstructionLoader&gt;::is_forbidden_cpi_call(move _15)</td></tr></table>>];
    bb3__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb4__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb5__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: bool)<br/>_12 = _20<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb6__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb8__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_171 = discriminant(_13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_156 = const _<br/>_28 = &amp;(*_156)<br/></td></tr><tr><td align="left">_27 = LendingError::name(move _28)</td></tr></table>>];
    bb10__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = LendingError::CpiDisabled<br/></td></tr><tr><td align="left">_30 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _31)</td></tr></table>>];
    bb11__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_155 = const _<br/>_33 = &amp;(*_155)<br/></td></tr><tr><td align="left">_32 = &lt;LendingError as ToString&gt;::to_string(move _33)</td></tr></table>>];
    bb12__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\refresh_ix_utils.rs&quot;, line: const 65_u32 }<br/>_36 = anchor_lang::error::ErrorOrigin::Source(move _37)<br/>StorageDead(_37)<br/>_35 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _36)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>_38 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_26 = anchor_lang::error::AnchorError { error_name: move _27, error_code_number: move _30, error_msg: move _32, error_origin: move _35, compared_values: move _38 }<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _26)</td></tr></table>>];
    bb13__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = std::result::Result::&lt;u16, anchor_lang::prelude::ProgramError&gt;::unwrap(move _41)</td></tr></table>>];
    bb15__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;u16 as Into&lt;usize&gt;&gt;::into(move _40)</td></tr></table>>];
    bb16__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_39<br/>StorageLive(_45)<br/>_45 = &amp;_9<br/>_43 = {closure@programs\klend\src\utils\refresh_ix_utils.rs:68:22: 68:93} { current_idx: move _44, ix_loader: move _45 }<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;(*_2)<br/></td></tr><tr><td align="left">_48 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)]&gt;::len(move _49)</td></tr></table>>];
    bb17__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = Eq(move _48, const 2_usize)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb18__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = const 0_usize<br/>_53 = Len((*_2))<br/>_54 = Lt(_52, _53)<br/></td></tr><tr><td align="left">assert(move _54, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _53, _52)</td></tr></table>>];
    bb19__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_51 = &amp;((*_2)[_52].0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = const 1_usize<br/>_57 = Len((*_2))<br/>_58 = Lt(_56, _57)<br/></td></tr><tr><td align="left">assert(move _58, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _57, _56)</td></tr></table>>];
    bb20__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_55 = &amp;((*_2)[_56].0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_50 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _51, move _55)</td></tr></table>>];
    bb21__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb22__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_2)<br/></td></tr><tr><td align="left">_59 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)]&gt;::len(move _60)</td></tr></table>>];
    bb23__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_61 = CheckedSub(_59, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_61.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _59, const 1_usize)</td></tr></table>>];
    bb24__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_46 = move (_61.0: usize)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = &amp;(*_2)<br/></td></tr><tr><td align="left">_46 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)]&gt;::len(move _62)</td></tr></table>>];
    bb28__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_47)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _46<br/>_67 = CheckedAdd(_66, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_67.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _66, const 1_usize)</td></tr></table>>];
    bb30__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_65 = move (_67.0: usize)<br/>StorageDead(_66)<br/>StorageLive(_68)<br/>_68 = _46<br/>_69 = CheckedAdd(_65, _68)<br/></td></tr><tr><td align="left">assert(!move (_69.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _65, move _68)</td></tr></table>>];
    bb31__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_64 = move (_69.0: usize)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>_158 = const true<br/></td></tr><tr><td align="left">_63 = Vec::&lt;RequiredIx&gt;::with_capacity(move _64)</td></tr></table>>];
    bb32__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _46<br/></td></tr><tr><td align="left">_70 = Vec::&lt;RequiredIx&gt;::with_capacity(move _71)</td></tr></table>>];
    bb33__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_157 = const true<br/>StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_2)<br/></td></tr><tr><td align="left">_75 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)]&gt;::iter(move _76)</td></tr></table>>];
    bb34__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_77)<br/>_77 = _46<br/></td></tr><tr><td align="left">_74 = &lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)&gt; as Iterator&gt;::take(move _75, move _77)</td></tr></table>>];
    bb35__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::iter::Take&lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)&gt;&gt; as IntoIterator&gt;::into_iter(move _74)</td></tr></table>>];
    bb36__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_78)<br/>_78 = move _73<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;mut _78<br/>_82 = &amp;mut (*_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::iter::Take&lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)&gt;&gt; as Iterator&gt;::next(move _82)</td></tr></table>>];
    bb38__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_84 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb39__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_81 as Some).0: &amp;(anchor_lang::prelude::Pubkey, &amp;state::reserve::Reserve))<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;mut _63<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = RequiredIxType::RefreshReserve<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_94 = SizeOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/>_95 = AlignOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/></td></tr><tr><td align="left">_96 = alloc::alloc::exchange_malloc(move _94, move _95)</td></tr></table>>];
    bb40__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_72 = const ()<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;mut _63<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = RequiredIxType::RefreshObligation<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_107 = SizeOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/>_108 = AlignOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/></td></tr><tr><td align="left">_109 = alloc::alloc::exchange_malloc(move _107, move _108)</td></tr></table>>];
    bb41__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ShallowInitBox(move _96, [(anchor_lang::prelude::Pubkey, usize); 1])<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = ((*_86).0: anchor_lang::prelude::Pubkey)<br/>_98 = (move _99, const 0_usize)<br/>StorageDead(_99)<br/>_176 = (((_97.0: std::ptr::Unique&lt;[(anchor_lang::prelude::Pubkey, usize); 1]&gt;).0: std::ptr::NonNull&lt;[(anchor_lang::prelude::Pubkey, usize); 1]&gt;).0: *const [(anchor_lang::prelude::Pubkey, usize); 1])<br/>_184 = _176 as *const () (PtrToPtr)<br/>_185 = _184 as usize (Transmute)<br/>_186 = AlignOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/>_187 = Sub(_186, const 1_usize)<br/>_188 = BitAnd(_185, _187)<br/>_189 = Eq(_188, const 0_usize)<br/></td></tr><tr><td align="left">assert(_189, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _186, _185)</td></tr></table>>];
    bb42__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_89 = RequiredIx { kind: move _90, accounts: move _91 }<br/>StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_87 = Vec::&lt;RequiredIx&gt;::push(move _88, move _89)</td></tr></table>>];
    bb43__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>_80 = const ()<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ShallowInitBox(move _109, [(anchor_lang::prelude::Pubkey, usize); 1])<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = (*_3)<br/>_111 = (move _112, const 1_usize)<br/>StorageDead(_112)<br/>_177 = (((_110.0: std::ptr::Unique&lt;[(anchor_lang::prelude::Pubkey, usize); 1]&gt;).0: std::ptr::NonNull&lt;[(anchor_lang::prelude::Pubkey, usize); 1]&gt;).0: *const [(anchor_lang::prelude::Pubkey, usize); 1])<br/>_178 = _177 as *const () (PtrToPtr)<br/>_179 = _178 as usize (Transmute)<br/>_180 = AlignOf([(anchor_lang::prelude::Pubkey, usize); 1])<br/>_181 = Sub(_180, const 1_usize)<br/>_182 = BitAnd(_179, _181)<br/>_183 = Eq(_182, const 0_usize)<br/></td></tr><tr><td align="left">assert(_183, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _180, _179)</td></tr></table>>];
    bb45__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_102 = RequiredIx { kind: move _103, accounts: move _104 }<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_100 = Vec::&lt;RequiredIx&gt;::push(move _101, move _102)</td></tr></table>>];
    bb46__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;(*_2)<br/></td></tr><tr><td align="left">_115 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)]&gt;::iter(move _116)</td></tr></table>>];
    bb47__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_117)<br/>_117 = _4<br/></td></tr><tr><td align="left">_114 = &lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)&gt; as Iterator&gt;::zip::&lt;&amp;[reserve::ReserveFarmKind]&gt;(move _115, move _117)</td></tr></table>>];
    bb48__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_3)<br/>StorageLive(_120)<br/>_120 = &amp;mut _63<br/>StorageLive(_121)<br/>_121 = &amp;mut _70<br/>_118 = {closure@programs\klend\src\utils\refresh_ix_utils.rs:169:19: 169:60} { obligation_address: move _119, required_pre_ixs: move _120, required_post_ixs: move _121 }<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_113 = &lt;Zip&lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, &amp;reserve::Reserve)&gt;, std::slice::Iter&lt;'_, reserve::ReserveFarmKind&gt;&gt; as Iterator&gt;::for_each::&lt;{closure@programs\klend\src\utils\refresh_ix_utils.rs:169:19: 169:60}&gt;(move _114, move _118)</td></tr></table>>];
    bb49__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;mut _63<br/></td></tr><tr><td align="left">_124 = &lt;Vec&lt;RequiredIx&gt; as DerefMut&gt;::deref_mut(move _125)</td></tr></table>>];
    bb50__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_123 = &amp;mut (*_124)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_122 = core::slice::&lt;impl [RequiredIx]&gt;::reverse(move _123)</td></tr></table>>];
    bb51__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;_43<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_158 = const false<br/>_131 = move _63<br/>StorageLive(_132)<br/>_132 = AppendedIxType::PreIxs<br/>_130 = (move _131, move _132)<br/></td></tr><tr><td align="left">_128 = &lt;{closure@programs\klend\src\utils\refresh_ix_utils.rs:68:22: 68:93} as Fn&lt;(Vec&lt;RequiredIx&gt;, AppendedIxType)&gt;&gt;::call(move _129, move _130)</td></tr></table>>];
    bb52__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb53__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_133 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb54__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_127 as Continue).0: ())<br/>_126 = _137<br/>StorageDead(_137)<br/>_163 = discriminant(_127)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_43<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_157 = const false<br/>_143 = move _70<br/>StorageLive(_144)<br/>_144 = AppendedIxType::PostIxs<br/>_142 = (move _143, move _144)<br/></td></tr><tr><td align="left">_140 = &lt;{closure@programs\klend\src\utils\refresh_ix_utils.rs:68:22: 68:93} as Fn&lt;(Vec&lt;RequiredIx&gt;, AppendedIxType)&gt;&gt;::call(move _141, move _142)</td></tr></table>>];
    bb55__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = move ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_136)<br/>_136 = move _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb56__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>_169 = discriminant(_127)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _140)</td></tr></table>>];
    bb58__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_145 = discriminant(_139)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb59__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_139 as Continue).0: ())<br/>_138 = _149<br/>StorageDead(_149)<br/>_165 = discriminant(_139)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = const &quot;Finished check_refresh&quot;<br/>_151 = &amp;(*_152)<br/></td></tr><tr><td align="left">_150 = solana_program::log::sol_log(move _151)</td></tr></table>>];
    bb60__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = move ((_139 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_148)<br/>_148 = move _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb61__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>_167 = discriminant(_139)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageLive(_153)<br/></td></tr><tr><td align="left">_153 = solana_program::log::sol_log_compute_units()</td></tr></table>>];
    bb63__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageLive(_154)<br/>_154 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _154)<br/>StorageDead(_154)<br/>_157 = const false<br/>StorageDead(_70)<br/>_158 = const false<br/>StorageDead(_63)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_157 = const false<br/>StorageDead(_70)<br/>_158 = const false<br/>StorageDead(_63)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">return</td></tr></table>>];
    bb68__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb69__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb70__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_159 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = const &quot;Instruction was called via CPI!&quot;<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = solana_program::log::sol_log(move _23)</td></tr></table>>];
    bb71__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_161 = discriminant(_13)<br/>StorageDead(_13)<br/>_11 = const ()<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_9<br/></td></tr><tr><td align="left">_41 = &lt;BpfInstructionLoader&lt;'_, '_&gt; as InstructionLoader&gt;::load_current_index(move _42)</td></tr></table>>];
    bb72__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb73__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">switchInt(_157)</td></tr></table>>];
    bb74__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left" balign="left">_173 = discriminant(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left" balign="left">_174 = discriminant(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb77__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">switchInt(_157)</td></tr></table>>];
    bb78__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb79__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">switchInt(_158)</td></tr></table>>];
    bb80__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_175 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">(*_177) = [move _111]<br/>StorageDead(_111)<br/>_106 = move _110<br/>_105 = move _106 as std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize)]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_110)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = std::slice::&lt;impl [(anchor_lang::prelude::Pubkey, usize)]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _105)</td></tr></table>>];
    bb82__0_2715 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">(*_176) = [move _98]<br/>StorageDead(_98)<br/>_93 = move _97<br/>_92 = move _93 as std::boxed::Box&lt;[(anchor_lang::prelude::Pubkey, usize)]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = std::slice::&lt;impl [(anchor_lang::prelude::Pubkey, usize)]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _92)</td></tr></table>>];
    bb0__0_2715 -> bb1__0_2715 [label="return"];
    bb1__0_2715 -> bb2__0_2715 [label="return"];
    bb2__0_2715 -> bb3__0_2715 [label="return"];
    bb3__0_2715 -> bb4__0_2715 [label="return"];
    bb3__0_2715 -> bb69__0_2715 [label="unwind"];
    bb4__0_2715 -> bb5__0_2715 [label="0"];
    bb4__0_2715 -> bb7__0_2715 [label="1"];
    bb4__0_2715 -> bb6__0_2715 [label="otherwise"];
    bb5__0_2715 -> bb71__0_2715 [label="0"];
    bb5__0_2715 -> bb70__0_2715 [label="otherwise"];
    bb7__0_2715 -> bb8__0_2715 [label="return"];
    bb7__0_2715 -> bb80__0_2715 [label="unwind"];
    bb8__0_2715 -> bb65__0_2715 [label=""];
    bb9__0_2715 -> bb10__0_2715 [label="return"];
    bb10__0_2715 -> bb11__0_2715 [label="return"];
    bb10__0_2715 -> bb68__0_2715 [label="unwind"];
    bb11__0_2715 -> bb12__0_2715 [label="return"];
    bb11__0_2715 -> bb68__0_2715 [label="unwind"];
    bb12__0_2715 -> bb13__0_2715 [label="return"];
    bb12__0_2715 -> bb69__0_2715 [label="unwind"];
    bb13__0_2715 -> bb65__0_2715 [label=""];
    bb14__0_2715 -> bb15__0_2715 [label="return"];
    bb14__0_2715 -> bb69__0_2715 [label="unwind"];
    bb15__0_2715 -> bb16__0_2715 [label="return"];
    bb16__0_2715 -> bb17__0_2715 [label="return"];
    bb17__0_2715 -> bb26__0_2715 [label="0"];
    bb17__0_2715 -> bb18__0_2715 [label="otherwise"];
    bb18__0_2715 -> bb19__0_2715 [label="success"];
    bb19__0_2715 -> bb20__0_2715 [label="success"];
    bb20__0_2715 -> bb21__0_2715 [label="return"];
    bb21__0_2715 -> bb25__0_2715 [label="0"];
    bb21__0_2715 -> bb22__0_2715 [label="otherwise"];
    bb22__0_2715 -> bb23__0_2715 [label="return"];
    bb23__0_2715 -> bb24__0_2715 [label="success"];
    bb24__0_2715 -> bb29__0_2715 [label=""];
    bb25__0_2715 -> bb27__0_2715 [label=""];
    bb26__0_2715 -> bb27__0_2715 [label=""];
    bb27__0_2715 -> bb28__0_2715 [label="return"];
    bb28__0_2715 -> bb29__0_2715 [label=""];
    bb29__0_2715 -> bb30__0_2715 [label="success"];
    bb30__0_2715 -> bb31__0_2715 [label="success"];
    bb31__0_2715 -> bb32__0_2715 [label="return"];
    bb32__0_2715 -> bb33__0_2715 [label="return"];
    bb32__0_2715 -> bb79__0_2715 [label="unwind"];
    bb33__0_2715 -> bb34__0_2715 [label="return"];
    bb33__0_2715 -> bb77__0_2715 [label="unwind"];
    bb34__0_2715 -> bb35__0_2715 [label="return"];
    bb34__0_2715 -> bb77__0_2715 [label="unwind"];
    bb35__0_2715 -> bb36__0_2715 [label="return"];
    bb35__0_2715 -> bb77__0_2715 [label="unwind"];
    bb36__0_2715 -> bb37__0_2715 [label=""];
    bb37__0_2715 -> bb38__0_2715 [label="return"];
    bb37__0_2715 -> bb77__0_2715 [label="unwind"];
    bb38__0_2715 -> bb40__0_2715 [label="0"];
    bb38__0_2715 -> bb39__0_2715 [label="1"];
    bb38__0_2715 -> bb6__0_2715 [label="otherwise"];
    bb39__0_2715 -> bb41__0_2715 [label="return"];
    bb39__0_2715 -> bb77__0_2715 [label="unwind"];
    bb40__0_2715 -> bb44__0_2715 [label="return"];
    bb40__0_2715 -> bb77__0_2715 [label="unwind"];
    bb41__0_2715 -> bb82__0_2715 [label="success"];
    bb42__0_2715 -> bb43__0_2715 [label="return"];
    bb42__0_2715 -> bb77__0_2715 [label="unwind"];
    bb43__0_2715 -> bb37__0_2715 [label=""];
    bb44__0_2715 -> bb81__0_2715 [label="success"];
    bb45__0_2715 -> bb46__0_2715 [label="return"];
    bb45__0_2715 -> bb77__0_2715 [label="unwind"];
    bb46__0_2715 -> bb47__0_2715 [label="return"];
    bb46__0_2715 -> bb77__0_2715 [label="unwind"];
    bb47__0_2715 -> bb48__0_2715 [label="return"];
    bb47__0_2715 -> bb77__0_2715 [label="unwind"];
    bb48__0_2715 -> bb49__0_2715 [label="return"];
    bb48__0_2715 -> bb77__0_2715 [label="unwind"];
    bb49__0_2715 -> bb50__0_2715 [label="return"];
    bb49__0_2715 -> bb77__0_2715 [label="unwind"];
    bb50__0_2715 -> bb51__0_2715 [label="return"];
    bb50__0_2715 -> bb77__0_2715 [label="unwind"];
    bb51__0_2715 -> bb52__0_2715 [label="return"];
    bb51__0_2715 -> bb77__0_2715 [label="unwind"];
    bb52__0_2715 -> bb53__0_2715 [label="return"];
    bb52__0_2715 -> bb77__0_2715 [label="unwind"];
    bb53__0_2715 -> bb54__0_2715 [label="0"];
    bb53__0_2715 -> bb55__0_2715 [label="1"];
    bb53__0_2715 -> bb6__0_2715 [label="otherwise"];
    bb54__0_2715 -> bb57__0_2715 [label="return"];
    bb54__0_2715 -> bb77__0_2715 [label="unwind"];
    bb55__0_2715 -> bb56__0_2715 [label="return"];
    bb55__0_2715 -> bb75__0_2715 [label="unwind"];
    bb56__0_2715 -> bb73__0_2715 [label=""];
    bb57__0_2715 -> bb58__0_2715 [label="return"];
    bb57__0_2715 -> bb77__0_2715 [label="unwind"];
    bb58__0_2715 -> bb59__0_2715 [label="0"];
    bb58__0_2715 -> bb60__0_2715 [label="1"];
    bb58__0_2715 -> bb6__0_2715 [label="otherwise"];
    bb59__0_2715 -> bb62__0_2715 [label="return"];
    bb59__0_2715 -> bb77__0_2715 [label="unwind"];
    bb60__0_2715 -> bb61__0_2715 [label="return"];
    bb60__0_2715 -> bb74__0_2715 [label="unwind"];
    bb61__0_2715 -> bb73__0_2715 [label=""];
    bb62__0_2715 -> bb63__0_2715 [label="return"];
    bb62__0_2715 -> bb77__0_2715 [label="unwind"];
    bb63__0_2715 -> bb67__0_2715 [label=""];
    bb64__0_2715 -> bb66__0_2715 [label=""];
    bb65__0_2715 -> bb66__0_2715 [label=""];
    bb66__0_2715 -> bb67__0_2715 [label=""];
    bb68__0_2715 -> bb69__0_2715 [label="return"];
    bb70__0_2715 -> bb9__0_2715 [label="return"];
    bb71__0_2715 -> bb14__0_2715 [label="return"];
    bb72__0_2715 -> bb64__0_2715 [label="return"];
    bb72__0_2715 -> bb79__0_2715 [label="unwind"];
    bb73__0_2715 -> bb64__0_2715 [label="0"];
    bb73__0_2715 -> bb72__0_2715 [label="otherwise"];
    bb74__0_2715 -> bb77__0_2715 [label=""];
    bb75__0_2715 -> bb77__0_2715 [label=""];
    bb76__0_2715 -> bb79__0_2715 [label="return"];
    bb77__0_2715 -> bb79__0_2715 [label="0"];
    bb77__0_2715 -> bb76__0_2715 [label="otherwise"];
    bb78__0_2715 -> bb69__0_2715 [label="return"];
    bb79__0_2715 -> bb69__0_2715 [label="0"];
    bb79__0_2715 -> bb78__0_2715 [label="otherwise"];
    bb80__0_2715 -> bb69__0_2715 [label=""];
    bb81__0_2715 -> bb45__0_2715 [label="return"];
    bb81__0_2715 -> bb77__0_2715 [label="unwind"];
    bb82__0_2715 -> bb42__0_2715 [label="return"];
    bb82__0_2715 -> bb77__0_2715 [label="unwind"];
}
