digraph Mir_0_969 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_in_range::{closure#0}(_1: &amp;ReErased Closure(DefId(0:969 ~ kamino_lending[6389]::lending_market::config_items::validations::check_in_range::{closure#0}), [T/#0, i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) T/#0,)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, [Region(BrAnon)]), (std::ops::RangeInclusive&lt;u128&gt;,)]), _2: &amp;ReErased T/#0) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: u128;<br align="left"/>let mut _4: T/#0;<br align="left"/>let mut _5: &amp;ReErased T/#0;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: &amp;ReErased std::ops::RangeInclusive&lt;u128&gt;;<br align="left"/>let mut _9: &amp;ReErased u128;<br align="left"/>let _10: &amp;ReErased u128;<br align="left"/>let mut _11: !;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: &amp;ReErased std::string::String;<br align="left"/>let _16: &amp;ReErased std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let _18: std::string::String;<br align="left"/>let mut _19: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _23: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _27: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _28: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased std::ops::RangeInclusive&lt;u128&gt;;<br align="left"/>let _30: &amp;ReErased std::ops::RangeInclusive&lt;u128&gt;;<br align="left"/>let mut _31: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased u128;<br align="left"/>let _33: &amp;ReErased u128;<br align="left"/>let mut _34: anchor_lang::error::Error;<br align="left"/>let mut _35: anchor_lang::error::AnchorError;<br align="left"/>let mut _36: std::string::String;<br align="left"/>let mut _37: &amp;ReErased LendingError;<br align="left"/>let _38: LendingError;<br align="left"/>let mut _39: u32;<br align="left"/>let mut _40: LendingError;<br align="left"/>let mut _41: std::string::String;<br align="left"/>let mut _42: &amp;ReErased LendingError;<br align="left"/>let _43: LendingError;<br align="left"/>let mut _44: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _45: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _46: anchor_lang::error::Source;<br align="left"/>let mut _47: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _48: ();<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let mut _50: &amp;ReErased LendingError;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug value =&gt; _2;<br align="left"/>debug range =&gt; ((*_1).0: std::ops::RangeInclusive&lt;u128&gt;);<br align="left"/>debug value =&gt; _3;<br align="left"/>debug res =&gt; _18;<br align="left"/>>;
    bb0__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_2)<br/></td></tr><tr><td align="left">_4 = &lt;T as Clone&gt;::clone(move _5)</td></tr></table>>];
    bb1__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;T as Into&lt;u128&gt;&gt;::into(move _4)</td></tr></table>>];
    bb2__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).0: std::ops::RangeInclusive&lt;u128&gt;)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_3<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_7 = RangeInclusive::&lt;u128&gt;::contains::&lt;u128&gt;(move _8, move _9)</td></tr></table>>];
    bb3__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb4__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_10)<br/>_6 = const ()<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_48)<br/>_48 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _48)<br/>StorageDead(_48)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_51 = const _<br/>_22 = &amp;(*_51)<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_1).0: std::ops::RangeInclusive&lt;u128&gt;)<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;RangeInclusive&lt;u128&gt;&gt;(move _29)</td></tr></table>>];
    bb6__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_3<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u128&gt;(move _32)</td></tr></table>>];
    bb7__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_27 = [move _28, move _31]<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_19 = Arguments::&lt;'_&gt;::new_v1(move _20, move _24)</td></tr></table>>];
    bb8__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = format(move _19)</td></tr></table>>];
    bb9__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>_17 = move _18<br/>StorageDead(_18)<br/>_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::string::String as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb10__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb11__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb12__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_50 = const _<br/>_37 = &amp;(*_50)<br/></td></tr><tr><td align="left">_36 = LendingError::name(move _37)</td></tr></table>>];
    bb13__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = LendingError::InvalidConfig<br/></td></tr><tr><td align="left">_39 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _40)</td></tr></table>>];
    bb14__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_49 = const _<br/>_42 = &amp;(*_49)<br/></td></tr><tr><td align="left">_41 = &lt;LendingError as ToString&gt;::to_string(move _42)</td></tr></table>>];
    bb15__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\config_items.rs&quot;, line: const 247_u32 }<br/>_45 = anchor_lang::error::ErrorOrigin::Source(move _46)<br/>StorageDead(_46)<br/>_44 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _45)<br/>StorageDead(_45)<br/>StorageLive(_47)<br/>_47 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_35 = anchor_lang::error::AnchorError { error_name: move _36, error_code_number: move _39, error_msg: move _41, error_origin: move _44, compared_values: move _47 }<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _35)</td></tr></table>>];
    bb16__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _34)<br/>StorageDead(_34)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb18__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb19__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb20__0_969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_969 -> bb1__0_969 [label="return"];
    bb1__0_969 -> bb2__0_969 [label="return"];
    bb1__0_969 -> bb20__0_969 [label="unwind"];
    bb2__0_969 -> bb3__0_969 [label="return"];
    bb3__0_969 -> bb5__0_969 [label="0"];
    bb3__0_969 -> bb4__0_969 [label="otherwise"];
    bb4__0_969 -> bb17__0_969 [label=""];
    bb5__0_969 -> bb6__0_969 [label="return"];
    bb6__0_969 -> bb7__0_969 [label="return"];
    bb7__0_969 -> bb8__0_969 [label="return"];
    bb8__0_969 -> bb9__0_969 [label="return"];
    bb9__0_969 -> bb10__0_969 [label="return"];
    bb9__0_969 -> bb19__0_969 [label="unwind"];
    bb10__0_969 -> bb11__0_969 [label="return"];
    bb10__0_969 -> bb19__0_969 [label="unwind"];
    bb11__0_969 -> bb12__0_969 [label="return"];
    bb11__0_969 -> bb20__0_969 [label="unwind"];
    bb12__0_969 -> bb13__0_969 [label="return"];
    bb13__0_969 -> bb14__0_969 [label="return"];
    bb13__0_969 -> bb18__0_969 [label="unwind"];
    bb14__0_969 -> bb15__0_969 [label="return"];
    bb14__0_969 -> bb18__0_969 [label="unwind"];
    bb15__0_969 -> bb16__0_969 [label="return"];
    bb15__0_969 -> bb20__0_969 [label="unwind"];
    bb16__0_969 -> bb17__0_969 [label=""];
    bb18__0_969 -> bb20__0_969 [label="return"];
    bb19__0_969 -> bb20__0_969 [label="return"];
}
