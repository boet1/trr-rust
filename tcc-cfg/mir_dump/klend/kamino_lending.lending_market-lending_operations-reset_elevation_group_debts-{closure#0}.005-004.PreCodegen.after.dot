digraph Mir_0_1301 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reset_elevation_group_debts::{closure#0}(_1: Closure(DefId(0:1301 ~ kamino_lending[6389]::lending_market::lending_operations::reset_elevation_group_debts::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt; + Clone/#2, impl Iterator&lt;Item = T&gt; + Clone/#3, i32, Binder(extern &quot;RustCall&quot; fn((utils::validation::LengthMismatchError,)) -&gt; anchor_lang::error::Error, []), ()]), _2: utils::validation::LengthMismatchError) -&gt; anchor_lang::error::Error<br align="left"/>let mut _3: anchor_lang::error::AnchorError;<br align="left"/>let mut _4: std::string::String;<br align="left"/>let mut _5: &amp;ReErased LendingError;<br align="left"/>let _6: LendingError;<br align="left"/>let mut _7: u32;<br align="left"/>let mut _8: LendingError;<br align="left"/>let mut _9: std::string::String;<br align="left"/>let mut _10: &amp;ReErased LendingError;<br align="left"/>let _11: LendingError;<br align="left"/>let mut _12: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _13: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _14: anchor_lang::error::Source;<br align="left"/>let mut _15: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _16: &amp;ReErased LendingError;<br align="left"/>let mut _17: &amp;ReErased LendingError;<br align="left"/>>;
    bb0__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_17 = const _<br/>_5 = &amp;(*_17)<br/></td></tr><tr><td align="left">_4 = LendingError::name(move _5)</td></tr></table>>];
    bb1__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_7 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _8)</td></tr></table>>];
    bb2__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_16 = const _<br/>_10 = &amp;(*_16)<br/></td></tr><tr><td align="left">_9 = &lt;LendingError as ToString&gt;::to_string(move _10)</td></tr></table>>];
    bb3__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 932_u32 }<br/>_13 = anchor_lang::error::ErrorOrigin::Source(move _14)<br/>StorageDead(_14)<br/>_12 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _13)<br/>StorageDead(_13)<br/>StorageLive(_15)<br/>_15 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_3 = anchor_lang::error::AnchorError { error_name: move _4, error_code_number: move _7, error_msg: move _9, error_origin: move _12, compared_values: move _15 }<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _3)</td></tr></table>>];
    bb4__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb5__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb6__0_1301 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1301 -> bb1__0_1301 [label="return"];
    bb1__0_1301 -> bb2__0_1301 [label="return"];
    bb1__0_1301 -> bb5__0_1301 [label="unwind"];
    bb2__0_1301 -> bb3__0_1301 [label="return"];
    bb2__0_1301 -> bb5__0_1301 [label="unwind"];
    bb3__0_1301 -> bb4__0_1301 [label="return"];
    bb3__0_1301 -> bb6__0_1301 [label="unwind"];
    bb5__0_1301 -> bb6__0_1301 [label="return"];
}
