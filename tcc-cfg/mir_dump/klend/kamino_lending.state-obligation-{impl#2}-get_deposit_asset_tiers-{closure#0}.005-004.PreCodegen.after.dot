digraph Mir_0_1695 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::get_deposit_asset_tiers::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:1695 ~ kamino_lending[6389]::state::obligation::{impl#2}::get_deposit_asset_tiers::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn(((usize, &amp;ReErased state::obligation::ObligationCollateral),)) -&gt; std::option::Option&lt;state::reserve::AssetTier&gt;, []), (&amp;ReErased state::obligation::Obligation,)]), _2: (usize, &amp;ReErased state::obligation::ObligationCollateral)) -&gt; std::option::Option&lt;state::reserve::AssetTier&gt;<br align="left"/>let _3: usize;<br align="left"/>let _4: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: state::reserve::AssetTier;<br align="left"/>let mut _10: std::result::Result&lt;state::reserve::AssetTier, num_enum::TryFromPrimitiveError&lt;state::reserve::AssetTier&gt;&gt;;<br align="left"/>let mut _11: u8;<br align="left"/>let _12: usize;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _16: &amp;ReErased state::obligation::Obligation;<br align="left"/>debug self =&gt; (*((*_1).0: &amp;state::obligation::Obligation));<br align="left"/>debug index =&gt; _3;<br align="left"/>debug deposit =&gt; _4;<br align="left"/>>;
    bb0__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = (_2.0: usize)<br/>StorageLive(_4)<br/>_4 = (_2.1: &amp;state::obligation::ObligationCollateral)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_4)<br/></td></tr><tr><td align="left">_5 = obligation::ObligationCollateral::is_active(move _6)</td></tr></table>>];
    bb1__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_4).1: u64)<br/>_7 = Gt(move _8, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _3<br/>_15 = deref_copy ((*_1).0: &amp;state::obligation::Obligation)<br/>_13 = Len(((*_15).12: [u8; 8]))<br/>_14 = Lt(_12, _13)<br/></td></tr><tr><td align="left">assert(move _14, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _13, _12)</td></tr></table>>];
    bb4__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_16 = deref_copy ((*_1).0: &amp;state::obligation::Obligation)<br/>_11 = ((*_16).12: [u8; 8])[_12]<br/></td></tr><tr><td align="left">_10 = &lt;reserve::AssetTier as TryFrom&lt;u8&gt;&gt;::try_from(move _11)</td></tr></table>>];
    bb5__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = std::result::Result::&lt;reserve::AssetTier, TryFromPrimitiveError&lt;reserve::AssetTier&gt;&gt;::unwrap(move _10)</td></tr></table>>];
    bb6__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_0 = std::option::Option::&lt;reserve::AssetTier&gt;::Some(move _9)<br/>StorageDead(_9)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_0 = std::option::Option::&lt;reserve::AssetTier&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1695 -> bb1__0_1695 [label="return"];
    bb1__0_1695 -> bb8__0_1695 [label="0"];
    bb1__0_1695 -> bb2__0_1695 [label="otherwise"];
    bb2__0_1695 -> bb7__0_1695 [label="0"];
    bb2__0_1695 -> bb3__0_1695 [label="otherwise"];
    bb3__0_1695 -> bb4__0_1695 [label="success"];
    bb4__0_1695 -> bb5__0_1695 [label="return"];
    bb5__0_1695 -> bb6__0_1695 [label="return"];
    bb6__0_1695 -> bb10__0_1695 [label=""];
    bb7__0_1695 -> bb9__0_1695 [label=""];
    bb8__0_1695 -> bb9__0_1695 [label=""];
    bb9__0_1695 -> bb10__0_1695 [label=""];
}
