digraph Mir_0_1145 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;IxIterator&lt;'_, IxLoader&gt; as Iterator&gt;::next(_1: &amp;ReErased mut lending_market::ix_utils::IxIterator&lt;ReErased, IxLoader/#1&gt;) -&gt; std::option::Option&lt;std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;&gt;<br align="left"/>let mut _2: std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _3: &amp;ReErased IxLoader/#1;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: isize;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: solana_program::instruction::Instruction;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _10: usize;<br align="left"/>let mut _11: std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _12: solana_program::instruction::Instruction;<br align="left"/>let _13: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _14: std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _15: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _16: &amp;ReErased IxLoader/#1;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: isize;<br align="left"/>let mut _21: isize;<br align="left"/>let mut _22: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug ix =&gt; _7;<br align="left"/>debug e =&gt; _13;<br align="left"/>>;
    bb0__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_18 = const false<br/>_19 = const false<br/>_17 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>_16 = deref_copy ((*_1).1: &amp;IxLoader)<br/>_3 = &amp;(*_16)<br/>StorageLive(_4)<br/>_4 = ((*_1).0: usize)<br/>_17 = const true<br/>_18 = const true<br/>_19 = const true<br/></td></tr><tr><td align="left">_2 = &lt;IxLoader as InstructionLoader&gt;::load_instruction_at(move _3, move _4)</td></tr></table>>];
    bb1__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>_6 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb2__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = discriminant(((_2 as Err).0: anchor_lang::prelude::ProgramError))<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb3__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_19 = const false<br/>_13 = move ((_2 as Err).0: anchor_lang::prelude::ProgramError)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = move _13<br/>_14 = std::result::Result::&lt;Instruction, anchor_lang::prelude::ProgramError&gt;::Err(move _15)<br/>StorageDead(_15)<br/>_0 = std::option::Option::&lt;std::result::Result&lt;Instruction, anchor_lang::prelude::ProgramError&gt;&gt;::Some(move _14)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_2 as Ok).0: solana_program::instruction::Instruction)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_1).0: usize)<br/></td></tr><tr><td align="left">_9 = core::num::&lt;impl usize&gt;::checked_add(move _10, const 1_usize)</td></tr></table>>];
    bb6__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = std::option::Option::&lt;usize&gt;::unwrap(move _9)</td></tr></table>>];
    bb7__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>((*_1).0: usize) = move _8<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = move _7<br/>_11 = std::result::Result::&lt;Instruction, anchor_lang::prelude::ProgramError&gt;::Ok(move _12)<br/>StorageDead(_12)<br/>_0 = std::option::Option::&lt;std::result::Result&lt;Instruction, anchor_lang::prelude::ProgramError&gt;&gt;::Some(move _11)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_0 = std::option::Option::&lt;std::result::Result&lt;Instruction, anchor_lang::prelude::ProgramError&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb10__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb11__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_17 = const false<br/>_18 = const false<br/>_19 = const false<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(_19)</td></tr></table>>];
    bb13__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">drop(((_2 as Err).0: anchor_lang::prelude::ProgramError))</td></tr></table>>];
    bb14__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_20 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb15__0_1145 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left" balign="left">_22 = discriminant(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1145 -> bb1__0_1145 [label="return"];
    bb1__0_1145 -> bb5__0_1145 [label="0"];
    bb1__0_1145 -> bb2__0_1145 [label="1"];
    bb1__0_1145 -> bb4__0_1145 [label="otherwise"];
    bb2__0_1145 -> bb8__0_1145 [label="1"];
    bb2__0_1145 -> bb3__0_1145 [label="otherwise"];
    bb3__0_1145 -> bb14__0_1145 [label=""];
    bb5__0_1145 -> bb6__0_1145 [label="return"];
    bb5__0_1145 -> bb9__0_1145 [label="unwind"];
    bb6__0_1145 -> bb7__0_1145 [label="return"];
    bb6__0_1145 -> bb9__0_1145 [label="unwind"];
    bb7__0_1145 -> bb14__0_1145 [label=""];
    bb8__0_1145 -> bb14__0_1145 [label=""];
    bb9__0_1145 -> bb15__0_1145 [label="return"];
    bb12__0_1145 -> bb11__0_1145 [label="0"];
    bb12__0_1145 -> bb13__0_1145 [label="otherwise"];
    bb13__0_1145 -> bb11__0_1145 [label="return"];
    bb13__0_1145 -> bb10__0_1145 [label="unwind"];
    bb14__0_1145 -> bb11__0_1145 [label="0"];
    bb14__0_1145 -> bb12__0_1145 [label="otherwise"];
    bb15__0_1145 -> bb10__0_1145 [label=""];
}
