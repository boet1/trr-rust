// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:487:4: 487:53>::from` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:487:4: 487:53>::from(_1: i128) -> uint_types::U128 {
    debug value => _1;
    let mut _0: utils::fraction::uint_types::U128;
    let mut _2: bool;
    let mut _3: i128;
    let mut _4: u128;
    let mut _5: i128;
    let mut _6: !;
    let _7: !;
    let _8: !;
    let mut _9: std::fmt::Arguments<'_>;
    let mut _10: &[&str];
    let mut _11: &[&str; 1];
    let _12: &[&str; 1];
    let _13: [&str; 1];
    let mut _14: &[&str; 1];

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = _1;
        _2 = Ge(move _3, const 0_i128);
        StorageDead(_3);
        switchInt(_2) -> [0: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _14 = const _;
        _12 = &(*_14);
        _11 = &(*_12);
        _10 = move _11 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_11);
        _9 = Arguments::<'_>::new_const(move _10) -> [return: bb4, unwind continue];
    }

    bb2: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = _1;
        _4 = move _5 as u128 (IntToInt);
        StorageDead(_5);
        _0 = <uint_types::U128 as From<u128>>::from(move _4) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_4);
        StorageDead(_2);
        return;
    }

    bb4: {
        StorageDead(_10);
        _8 = panic_fmt(move _9) -> unwind continue;
    }
}
