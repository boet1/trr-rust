// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:686:1: 686:25>::is_active` after PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:686:1: 686:25>::is_active(_1: &obligation::ObligationLiquidity) -> bool {
    debug self => _1;
    let mut _0: bool;
    let mut _2: &anchor_lang::prelude::Pubkey;
    let mut _3: &anchor_lang::prelude::Pubkey;
    let _4: anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_2);
        _2 = &((*_1).0: anchor_lang::prelude::Pubkey);
        StorageLive(_3);
        StorageLive(_4);
        _4 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        _3 = &_4;
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _2, move _3) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_4);
        return;
    }
}
