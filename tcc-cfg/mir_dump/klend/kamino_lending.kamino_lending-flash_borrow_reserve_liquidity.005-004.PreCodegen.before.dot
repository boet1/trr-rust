digraph Mir_0_13847 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn kamino_lending::flash_borrow_reserve_liquidity(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity&lt;ReErased&gt;&gt;;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: &amp;ReErased mut handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity&lt;ReErased&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: isize;<br align="left"/>let mut _20: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>>;
    bb0__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_15 = deref_copy (_1.1: &amp;mut handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity&lt;'_&gt;)<br/>_7 = &amp;((*_15).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = utils::constraints::emergency_mode_disabled(move _6)</td></tr></table>>];
    bb1__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_16 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>_13 = move _1<br/>StorageLive(_14)<br/>_14 = _2<br/></td></tr><tr><td align="left">_0 = handlers::handler_flash_borrow_reserve_liquidity::process(move _13, move _14)</td></tr></table>>];
    bb4__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_18 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb10__0_13847 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left" balign="left">_20 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_13847 -> bb1__0_13847 [label="return"];
    bb1__0_13847 -> bb2__0_13847 [label="return"];
    bb1__0_13847 -> bb9__0_13847 [label="unwind"];
    bb2__0_13847 -> bb3__0_13847 [label="0"];
    bb2__0_13847 -> bb5__0_13847 [label="1"];
    bb2__0_13847 -> bb4__0_13847 [label="otherwise"];
    bb3__0_13847 -> bb7__0_13847 [label="return"];
    bb5__0_13847 -> bb6__0_13847 [label="return"];
    bb5__0_13847 -> bb10__0_13847 [label="unwind"];
    bb6__0_13847 -> bb8__0_13847 [label=""];
    bb7__0_13847 -> bb8__0_13847 [label=""];
    bb10__0_13847 -> bb9__0_13847 [label=""];
}
