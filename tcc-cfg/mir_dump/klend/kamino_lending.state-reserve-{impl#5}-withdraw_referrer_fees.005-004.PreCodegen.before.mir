// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:491:1: 491:22>::withdraw_referrer_fees` before PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:491:1: 491:22>::withdraw_referrer_fees(_1: &mut ReserveLiquidity, _2: u64, _3: &mut referral::ReferrerTokenState) -> std::result::Result<(), anchor_lang::error::Error> {
    debug self => _1;
    debug withdraw_amount => _2;
    debug referrer_token_state => _3;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _4: u64;
    let mut _5: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, LendingError>, u64>;
    let mut _6: std::result::Result<u64, LendingError>;
    let mut _7: std::option::Option<u64>;
    let mut _8: u64;
    let mut _9: u64;
    let mut _10: {closure@programs\klend\src\state\reserve.rs:727:25: 727:27};
    let mut _11: &u64;
    let mut _12: &u64;
    let mut _13: isize;
    let _14: std::result::Result<std::convert::Infallible, LendingError>;
    let mut _15: !;
    let mut _16: std::result::Result<std::convert::Infallible, LendingError>;
    let _17: u64;
    let _18: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _19: u128;
    let mut _21: u64;
    let mut _23: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _24: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let mut _25: std::option::Option<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _26: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _27: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _28: {closure@programs\klend\src\state\reserve.rs:738:25: 738:27};
    let mut _29: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _30: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _31: isize;
    let mut _33: !;
    let mut _34: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _36: u128;
    let mut _37: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _39: u128;
    let mut _41: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _42: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let mut _43: std::option::Option<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _44: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _45: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _46: {closure@programs\klend\src\state\reserve.rs:754:25: 754:27};
    let mut _47: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _48: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _49: isize;
    let mut _51: !;
    let mut _52: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _54: u128;
    let mut _55: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _56: ();
    let mut _57: isize;
    let mut _58: isize;
    let mut _59: isize;
    let mut _60: isize;
    let mut _61: isize;
    let mut _62: isize;
    let mut _63: isize;
    let mut _64: isize;
    let mut _65: isize;
    let mut _66: isize;
    scope 1 {
        debug residual => _14;
        scope 2 {
        }
    }
    scope 3 {
        debug val => _17;
        scope 4 {
        }
    }
    scope 5 {
        debug accumulated_referrer_fees_f => _18;
        let _20: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        scope 6 {
            debug withdraw_amount_f => _20;
            let _22: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            let _32: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
            let _35: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            scope 7 {
                debug new_accumulated_referrer_fees_f => _22;
                let _38: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                scope 12 {
                    debug referrer_amount_unclaimed_f => _38;
                    let _40: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                    let _50: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                    let _53: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                    scope 13 {
                        debug new_referrer_amount_unclaimed_f => _40;
                    }
                    scope 14 {
                        debug residual => _50;
                        scope 15 {
                        }
                    }
                    scope 16 {
                        debug val => _53;
                        scope 17 {
                        }
                    }
                }
            }
            scope 8 {
                debug residual => _32;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _35;
                scope 11 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = ((*_1).3: u64);
        StorageLive(_9);
        _9 = _2;
        _7 = core::num::<impl u64>::checked_sub(move _8, move _9) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_9);
        StorageDead(_8);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &((*_1).3: u64);
        StorageLive(_12);
        _12 = &_2;
        _10 = {closure@programs\klend\src\state\reserve.rs:727:25: 727:27} { self: move _11, withdraw_amount: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        _6 = std::option::Option::<u64>::ok_or_else::<LendingError, {closure@programs\klend\src\state\reserve.rs:727:25: 727:27}>(move _7, move _10) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_10);
        StorageDead(_7);
        _5 = <std::result::Result<u64, LendingError> as Try>::branch(move _6) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_6);
        _13 = discriminant(_5);
        switchInt(move _13) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_17);
        _17 = ((_5 as Continue).0: u64);
        _4 = _17;
        StorageDead(_17);
        ((*_1).3: u64) = move _4;
        StorageDead(_4);
        StorageDead(_5);
        StorageLive(_18);
        StorageLive(_19);
        _19 = ((*_1).12: u128);
        _18 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_bits(move _19) -> [return: bb8, unwind continue];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_14);
        _14 = ((_5 as Break).0: std::result::Result<std::convert::Infallible, LendingError>);
        StorageLive(_16);
        _16 = _14;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, LendingError>>>::from_residual(move _16) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_4);
        StorageDead(_5);
        goto -> bb26;
    }

    bb8: {
        StorageDead(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = _2;
        _20 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_num::<u64>(move _21) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = _18;
        StorageLive(_27);
        _27 = _20;
        _25 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::checked_sub(move _26, move _27) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_27);
        StorageDead(_26);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &_18;
        StorageLive(_30);
        _30 = &_20;
        _28 = {closure@programs\klend\src\state\reserve.rs:738:25: 738:27} { accumulated_referrer_fees_f: move _29, withdraw_amount_f: move _30 };
        StorageDead(_30);
        StorageDead(_29);
        _24 = std::option::Option::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>::ok_or_else::<anchor_lang::error::Error, {closure@programs\klend\src\state\reserve.rs:738:25: 738:27}>(move _25, move _28) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_28);
        StorageDead(_25);
        _23 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> as Try>::branch(move _24) -> [return: bb12, unwind: bb27];
    }

    bb12: {
        StorageDead(_24);
        _31 = discriminant(_23);
        switchInt(move _31) -> [0: bb13, 1: bb14, otherwise: bb5];
    }

    bb13: {
        StorageLive(_35);
        _35 = ((_23 as Continue).0: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _22 = _35;
        StorageDead(_35);
        _57 = discriminant(_23);
        StorageDead(_23);
        StorageLive(_36);
        StorageLive(_37);
        _37 = _22;
        _36 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::to_bits(move _37) -> [return: bb16, unwind continue];
    }

    bb14: {
        StorageLive(_32);
        _32 = move ((_23 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_34);
        _34 = move _32;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _34) -> [return: bb15, unwind: bb29];
    }

    bb15: {
        StorageDead(_34);
        StorageDead(_32);
        _63 = discriminant(_23);
        StorageDead(_23);
        goto -> bb25;
    }

    bb16: {
        StorageDead(_37);
        ((*_1).12: u128) = move _36;
        StorageDead(_36);
        StorageLive(_38);
        StorageLive(_39);
        _39 = ((*_3).2: u128);
        _38 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_bits(move _39) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _38;
        StorageLive(_45);
        _45 = _20;
        _43 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::checked_sub(move _44, move _45) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_45);
        StorageDead(_44);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &_38;
        StorageLive(_48);
        _48 = &_20;
        _46 = {closure@programs\klend\src\state\reserve.rs:754:25: 754:27} { referrer_amount_unclaimed_f: move _47, withdraw_amount_f: move _48 };
        StorageDead(_48);
        StorageDead(_47);
        _42 = std::option::Option::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>::ok_or_else::<anchor_lang::error::Error, {closure@programs\klend\src\state\reserve.rs:754:25: 754:27}>(move _43, move _46) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_46);
        StorageDead(_43);
        _41 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> as Try>::branch(move _42) -> [return: bb20, unwind: bb27];
    }

    bb20: {
        StorageDead(_42);
        _49 = discriminant(_41);
        switchInt(move _49) -> [0: bb21, 1: bb22, otherwise: bb5];
    }

    bb21: {
        StorageLive(_53);
        _53 = ((_41 as Continue).0: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _40 = _53;
        StorageDead(_53);
        _59 = discriminant(_41);
        StorageDead(_41);
        StorageLive(_54);
        StorageLive(_55);
        _55 = _40;
        _54 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::to_bits(move _55) -> [return: bb24, unwind continue];
    }

    bb22: {
        StorageLive(_50);
        _50 = move ((_41 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_52);
        _52 = move _50;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _52) -> [return: bb23, unwind: bb28];
    }

    bb23: {
        StorageDead(_52);
        StorageDead(_50);
        _61 = discriminant(_41);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_38);
        goto -> bb25;
    }

    bb24: {
        StorageDead(_55);
        ((*_3).2: u128) = move _54;
        StorageDead(_54);
        StorageLive(_56);
        _56 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _56);
        StorageDead(_56);
        StorageDead(_40);
        StorageDead(_38);
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_18);
        goto -> bb26;
    }

    bb25: {
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_18);
        goto -> bb26;
    }

    bb26: {
        return;
    }

    bb27 (cleanup): {
        resume;
    }

    bb28 (cleanup): {
        _65 = discriminant(_41);
        goto -> bb27;
    }

    bb29 (cleanup): {
        _66 = discriminant(_23);
        goto -> bb27;
    }
}
