digraph Mir_0_6722 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn last_update::_::&lt;impl Extend&lt;last_update::PriceStatusFlags&gt; for last_update::PriceStatusFlags&gt;::extend(_1: &amp;ReErased mut state::last_update::PriceStatusFlags, _2: T/#0) -&gt; ()<br align="left"/>let mut _3: Alias(Projection, AliasTy { args: [T/#0], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _4: T/#0;<br align="left"/>let mut _5: Alias(Projection, AliasTy { args: [T/#0], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _6: ();<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::option::Option&lt;state::last_update::PriceStatusFlags&gt;;<br align="left"/>let mut _9: &amp;ReErased mut Alias(Projection, AliasTy { args: [T/#0], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _10: &amp;ReErased mut Alias(Projection, AliasTy { args: [T/#0], def_id: DefId(2:7756 ~ core[c321]::iter::traits::collect::IntoIterator::IntoIter) });<br align="left"/>let mut _11: isize;<br align="left"/>let mut _12: !;<br align="left"/>let _13: state::last_update::PriceStatusFlags;<br align="left"/>let mut _14: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let mut _15: state::last_update::PriceStatusFlags;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug iterator =&gt; _2;<br align="left"/>debug iter =&gt; _5;<br align="left"/>debug item =&gt; _13;<br align="left"/>>;
    bb0__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = move _2<br/></td></tr><tr><td align="left">_3 = &lt;T as IntoIterator&gt;::into_iter(move _4)</td></tr></table>>];
    bb1__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>_5 = move _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut _5<br/>_9 = &amp;mut (*_10)<br/></td></tr><tr><td align="left">_8 = &lt;&lt;T as IntoIterator&gt;::IntoIter as Iterator&gt;::next(move _9)</td></tr></table>>];
    bb3__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Some).0: state::last_update::PriceStatusFlags)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_1)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_7 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::insert(move _14, move _15)</td></tr></table>>];
    bb5__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_0 = const ()<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb7__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb10__0_6722 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_6722 -> bb1__0_6722 [label="return"];
    bb0__0_6722 -> bb10__0_6722 [label="unwind"];
    bb1__0_6722 -> bb2__0_6722 [label=""];
    bb2__0_6722 -> bb3__0_6722 [label="return"];
    bb2__0_6722 -> bb9__0_6722 [label="unwind"];
    bb3__0_6722 -> bb6__0_6722 [label="0"];
    bb3__0_6722 -> bb4__0_6722 [label="1"];
    bb3__0_6722 -> bb5__0_6722 [label="otherwise"];
    bb4__0_6722 -> bb7__0_6722 [label="return"];
    bb4__0_6722 -> bb9__0_6722 [label="unwind"];
    bb6__0_6722 -> bb8__0_6722 [label="return"];
    bb6__0_6722 -> bb10__0_6722 [label="unwind"];
    bb7__0_6722 -> bb2__0_6722 [label=""];
    bb9__0_6722 -> bb10__0_6722 [label="return"];
}
