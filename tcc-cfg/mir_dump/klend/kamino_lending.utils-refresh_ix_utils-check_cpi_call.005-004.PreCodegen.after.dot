digraph Mir_0_2714 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_cpi_call(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _7: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased lending_market::ix_utils::BpfInstructionLoader&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: bool;<br align="left"/>let mut _14: !;<br align="left"/>let _15: ();<br align="left"/>let mut _16: &amp;ReErased str;<br align="left"/>let _17: &amp;ReErased str;<br align="left"/>let mut _18: anchor_lang::error::Error;<br align="left"/>let mut _19: anchor_lang::error::AnchorError;<br align="left"/>let mut _20: std::string::String;<br align="left"/>let mut _21: &amp;ReErased LendingError;<br align="left"/>let _22: LendingError;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: LendingError;<br align="left"/>let mut _25: std::string::String;<br align="left"/>let mut _26: &amp;ReErased LendingError;<br align="left"/>let _27: LendingError;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _29: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _30: anchor_lang::error::Source;<br align="left"/>let mut _31: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _32: ();<br align="left"/>let mut _33: &amp;ReErased LendingError;<br align="left"/>let mut _34: &amp;ReErased LendingError;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>debug instruction_sysvar_account_info =&gt; _1;<br align="left"/>debug ix_loader =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>>;
    bb0__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;(*_1)<br/>_2 = BpfInstructionLoader::&lt;'_, '_&gt; { instruction_sysvar_account_info: move _3 }<br/>StorageDead(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_2<br/></td></tr><tr><td align="left">_7 = &lt;BpfInstructionLoader&lt;'_, '_&gt; as InstructionLoader&gt;::is_forbidden_cpi_call(move _8)</td></tr></table>>];
    bb1__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_6 as Continue).0: bool)<br/>_5 = _13<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb4__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_39 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_34 = const _<br/>_21 = &amp;(*_34)<br/></td></tr><tr><td align="left">_20 = LendingError::name(move _21)</td></tr></table>>];
    bb8__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = LendingError::CpiDisabled<br/></td></tr><tr><td align="left">_23 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _24)</td></tr></table>>];
    bb9__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_33 = const _<br/>_26 = &amp;(*_33)<br/></td></tr><tr><td align="left">_25 = &lt;LendingError as ToString&gt;::to_string(move _26)</td></tr></table>>];
    bb10__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\refresh_ix_utils.rs&quot;, line: const 43_u32 }<br/>_29 = anchor_lang::error::ErrorOrigin::Source(move _30)<br/>StorageDead(_30)<br/>_28 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _29)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_19 = anchor_lang::error::AnchorError { error_name: move _20, error_code_number: move _23, error_msg: move _25, error_origin: move _28, compared_values: move _31 }<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _19)</td></tr></table>>];
    bb11__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb14__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb15__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb16__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_35 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = const &quot;Instruction was called via CPI!&quot;<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_15 = solana_program::log::sol_log(move _16)</td></tr></table>>];
    bb17__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_37 = discriminant(_6)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_32)<br/>_32 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _32)<br/>StorageDead(_32)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left" balign="left">_41 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2714 -> bb1__0_2714 [label="return"];
    bb1__0_2714 -> bb2__0_2714 [label="return"];
    bb1__0_2714 -> bb15__0_2714 [label="unwind"];
    bb2__0_2714 -> bb3__0_2714 [label="0"];
    bb2__0_2714 -> bb5__0_2714 [label="1"];
    bb2__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb3__0_2714 -> bb17__0_2714 [label="0"];
    bb3__0_2714 -> bb16__0_2714 [label="otherwise"];
    bb5__0_2714 -> bb6__0_2714 [label="return"];
    bb5__0_2714 -> bb18__0_2714 [label="unwind"];
    bb6__0_2714 -> bb12__0_2714 [label=""];
    bb7__0_2714 -> bb8__0_2714 [label="return"];
    bb8__0_2714 -> bb9__0_2714 [label="return"];
    bb8__0_2714 -> bb14__0_2714 [label="unwind"];
    bb9__0_2714 -> bb10__0_2714 [label="return"];
    bb9__0_2714 -> bb14__0_2714 [label="unwind"];
    bb10__0_2714 -> bb11__0_2714 [label="return"];
    bb10__0_2714 -> bb15__0_2714 [label="unwind"];
    bb11__0_2714 -> bb12__0_2714 [label=""];
    bb12__0_2714 -> bb13__0_2714 [label=""];
    bb14__0_2714 -> bb15__0_2714 [label="return"];
    bb16__0_2714 -> bb7__0_2714 [label="return"];
    bb17__0_2714 -> bb13__0_2714 [label=""];
    bb18__0_2714 -> bb15__0_2714 [label=""];
}
