digraph Mir_0_5006 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RefreshObligationFarmsForReserveBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:5007 ~ kamino_lending[6389]::handlers::handler_refresh_obligation_farms_for_reserve::{impl#0}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _21: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBaseBumps;<br align="left"/>let mut _28: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBaseBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let _35: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBumps;<br align="left"/>let mut _43: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _44: Closure(DefId(0:5008 ~ kamino_lending[6389]::handlers::handler_refresh_obligation_farms_for_reserve::{impl#0}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _49: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let _50: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:5009 ~ kamino_lending[6389]::handlers::handler_refresh_obligation_farms_for_reserve::{impl#0}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let _65: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:5010 ~ kamino_lending[6389]::handlers::handler_refresh_obligation_farms_for_reserve::{impl#0}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _80: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _81: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _82: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let mut _83: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _84: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _85: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug crank =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug base_accounts =&gt; _21;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug farms_program =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug rent =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug system_program =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>>;
    bb0__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, RefreshObligationFarmsForReserveBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_86 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_3)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;mut ((*_4).0: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBaseBumps)<br/>_27 = &amp;mut (*_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;'_&gt; as anchor_lang::Accounts&lt;'_, RefreshObligationFarmsForReserveBaseBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _29)</td></tr></table>>];
    bb5__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_104 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_30 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb10__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_22 as Continue).0: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;'_&gt;)<br/>_21 = move _34<br/>StorageDead(_34)<br/>_88 = discriminant(_22)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_1)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_2)<br/>StorageLive(_41)<br/>_41 = &amp;(*_3)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_4)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::Program&lt;'_, Farms&gt; as anchor_lang::Accounts&lt;'_, RefreshObligationFarmsForReserveBumps&gt;&gt;::try_accounts(move _39, move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb11__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb12__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_102 = discriminant(_22)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}&gt;(move _38, move _44)</td></tr></table>>];
    bb14__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb15__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb16__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_36 as Continue).0: anchor_lang::prelude::Program&lt;'_, farms::program::Farms&gt;)<br/>_35 = move _49<br/>StorageDead(_49)<br/>_90 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_3)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt; as anchor_lang::Accounts&lt;'_, RefreshObligationFarmsForReserveBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb17__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_48)<br/>_48 = move _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb18__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_100 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb20__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb21__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb22__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_92 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_3)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::Accounts&lt;'_, RefreshObligationFarmsForReserveBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb23__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb24__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_98 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb26__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb27__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb28__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_94 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = move _6<br/>StorageLive(_82)<br/>_82 = move _21<br/>StorageLive(_83)<br/>_83 = move _35<br/>StorageLive(_84)<br/>_84 = move _50<br/>StorageLive(_85)<br/>_85 = move _65<br/>_80 = handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve::&lt;'_&gt; { crank: move _81, base_accounts: move _82, farms_program: move _83, rent: move _84, system_program: move _85 }<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>_0 = std::result::Result::&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _80)<br/>StorageDead(_80)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_35)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb30__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_96 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb33__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb36__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb37__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb38__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_106 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left" balign="left">_109 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_5006 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left" balign="left">_110 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5006 -> bb1__0_5006 [label="return"];
    bb1__0_5006 -> bb2__0_5006 [label="return"];
    bb1__0_5006 -> bb37__0_5006 [label="unwind"];
    bb2__0_5006 -> bb3__0_5006 [label="return"];
    bb2__0_5006 -> bb37__0_5006 [label="unwind"];
    bb3__0_5006 -> bb4__0_5006 [label="0"];
    bb3__0_5006 -> bb6__0_5006 [label="1"];
    bb3__0_5006 -> bb5__0_5006 [label="otherwise"];
    bb4__0_5006 -> bb8__0_5006 [label="return"];
    bb6__0_5006 -> bb7__0_5006 [label="return"];
    bb6__0_5006 -> bb42__0_5006 [label="unwind"];
    bb7__0_5006 -> bb34__0_5006 [label=""];
    bb8__0_5006 -> bb9__0_5006 [label="return"];
    bb8__0_5006 -> bb37__0_5006 [label="unwind"];
    bb9__0_5006 -> bb10__0_5006 [label="0"];
    bb9__0_5006 -> bb11__0_5006 [label="1"];
    bb9__0_5006 -> bb5__0_5006 [label="otherwise"];
    bb10__0_5006 -> bb13__0_5006 [label="return"];
    bb10__0_5006 -> bb36__0_5006 [label="unwind"];
    bb11__0_5006 -> bb12__0_5006 [label="return"];
    bb11__0_5006 -> bb41__0_5006 [label="unwind"];
    bb12__0_5006 -> bb33__0_5006 [label=""];
    bb13__0_5006 -> bb14__0_5006 [label="return"];
    bb13__0_5006 -> bb36__0_5006 [label="unwind"];
    bb14__0_5006 -> bb15__0_5006 [label="return"];
    bb14__0_5006 -> bb36__0_5006 [label="unwind"];
    bb15__0_5006 -> bb16__0_5006 [label="0"];
    bb15__0_5006 -> bb17__0_5006 [label="1"];
    bb15__0_5006 -> bb5__0_5006 [label="otherwise"];
    bb16__0_5006 -> bb19__0_5006 [label="return"];
    bb16__0_5006 -> bb36__0_5006 [label="unwind"];
    bb17__0_5006 -> bb18__0_5006 [label="return"];
    bb17__0_5006 -> bb40__0_5006 [label="unwind"];
    bb18__0_5006 -> bb32__0_5006 [label=""];
    bb19__0_5006 -> bb20__0_5006 [label="return"];
    bb19__0_5006 -> bb36__0_5006 [label="unwind"];
    bb20__0_5006 -> bb21__0_5006 [label="return"];
    bb20__0_5006 -> bb36__0_5006 [label="unwind"];
    bb21__0_5006 -> bb22__0_5006 [label="0"];
    bb21__0_5006 -> bb23__0_5006 [label="1"];
    bb21__0_5006 -> bb5__0_5006 [label="otherwise"];
    bb22__0_5006 -> bb25__0_5006 [label="return"];
    bb22__0_5006 -> bb36__0_5006 [label="unwind"];
    bb23__0_5006 -> bb24__0_5006 [label="return"];
    bb23__0_5006 -> bb39__0_5006 [label="unwind"];
    bb24__0_5006 -> bb31__0_5006 [label=""];
    bb25__0_5006 -> bb26__0_5006 [label="return"];
    bb25__0_5006 -> bb36__0_5006 [label="unwind"];
    bb26__0_5006 -> bb27__0_5006 [label="return"];
    bb26__0_5006 -> bb36__0_5006 [label="unwind"];
    bb27__0_5006 -> bb28__0_5006 [label="0"];
    bb27__0_5006 -> bb29__0_5006 [label="1"];
    bb27__0_5006 -> bb5__0_5006 [label="otherwise"];
    bb28__0_5006 -> bb35__0_5006 [label=""];
    bb29__0_5006 -> bb30__0_5006 [label="return"];
    bb29__0_5006 -> bb38__0_5006 [label="unwind"];
    bb30__0_5006 -> bb31__0_5006 [label=""];
    bb31__0_5006 -> bb32__0_5006 [label=""];
    bb32__0_5006 -> bb33__0_5006 [label="return"];
    bb32__0_5006 -> bb37__0_5006 [label="unwind"];
    bb33__0_5006 -> bb34__0_5006 [label=""];
    bb34__0_5006 -> bb35__0_5006 [label=""];
    bb36__0_5006 -> bb37__0_5006 [label="return"];
    bb38__0_5006 -> bb36__0_5006 [label=""];
    bb39__0_5006 -> bb36__0_5006 [label=""];
    bb40__0_5006 -> bb36__0_5006 [label=""];
    bb41__0_5006 -> bb37__0_5006 [label=""];
    bb42__0_5006 -> bb37__0_5006 [label=""];
}
