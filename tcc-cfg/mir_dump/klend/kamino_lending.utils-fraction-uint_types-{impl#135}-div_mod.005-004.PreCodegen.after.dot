digraph Mir_0_11904 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::div_mod(_1: utils::fraction::uint_types::U128, _2: utils::fraction::uint_types::U128) -&gt; (utils::fraction::uint_types::U128, utils::fraction::uint_types::U128)<br align="left"/>let _3: usize;<br align="left"/>let mut _4: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let _5: usize;<br align="left"/>let mut _6: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: usize;<br align="left"/>let mut _10: !;<br align="left"/>let _11: !;<br align="left"/>let mut _12: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _14: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _15: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _16: [&amp;ReErased str; 1_usize];<br align="left"/>let _17: ();<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: usize;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: utils::fraction::uint_types::U128;<br align="left"/>let mut _23: utils::fraction::uint_types::U128;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: usize;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: utils::fraction::uint_types::U128;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let _31: usize;<br align="left"/>let _32: usize;<br align="left"/>let mut _33: (usize, usize);<br align="left"/>let _34: usize;<br align="left"/>let mut _35: usize;<br align="left"/>let _36: usize;<br align="left"/>let mut _37: usize;<br align="left"/>let mut _38: usize;<br align="left"/>let mut _39: usize;<br align="left"/>let mut _40: usize;<br align="left"/>let mut _41: usize;<br align="left"/>let mut _42: (usize, bool);<br align="left"/>let mut _43: utils::fraction::uint_types::U128;<br align="left"/>let mut _44: utils::fraction::uint_types::U128;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: usize;<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug my_bits =&gt; _3;<br align="left"/>debug your_bits =&gt; _5;<br align="left"/>debug n =&gt; _31;<br align="left"/>debug m =&gt; _32;<br align="left"/>debug my_words =&gt; _34;<br align="left"/>debug your_words =&gt; _36;<br align="left"/>>;
    bb0__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;_1<br/></td></tr><tr><td align="left">_3 = uint_types::U128::bits(move _4)</td></tr></table>>];
    bb1__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;_2<br/></td></tr><tr><td align="left">_5 = uint_types::U128::bits(move _6)</td></tr></table>>];
    bb2__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _5<br/>_8 = Ne(move _9, const 0_usize)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/>StorageLive(_20)<br/>_20 = _5<br/>_18 = Lt(move _19, move _20)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb4__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_47 = const _<br/>_15 = &amp;(*_47)<br/>_14 = &amp;(*_15)<br/>_13 = move _14 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = Arguments::&lt;'_&gt;::new_const(move _13)</td></tr></table>>];
    bb5__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = panic_fmt(move _12)</td></tr></table>>];
    bb6__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_22)<br/></td></tr><tr><td align="left">_22 = uint_types::U128::zero()</td></tr></table>>];
    bb7__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>_17 = const ()<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _5<br/>_25 = Le(move _26, const _)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb8__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = _1<br/>_0 = (move _22, move _23)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = _1<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_2<br/></td></tr><tr><td align="left">_29 = uint_types::U128::low_u64(move _30)</td></tr></table>>];
    bb10__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = const ()<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _3<br/></td></tr><tr><td align="left">_34 = uint_types::U128::words(move _35)</td></tr></table>>];
    bb11__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_0 = uint_types::U128::div_mod_small(move _28, move _29)</td></tr></table>>];
    bb12__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _5<br/></td></tr><tr><td align="left">_36 = uint_types::U128::words(move _37)</td></tr></table>>];
    bb14__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = _36<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _34<br/>StorageLive(_41)<br/>_41 = _36<br/>_42 = CheckedSub(_40, _41)<br/></td></tr><tr><td align="left">assert(!move (_42.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _40, move _41)</td></tr></table>>];
    bb15__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_39 = move (_42.0: usize)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>_33 = (move _38, move _39)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageLive(_31)<br/>_31 = (_33.0: usize)<br/>StorageLive(_32)<br/>_32 = (_33.1: usize)<br/>StorageDead(_33)<br/>StorageLive(_43)<br/>_43 = _1<br/>StorageLive(_44)<br/>_44 = _2<br/>StorageLive(_45)<br/>_45 = _31<br/>StorageLive(_46)<br/>_46 = _32<br/></td></tr><tr><td align="left">_0 = uint_types::U128::div_mod_knuth(move _43, move _44, move _45, move _46)</td></tr></table>>];
    bb16__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_11904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11904 -> bb1__0_11904 [label="return"];
    bb1__0_11904 -> bb2__0_11904 [label="return"];
    bb2__0_11904 -> bb4__0_11904 [label="0"];
    bb2__0_11904 -> bb3__0_11904 [label="otherwise"];
    bb3__0_11904 -> bb7__0_11904 [label="0"];
    bb3__0_11904 -> bb6__0_11904 [label="otherwise"];
    bb4__0_11904 -> bb5__0_11904 [label="return"];
    bb6__0_11904 -> bb8__0_11904 [label="return"];
    bb7__0_11904 -> bb10__0_11904 [label="0"];
    bb7__0_11904 -> bb9__0_11904 [label="otherwise"];
    bb8__0_11904 -> bb17__0_11904 [label=""];
    bb9__0_11904 -> bb11__0_11904 [label="return"];
    bb10__0_11904 -> bb13__0_11904 [label="return"];
    bb11__0_11904 -> bb12__0_11904 [label="return"];
    bb12__0_11904 -> bb17__0_11904 [label=""];
    bb13__0_11904 -> bb14__0_11904 [label="return"];
    bb14__0_11904 -> bb15__0_11904 [label="success"];
    bb15__0_11904 -> bb16__0_11904 [label="return"];
    bb16__0_11904 -> bb18__0_11904 [label=""];
    bb17__0_11904 -> bb18__0_11904 [label=""];
}
