digraph Mir_0_719 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_update_lending_market_owner::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_update_lending_market_owner::UpdateLendingMarketOwner&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _15: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _16: &amp;ReErased std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: anchor_lang::error::Error;<br align="left"/>let mut _19: anchor_lang::error::AnchorError;<br align="left"/>let mut _20: std::string::String;<br align="left"/>let mut _21: &amp;ReErased LendingError;<br align="left"/>let _22: LendingError;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: LendingError;<br align="left"/>let mut _25: std::string::String;<br align="left"/>let mut _26: &amp;ReErased LendingError;<br align="left"/>let _27: LendingError;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _29: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _30: anchor_lang::error::Source;<br align="left"/>let mut _31: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _32: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _34: &amp;ReErased std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _35: &amp;ReErased mut state::lending_market::LendingMarket;<br align="left"/>let mut _36: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _37: ();<br align="left"/>let mut _38: &amp;ReErased LendingError;<br align="left"/>let mut _39: &amp;ReErased LendingError;<br align="left"/>let mut _40: &amp;ReErased mut handlers::handler_update_lending_market_owner::UpdateLendingMarketOwner&lt;ReErased&gt;;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>>;
    bb0__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_40 = deref_copy (_1.1: &amp;mut handlers::handler_update_lending_market_owner::UpdateLendingMarketOwner&lt;'_&gt;)<br/>_6 = &amp;((*_40).1: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_5 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load_mut(move _6)</td></tr></table>>];
    bb1__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_3 = move _11<br/>StorageDead(_11)<br/>_2 = &amp;mut _3<br/>_41 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_2)<br/></td></tr><tr><td align="left">_15 = &lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _16)</td></tr></table>>];
    bb4__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_43 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_14 = &amp;(*_15)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = state::lending_market::LendingMarket::is_immutable(move _14)</td></tr></table>>];
    bb8__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb9__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_39 = const _<br/>_21 = &amp;(*_39)<br/></td></tr><tr><td align="left">_20 = LendingError::name(move _21)</td></tr></table>>];
    bb10__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_15)<br/>_12 = const ()<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_2)<br/></td></tr><tr><td align="left">_33 = &lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb11__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = LendingError::OperationNotPermittedMarketImmutable<br/></td></tr><tr><td align="left">_23 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _24)</td></tr></table>>];
    bb12__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_38 = const _<br/>_26 = &amp;(*_38)<br/></td></tr><tr><td align="left">_25 = &lt;LendingError as ToString&gt;::to_string(move _26)</td></tr></table>>];
    bb13__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_update_lending_market_owner.rs&quot;, line: const 8_u32 }<br/>_29 = anchor_lang::error::ErrorOrigin::Source(move _30)<br/>StorageDead(_30)<br/>_28 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _29)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_19 = anchor_lang::error::AnchorError { error_name: move _20, error_code_number: move _23, error_msg: move _25, error_origin: move _28, compared_values: move _31 }<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _19)</td></tr></table>>];
    bb14__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _18)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb15__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = ((*_33).3: anchor_lang::prelude::Pubkey)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_35 = &lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt; as DerefMut&gt;::deref_mut(move _36)</td></tr></table>>];
    bb16__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>((*_35).2: anchor_lang::prelude::Pubkey) = move _32<br/>StorageDead(_32)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_37)<br/>_37 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb17__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb21__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb22__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb23__0_719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_45 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_719 -> bb1__0_719 [label="return"];
    bb1__0_719 -> bb2__0_719 [label="return"];
    bb1__0_719 -> bb22__0_719 [label="unwind"];
    bb2__0_719 -> bb3__0_719 [label="0"];
    bb2__0_719 -> bb5__0_719 [label="1"];
    bb2__0_719 -> bb4__0_719 [label="otherwise"];
    bb3__0_719 -> bb7__0_719 [label="return"];
    bb3__0_719 -> bb21__0_719 [label="unwind"];
    bb5__0_719 -> bb6__0_719 [label="return"];
    bb5__0_719 -> bb23__0_719 [label="unwind"];
    bb6__0_719 -> bb18__0_719 [label=""];
    bb7__0_719 -> bb8__0_719 [label="return"];
    bb7__0_719 -> bb21__0_719 [label="unwind"];
    bb8__0_719 -> bb10__0_719 [label="0"];
    bb8__0_719 -> bb9__0_719 [label="otherwise"];
    bb9__0_719 -> bb11__0_719 [label="return"];
    bb9__0_719 -> bb21__0_719 [label="unwind"];
    bb10__0_719 -> bb15__0_719 [label="return"];
    bb10__0_719 -> bb21__0_719 [label="unwind"];
    bb11__0_719 -> bb12__0_719 [label="return"];
    bb11__0_719 -> bb20__0_719 [label="unwind"];
    bb12__0_719 -> bb13__0_719 [label="return"];
    bb12__0_719 -> bb20__0_719 [label="unwind"];
    bb13__0_719 -> bb14__0_719 [label="return"];
    bb13__0_719 -> bb21__0_719 [label="unwind"];
    bb14__0_719 -> bb18__0_719 [label="return"];
    bb14__0_719 -> bb22__0_719 [label="unwind"];
    bb15__0_719 -> bb16__0_719 [label="return"];
    bb15__0_719 -> bb21__0_719 [label="unwind"];
    bb16__0_719 -> bb17__0_719 [label="return"];
    bb16__0_719 -> bb22__0_719 [label="unwind"];
    bb17__0_719 -> bb19__0_719 [label=""];
    bb18__0_719 -> bb19__0_719 [label=""];
    bb20__0_719 -> bb21__0_719 [label="return"];
    bb21__0_719 -> bb22__0_719 [label="return"];
    bb23__0_719 -> bb22__0_719 [label=""];
}
