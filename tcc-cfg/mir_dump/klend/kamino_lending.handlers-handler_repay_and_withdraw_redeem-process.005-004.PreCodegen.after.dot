digraph Mir_0_573 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_repay_and_withdraw_redeem::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;&gt;, _2: u64, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased handlers::handler_repay_obligation_liquidity::RepayObligationLiquidity&lt;ReErased&gt;;<br align="left"/>let _8: &amp;ReErased handlers::handler_repay_obligation_liquidity::RepayObligationLiquidity&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let _10: &amp;ReErased handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _19: ();<br align="left"/>let _20: ();<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _23: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _27: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _28: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _29: state::reserve::ReserveFarmKind;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _31: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _33: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _35: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _40: ();<br align="left"/>let _41: ();<br align="left"/>let _42: ();<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _44: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _45: utils::refresh_ix_utils::cpi_refresh_farms::RefreshFarmsParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _47: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _48: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _49: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _50: state::reserve::ReserveFarmKind;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _52: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _54: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _56: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _61: ();<br align="left"/>let mut _62: ();<br align="left"/>let mut _63: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _66: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _67: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug repay_amount =&gt; _2;<br align="left"/>debug withdraw_collateral_amount =&gt; _3;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_63 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_8 = &amp;((*_63).0: handlers::handler_repay_obligation_liquidity::RepayObligationLiquidity&lt;'_&gt;)<br/>_7 = &amp;(*_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_64 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_10 = &amp;((*_64).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_9 = &amp;(*_10)<br/>StorageLive(_11)<br/>_65 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_11 = &amp;(*_65)<br/>StorageLive(_12)<br/>_66 = deref_copy (_1.0: &amp;anchor_lang::prelude::Pubkey)<br/>_12 = &amp;(*_66)<br/>StorageLive(_13)<br/>_13 = _2<br/>StorageLive(_14)<br/>_14 = _3<br/></td></tr><tr><td align="left">_6 = handlers::handler_repay_and_withdraw_redeem::process_impl(move _7, move _9, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_15 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_5 as Continue).0: ())<br/>_4 = _19<br/>StorageDead(_19)<br/>_77 = discriminant(_5)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_67 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_26 = &amp;(((*_67).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_25 = &amp;(*_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_68 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_28 = &amp;((*_68).2: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_27 = &amp;(*_28)<br/>StorageLive(_29)<br/>_29 = reserve::ReserveFarmKind::Collateral<br/>_24 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _25, farms_accounts: move _27, farm_kind: move _29 }<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_69 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_31 = &amp;(((*_69).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_30 = &amp;(*_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_70 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_33 = &amp;(((*_70).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_32 = &amp;(*_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_71 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_35 = &amp;(((*_71).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_23 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _24, move _30, move _32, move _34)</td></tr></table>>];
    bb4__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_87 = discriminant(_5)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb8__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_36 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb9__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_22 as Continue).0: ())<br/>_21 = _40<br/>StorageDead(_40)<br/>_79 = discriminant(_22)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_72 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_47 = &amp;(((*_72).0: handlers::handler_repay_obligation_liquidity::RepayObligationLiquidity&lt;'_&gt;).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/>_46 = &amp;(*_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_73 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_49 = &amp;((*_73).3: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_48 = &amp;(*_49)<br/>StorageLive(_50)<br/>_50 = reserve::ReserveFarmKind::Debt<br/>_45 = RefreshFarmsParams::&lt;'_, '_&gt; { reserve: move _46, farms_accounts: move _48, farm_kind: move _50 }<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_74 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_52 = &amp;(((*_74).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/>_51 = &amp;(*_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_75 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_54 = &amp;(((*_75).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_53 = &amp;(*_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_76 = deref_copy (_1.1: &amp;mut handlers::handler_repay_and_withdraw_redeem::RepayAndWithdraw&lt;'_&gt;)<br/>_56 = &amp;(((*_76).1: handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;).2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_44 = refresh_ix_utils::cpi_refresh_farms::refresh_obligation_farms_for_reserve::&lt;'_, anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt;, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;(move _45, move _51, move _53, move _55)</td></tr></table>>];
    bb10__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb11__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_85 = discriminant(_22)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb13__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_57 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb14__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_43 as Continue).0: ())<br/>_42 = _61<br/>StorageDead(_61)<br/>_81 = discriminant(_43)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>_41 = const ()<br/>StorageDead(_41)<br/>_20 = const ()<br/>StorageDead(_20)<br/>StorageLive(_62)<br/>_62 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_60)<br/>_60 = move _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb16__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>_83 = discriminant(_43)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb20__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_573 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_573 -> bb1__0_573 [label="return"];
    bb1__0_573 -> bb2__0_573 [label="return"];
    bb1__0_573 -> bb19__0_573 [label="unwind"];
    bb2__0_573 -> bb3__0_573 [label="0"];
    bb2__0_573 -> bb5__0_573 [label="1"];
    bb2__0_573 -> bb4__0_573 [label="otherwise"];
    bb3__0_573 -> bb7__0_573 [label="return"];
    bb5__0_573 -> bb6__0_573 [label="return"];
    bb5__0_573 -> bb22__0_573 [label="unwind"];
    bb6__0_573 -> bb18__0_573 [label=""];
    bb7__0_573 -> bb8__0_573 [label="return"];
    bb7__0_573 -> bb19__0_573 [label="unwind"];
    bb8__0_573 -> bb9__0_573 [label="0"];
    bb8__0_573 -> bb10__0_573 [label="1"];
    bb8__0_573 -> bb4__0_573 [label="otherwise"];
    bb9__0_573 -> bb12__0_573 [label="return"];
    bb10__0_573 -> bb11__0_573 [label="return"];
    bb10__0_573 -> bb21__0_573 [label="unwind"];
    bb11__0_573 -> bb17__0_573 [label=""];
    bb12__0_573 -> bb13__0_573 [label="return"];
    bb12__0_573 -> bb19__0_573 [label="unwind"];
    bb13__0_573 -> bb14__0_573 [label="0"];
    bb13__0_573 -> bb15__0_573 [label="1"];
    bb13__0_573 -> bb4__0_573 [label="otherwise"];
    bb14__0_573 -> bb18__0_573 [label=""];
    bb15__0_573 -> bb16__0_573 [label="return"];
    bb15__0_573 -> bb20__0_573 [label="unwind"];
    bb16__0_573 -> bb17__0_573 [label=""];
    bb17__0_573 -> bb18__0_573 [label=""];
    bb20__0_573 -> bb19__0_573 [label=""];
    bb21__0_573 -> bb19__0_573 [label=""];
    bb22__0_573 -> bb19__0_573 [label=""];
}
