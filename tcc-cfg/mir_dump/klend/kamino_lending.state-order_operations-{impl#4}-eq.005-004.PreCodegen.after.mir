// MIR for `state::order_operations::<impl at programs\klend\src\state\order_operations.rs:29:10: 29:19>::eq` after PreCodegen

fn state::order_operations::<impl at programs\klend\src\state\order_operations.rs:29:10: 29:19>::eq(_1: &ConditionType, _2: &ConditionType) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let _3: u8;
    let mut _4: &state::order_operations::ConditionType;
    let mut _6: &state::order_operations::ConditionType;
    let mut _7: u8;
    let mut _8: u8;
    scope 1 {
        debug __self_tag => _3;
        let _5: u8;
        scope 2 {
            debug __arg1_tag => _5;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = discriminant((*_4));
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_2);
        _5 = discriminant((*_6));
        StorageDead(_6);
        StorageLive(_7);
        _7 = _3;
        StorageLive(_8);
        _8 = _5;
        _0 = Eq(move _7, move _8);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
