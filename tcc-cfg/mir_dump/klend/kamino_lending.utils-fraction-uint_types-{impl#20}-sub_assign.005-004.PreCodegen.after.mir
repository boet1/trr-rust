// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1426:3: 1426:54>::sub_assign` after PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1426:3: 1426:54>::sub_assign(_1: &mut uint_types::U256, _2: uint_types::U256) -> () {
    debug self => _1;
    debug other => _2;
    let mut _0: ();
    let _3: utils::fraction::uint_types::U256;
    let _4: bool;
    let mut _5: (utils::fraction::uint_types::U256, bool);
    let mut _6: utils::fraction::uint_types::U256;
    let mut _7: utils::fraction::uint_types::U256;
    let _8: ();
    let mut _9: bool;
    let mut _10: !;
    let _11: !;
    let mut _12: std::fmt::Arguments<'_>;
    let mut _13: &[&str];
    let mut _14: &[&str; 1];
    let _15: &[&str; 1];
    let _16: [&str; 1];
    let mut _17: utils::fraction::uint_types::U256;
    scope 1 {
        debug result => _3;
        debug overflow => _4;
        let mut _18: &[&str; 1];
    }

    bb0: {
        StorageLive(_5);
        StorageLive(_6);
        _6 = (*_1);
        StorageLive(_7);
        _7 = _2;
        _5 = uint_types::U256::overflowing_sub(move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_3);
        _3 = (_5.0: utils::fraction::uint_types::U256);
        StorageLive(_4);
        _4 = (_5.1: bool);
        StorageDead(_5);
        StorageLive(_8);
        StorageLive(_9);
        _9 = _4;
        switchInt(move _9) -> [0: bb4, otherwise: bb2];
    }

    bb2: {
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _18 = const _;
        _15 = &(*_18);
        _14 = &(*_15);
        _13 = move _14 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_14);
        _12 = Arguments::<'_>::new_const(move _13) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_13);
        _11 = panic_fmt(move _12) -> unwind continue;
    }

    bb4: {
        _8 = const ();
        StorageDead(_9);
        StorageDead(_8);
        StorageLive(_17);
        _17 = _3;
        (*_1) = move _17;
        _0 = const ();
        StorageDead(_17);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
