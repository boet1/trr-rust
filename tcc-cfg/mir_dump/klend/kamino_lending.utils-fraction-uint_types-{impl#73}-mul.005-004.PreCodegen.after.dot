digraph Mir_0_11654 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;uint_types::U256 as std::ops::Mul&gt;::mul(_1: utils::fraction::uint_types::U256, _2: utils::fraction::uint_types::U256) -&gt; utils::fraction::uint_types::U256<br align="left"/>let _3: utils::fraction::uint_types::U256;<br align="left"/>let mut _4: utils::fraction::uint_types::U256;<br align="left"/>let _5: utils::fraction::uint_types::U256;<br align="left"/>let _6: bool;<br align="left"/>let mut _7: (utils::fraction::uint_types::U256, bool);<br align="left"/>let mut _8: utils::fraction::uint_types::U256;<br align="left"/>let mut _9: utils::fraction::uint_types::U256;<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: !;<br align="left"/>let _13: !;<br align="left"/>let mut _14: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _17: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _18: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug bignum =&gt; _3;<br align="left"/>debug result =&gt; _5;<br align="left"/>debug overflow =&gt; _6;<br align="left"/>>;
    bb0__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = _2<br/></td></tr><tr><td align="left">_3 = &lt;uint_types::U256 as Into&lt;uint_types::U256&gt;&gt;::into(move _4)</td></tr></table>>];
    bb1__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>_9 = _3<br/></td></tr><tr><td align="left">_7 = uint_types::U256::overflowing_mul(move _8, move _9)</td></tr></table>>];
    bb2__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_5)<br/>_5 = (_7.0: utils::fraction::uint_types::U256)<br/>StorageLive(_6)<br/>_6 = (_7.1: bool)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _6<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_19 = const _<br/>_17 = &amp;(*_19)<br/>_16 = &amp;(*_17)<br/>_15 = move _16 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = Arguments::&lt;'_&gt;::new_const(move _15)</td></tr></table>>];
    bb4__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = panic_fmt(move _14)</td></tr></table>>];
    bb5__0_11654 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_10 = const ()<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>_0 = _5<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11654 -> bb1__0_11654 [label="return"];
    bb1__0_11654 -> bb2__0_11654 [label="return"];
    bb2__0_11654 -> bb5__0_11654 [label="0"];
    bb2__0_11654 -> bb3__0_11654 [label="otherwise"];
    bb3__0_11654 -> bb4__0_11654 [label="return"];
}
