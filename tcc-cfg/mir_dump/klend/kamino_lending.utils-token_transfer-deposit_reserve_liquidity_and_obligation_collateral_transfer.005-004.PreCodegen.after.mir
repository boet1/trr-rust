// MIR for `deposit_reserve_liquidity_and_obligation_collateral_transfer` after PreCodegen

fn deposit_reserve_liquidity_and_obligation_collateral_transfer(_1: anchor_lang::prelude::AccountInfo<'_>, _2: anchor_lang::prelude::AccountInfo<'_>, _3: anchor_lang::prelude::AccountInfo<'_>, _4: anchor_lang::prelude::AccountInfo<'_>, _5: anchor_lang::prelude::AccountInfo<'_>, _6: anchor_lang::prelude::AccountInfo<'_>, _7: anchor_lang::prelude::AccountInfo<'_>, _8: anchor_lang::prelude::AccountInfo<'_>, _9: anchor_lang::prelude::AccountInfo<'_>, _10: &[&[u8]], _11: u64, _12: u8, _13: u64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug source_liquidity_deposit => _1;
    debug destination_liquidity_deposit => _2;
    debug user_authority => _3;
    debug liquidity_mint => _4;
    debug liquidity_token_program => _5;
    debug collateral_mint => _6;
    debug collateral_supply_vault => _7;
    debug collateral_token_program => _8;
    debug mint_authority => _9;
    debug authority_signer_seeds => _10;
    debug liquidity_deposit_amount => _11;
    debug liquidity_decimals => _12;
    debug collateral_mint_amount => _13;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _14: anchor_lang::prelude::AccountInfo<'_>;
    let mut _15: anchor_lang::prelude::AccountInfo<'_>;
    let mut _16: anchor_lang::prelude::AccountInfo<'_>;
    let mut _17: anchor_lang::prelude::AccountInfo<'_>;
    let mut _18: anchor_lang::prelude::AccountInfo<'_>;
    let mut _19: anchor_lang::prelude::AccountInfo<'_>;
    let mut _20: anchor_lang::prelude::AccountInfo<'_>;
    let mut _21: anchor_lang::prelude::AccountInfo<'_>;
    let mut _22: anchor_lang::prelude::AccountInfo<'_>;
    let mut _23: &[&[u8]];
    let mut _24: u64;
    let mut _25: u8;
    let mut _26: u64;

    bb0: {
        StorageLive(_14);
        _14 = move _1;
        StorageLive(_15);
        _15 = move _2;
        StorageLive(_16);
        _16 = move _3;
        StorageLive(_17);
        _17 = move _4;
        StorageLive(_18);
        _18 = move _5;
        StorageLive(_19);
        _19 = move _6;
        StorageLive(_20);
        _20 = move _8;
        StorageLive(_21);
        _21 = move _7;
        StorageLive(_22);
        _22 = move _9;
        StorageLive(_23);
        _23 = &(*_10);
        StorageLive(_24);
        _24 = _11;
        StorageLive(_25);
        _25 = _12;
        StorageLive(_26);
        _26 = _13;
        _0 = deposit_reserve_liquidity_transfer(move _14, move _15, move _16, move _17, move _18, move _19, move _20, move _21, move _22, move _23, move _24, move _25, move _26) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
