digraph Mir_0_1779 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn find_applicable_obligation_order(_1: &amp;ReErased state::reserve::Reserve, _2: &amp;ReErased state::reserve::Reserve, _3: &amp;ReErased state::obligation::Obligation) -&gt; std::option::Option&lt;(usize, state::order_operations::ConditionHit)&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;&gt;;<br align="left"/>let mut _6: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;&gt;;<br align="left"/>let mut _7: std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;;<br align="left"/>let mut _8: &amp;ReErased [state::obligation::ObligationOrder];<br align="left"/>let mut _9: &amp;ReErased [state::obligation::ObligationOrder; 2_usize];<br align="left"/>let mut _10: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;&gt;;<br align="left"/>let mut _11: ();<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::option::Option&lt;(usize, &amp;ReErased state::obligation::ObligationOrder)&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationOrder&gt;&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: !;<br align="left"/>let _18: usize;<br align="left"/>let _19: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _20: std::option::Option&lt;state::order_operations::ConditionHit&gt;;<br align="left"/>let mut _21: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _22: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _23: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _24: &amp;ReErased state::obligation::ObligationOrder;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: state::order_operations::ConditionHit;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: (usize, state::order_operations::ConditionHit);<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: state::order_operations::ConditionHit;<br align="left"/>debug collateral_reserve =&gt; _1;<br align="left"/>debug debt_reserve =&gt; _2;<br align="left"/>debug obligation =&gt; _3;<br align="left"/>debug iter =&gt; _10;<br align="left"/>debug order_index =&gt; _18;<br align="left"/>debug order =&gt; _19;<br align="left"/>debug met_condition =&gt; _26;<br align="left"/>>;
    bb0__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;((*_3).25: [state::obligation::ObligationOrder; 2])<br/>_8 = move _9 as &amp;[state::obligation::ObligationOrder] (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = core::slice::&lt;impl [obligation::ObligationOrder]&gt;::iter(move _8)</td></tr></table>>];
    bb1__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::slice::Iter&lt;'_, obligation::ObligationOrder&gt; as Iterator&gt;::enumerate(move _7)</td></tr></table>>];
    bb2__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, obligation::ObligationOrder&gt;&gt; as IntoIterator&gt;::into_iter(move _6)</td></tr></table>>];
    bb3__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_10)<br/>_10 = move _5<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut _10<br/>_14 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_13 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, obligation::ObligationOrder&gt;&gt; as Iterator&gt;::next(move _14)</td></tr></table>>];
    bb5__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb6__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = (((_13 as Some).0: (usize, &amp;state::obligation::ObligationOrder)).0: usize)<br/>StorageLive(_19)<br/>_19 = (((_13 as Some).0: (usize, &amp;state::obligation::ObligationOrder)).1: &amp;state::obligation::ObligationOrder)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_1)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/>StorageLive(_23)<br/>_23 = &amp;(*_3)<br/>StorageLive(_24)<br/>_24 = &amp;(*_19)<br/></td></tr><tr><td align="left">_20 = evaluate_order_condition(move _21, move _22, move _23, move _24)</td></tr></table>>];
    bb7__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_4 = const ()<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>_0 = std::option::Option::&lt;(usize, ConditionHit)&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>_25 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb10__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_20 as Some).0: state::order_operations::ConditionHit)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _18<br/>StorageLive(_30)<br/>_30 = move _26<br/>_28 = (move _29, move _30)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>_0 = std::option::Option::&lt;(usize, ConditionHit)&gt;::Some(move _28)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_12 = const ()<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1779 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1779 -> bb1__0_1779 [label="return"];
    bb1__0_1779 -> bb2__0_1779 [label="return"];
    bb2__0_1779 -> bb3__0_1779 [label="return"];
    bb3__0_1779 -> bb4__0_1779 [label=""];
    bb4__0_1779 -> bb5__0_1779 [label="return"];
    bb5__0_1779 -> bb8__0_1779 [label="0"];
    bb5__0_1779 -> bb6__0_1779 [label="1"];
    bb5__0_1779 -> bb7__0_1779 [label="otherwise"];
    bb6__0_1779 -> bb9__0_1779 [label="return"];
    bb8__0_1779 -> bb12__0_1779 [label=""];
    bb9__0_1779 -> bb10__0_1779 [label="1"];
    bb9__0_1779 -> bb11__0_1779 [label="otherwise"];
    bb10__0_1779 -> bb12__0_1779 [label=""];
    bb11__0_1779 -> bb4__0_1779 [label=""];
}
