digraph Mir_0_487 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_refresh_obligation::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;&gt;, _2: state::types::MaxReservesAsCollateralCheck) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _4: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _23: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _31: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _32: usize;<br align="left"/>let mut _33: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _34: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _35: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _36: usize;<br align="left"/>let mut _37: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _38: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _39: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _40: usize;<br align="left"/>let mut _41: usize;<br align="left"/>let mut _42: usize;<br align="left"/>let mut _43: (usize, bool);<br align="left"/>let _44: usize;<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _47: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _48: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _49: usize;<br align="left"/>let mut _50: usize;<br align="left"/>let mut _51: (usize, bool);<br align="left"/>let _52: ();<br align="left"/>let mut _53: bool;<br align="left"/>let mut _54: usize;<br align="left"/>let mut _55: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: usize;<br align="left"/>let mut _57: !;<br align="left"/>let _58: ();<br align="left"/>let mut _59: &amp;ReErased str;<br align="left"/>let _60: &amp;ReErased str;<br align="left"/>let mut _61: &amp;ReErased std::string::String;<br align="left"/>let _62: &amp;ReErased std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let mut _65: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _69: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _73: [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased usize;<br align="left"/>let _76: &amp;ReErased usize;<br align="left"/>let mut _77: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased usize;<br align="left"/>let _79: &amp;ReErased usize;<br align="left"/>let _80: usize;<br align="left"/>let mut _81: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _82: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased bool;<br align="left"/>let _84: &amp;ReErased bool;<br align="left"/>let _85: bool;<br align="left"/>let mut _86: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _87: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _88: &amp;ReErased std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased usize;<br align="left"/>let _91: &amp;ReErased usize;<br align="left"/>let mut _92: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased usize;<br align="left"/>let _94: &amp;ReErased usize;<br align="left"/>let mut _95: anchor_lang::error::Error;<br align="left"/>let mut _96: anchor_lang::error::AnchorError;<br align="left"/>let mut _97: std::string::String;<br align="left"/>let mut _98: &amp;ReErased LendingError;<br align="left"/>let _99: LendingError;<br align="left"/>let mut _100: u32;<br align="left"/>let mut _101: LendingError;<br align="left"/>let mut _102: std::string::String;<br align="left"/>let mut _103: &amp;ReErased LendingError;<br align="left"/>let _104: LendingError;<br align="left"/>let mut _105: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _106: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _107: anchor_lang::error::Source;<br align="left"/>let mut _108: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _109: std::iter::Map&lt;std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:488 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _110: std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _111: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _112: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _113: usize;<br align="left"/>let mut _114: Closure(DefId(0:488 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()]);<br align="left"/>let _115: std::iter::Map&lt;std::iter::Take&lt;std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;, Closure(DefId(0:489 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _116: std::iter::Take&lt;std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _117: std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _118: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _119: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _120: usize;<br align="left"/>let mut _121: usize;<br align="left"/>let mut _122: Closure(DefId(0:489 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()]);<br align="left"/>let _123: std::iter::Map&lt;std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:490 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::referral::ReferrerTokenState&gt;, []), ()])&gt;;<br align="left"/>let mut _124: std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _125: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _126: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _127: usize;<br align="left"/>let mut _128: Closure(DefId(0:490 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::referral::ReferrerTokenState&gt;, []), ()]);<br align="left"/>let _129: ();<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _131: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _132: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _133: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _134: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _135: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _136: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _137: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _138: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _139: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _140: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _141: u64;<br align="left"/>let mut _142: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _143: std::iter::Map&lt;std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:488 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _144: std::iter::Map&lt;std::iter::Take&lt;std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;, Closure(DefId(0:489 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _145: std::iter::Map&lt;std::iter::Skip&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:490 ~ kamino_lending[6389]::handlers::handler_refresh_obligation::process::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::referral::ReferrerTokenState&gt;, []), ()])&gt;;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _150: ();<br align="left"/>let mut _151: ();<br align="left"/>let mut _152: &amp;ReErased LendingError;<br align="left"/>let mut _153: &amp;ReErased LendingError;<br align="left"/>let mut _154: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _155: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _156: &amp;ReErased mut handlers::handler_refresh_obligation::RefreshObligation&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _158: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _159: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _160: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _161: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug max_reserves_as_collateral_check =&gt; _2;<br align="left"/>debug obligation =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug lending_market =&gt; _22;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug borrow_count =&gt; _32;<br align="left"/>debug deposit_count =&gt; _36;<br align="left"/>debug reserves_count =&gt; _40;<br align="left"/>debug expected_remaining_accounts =&gt; _44;<br align="left"/>debug res =&gt; _64;<br align="left"/>debug deposit_reserves_iter =&gt; _109;<br align="left"/>debug borrow_reserves_iter =&gt; _115;<br align="left"/>debug referrer_token_states_iter =&gt; _123;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>>;
    bb0__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_155 = deref_copy (_1.1: &amp;mut handlers::handler_refresh_obligation::RefreshObligation&lt;'_&gt;)<br/>_7 = &amp;((*_155).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_mut(move _7)</td></tr></table>>];
    bb1__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_3 = &amp;mut _4<br/>_162 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_176 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_13 = &amp;_14<br/>_164 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_156 = deref_copy (_1.1: &amp;mut handlers::handler_refresh_obligation::RefreshObligation&lt;'_&gt;)<br/>_26 = &amp;((*_156).0: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_25 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _26)</td></tr></table>>];
    bb10__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_174 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb13__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_24 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_23 = move _31<br/>StorageDead(_31)<br/>_22 = &amp;_23<br/>_166 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_3)<br/></td></tr><tr><td align="left">_34 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb15__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb16__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_172 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = obligation::Obligation::active_borrows_count(move _33)</td></tr></table>>];
    bb18__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_3)<br/></td></tr><tr><td align="left">_38 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb19__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = obligation::Obligation::active_deposits_count(move _37)</td></tr></table>>];
    bb20__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_38)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = _32<br/>StorageLive(_42)<br/>_42 = _36<br/>_43 = CheckedAdd(_41, _42)<br/></td></tr><tr><td align="left">assert(!move (_43.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _41, move _42)</td></tr></table>>];
    bb21__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_40 = move (_43.0: usize)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;(*_3)<br/></td></tr><tr><td align="left">_47 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _48)</td></tr></table>>];
    bb22__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_46 = &amp;(*_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_45 = obligation::Obligation::has_referrer(move _46)</td></tr></table>>];
    bb23__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb24__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>_49 = _40<br/>StorageLive(_50)<br/>_50 = _32<br/>_51 = CheckedAdd(_49, _50)<br/></td></tr><tr><td align="left">assert(!move (_51.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _49, move _50)</td></tr></table>>];
    bb25__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_44 = move (_51.0: usize)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>_44 = _40<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_157 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_55 = &amp;(*_157)<br/></td></tr><tr><td align="left">_54 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::len(move _55)</td></tr></table>>];
    bb28__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_56)<br/>_56 = _44<br/>_53 = Ne(move _54, move _56)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb29__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_154 = const _<br/>_68 = &amp;(*_154)<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_44<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _75)</td></tr></table>>];
    bb30__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_158 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_81 = &amp;(*_158)<br/></td></tr><tr><td align="left">_80 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::len(move _81)</td></tr></table>>];
    bb31__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _78)</td></tr></table>>];
    bb32__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;(*_3)<br/></td></tr><tr><td align="left">_87 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb33__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_85 = obligation::Obligation::has_referrer(move _86)</td></tr></table>>];
    bb34__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = &amp;_85<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;bool&gt;(move _83)</td></tr></table>>];
    bb35__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_40<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _90)</td></tr></table>>];
    bb36__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_32<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _93)</td></tr></table>>];
    bb37__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_73 = [move _74, move _77, move _82, move _89, move _92]<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_82)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_65 = Arguments::&lt;'_&gt;::new_v1(move _66, move _70)</td></tr></table>>];
    bb38__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = format(move _65)</td></tr></table>>];
    bb39__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>_63 = move _64<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::string::String as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb40__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = solana_program::log::sol_log(move _59)</td></tr></table>>];
    bb41__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb42__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_153 = const _<br/>_98 = &amp;(*_153)<br/></td></tr><tr><td align="left">_97 = LendingError::name(move _98)</td></tr></table>>];
    bb43__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_100 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _101)</td></tr></table>>];
    bb44__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_152 = const _<br/>_103 = &amp;(*_152)<br/></td></tr><tr><td align="left">_102 = &lt;LendingError as ToString&gt;::to_string(move _103)</td></tr></table>>];
    bb45__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_refresh_obligation.rs&quot;, line: const 36_u32 }<br/>_106 = anchor_lang::error::ErrorOrigin::Source(move _107)<br/>StorageDead(_107)<br/>_105 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _106)<br/>StorageDead(_106)<br/>StorageLive(_108)<br/>_108 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_96 = anchor_lang::error::AnchorError { error_name: move _97, error_code_number: move _100, error_msg: move _102, error_origin: move _105, compared_values: move _108 }<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _96)</td></tr></table>>];
    bb46__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _95)<br/>StorageDead(_95)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_52 = const ()<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_159 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_112 = &amp;(*_159)<br/></td></tr><tr><td align="left">_111 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _112)</td></tr></table>>];
    bb48__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_113)<br/>_113 = _36<br/></td></tr><tr><td align="left">_110 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::take(move _111, move _113)</td></tr></table>>];
    bb49__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageLive(_114)<br/>_114 = {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:43:14: 43:28}<br/></td></tr><tr><td align="left">_109 = &lt;std::iter::Take&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::map::&lt;account_loader_trait::FatAccountLoader&lt;'_, reserve::Reserve&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:43:14: 43:28}&gt;(move _110, move _114)</td></tr></table>>];
    bb50__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_110)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_160 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_119 = &amp;(*_160)<br/></td></tr><tr><td align="left">_118 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _119)</td></tr></table>>];
    bb51__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = _36<br/></td></tr><tr><td align="left">_117 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::skip(move _118, move _120)</td></tr></table>>];
    bb52__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageLive(_121)<br/>_121 = _32<br/></td></tr><tr><td align="left">_116 = &lt;Skip&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::take(move _117, move _121)</td></tr></table>>];
    bb53__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_117)<br/>StorageLive(_122)<br/>_122 = {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:50:14: 50:28}<br/></td></tr><tr><td align="left">_115 = &lt;std::iter::Take&lt;Skip&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt; as Iterator&gt;::map::&lt;account_loader_trait::FatAccountLoader&lt;'_, reserve::Reserve&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:50:14: 50:28}&gt;(move _116, move _122)</td></tr></table>>];
    bb54__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_116)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_161 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_126 = &amp;(*_161)<br/></td></tr><tr><td align="left">_125 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _126)</td></tr></table>>];
    bb55__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>_127 = _40<br/></td></tr><tr><td align="left">_124 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::skip(move _125, move _127)</td></tr></table>>];
    bb56__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>_128 = {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:56:18: 56:32}<br/></td></tr><tr><td align="left">_123 = &lt;Skip&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::map::&lt;account_loader_trait::FatAccountLoader&lt;'_, referral::ReferrerTokenState&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:56:18: 56:32}&gt;(move _124, move _128)</td></tr></table>>];
    bb57__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = const {alloc279: &amp;anchor_lang::prelude::Pubkey}<br/>_133 = &amp;(*_134)<br/>_132 = &amp;(*_133)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_136 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _137)</td></tr></table>>];
    bb58__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_135 = &amp;mut (*_136)<br/>StorageDead(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;(*_22)<br/></td></tr><tr><td align="left">_139 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb59__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_138 = &amp;(*_139)<br/>StorageDead(_140)<br/>StorageLive(_141)<br/>_141 = ((*_13).0: u64)<br/>StorageLive(_142)<br/>_142 = move _2<br/>StorageLive(_143)<br/>_143 = move _109<br/>StorageLive(_144)<br/>_144 = move _115<br/>StorageLive(_145)<br/>_145 = move _123<br/></td></tr><tr><td align="left">_131 = lending_operations::refresh_obligation::&lt;'_, account_loader_trait::FatAccountLoader&lt;'_, reserve::Reserve&gt;, account_loader_trait::FatAccountLoader&lt;'_, referral::ReferrerTokenState&gt;, std::iter::Map&lt;std::iter::Take&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:43:14: 43:28}&gt;, std::iter::Map&lt;std::iter::Take&lt;Skip&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:50:14: 50:28}&gt;, std::iter::Map&lt;Skip&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;, {closure@programs\klend\src\handlers\handler_refresh_obligation.rs:56:18: 56:32}&gt;&gt;(move _132, move _135, move _138, move _141, move _142, move _143, move _144, move _145)</td></tr></table>>];
    bb60__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb61__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_146 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb62__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_130 as Continue).0: ())<br/>_129 = _150<br/>StorageDead(_150)<br/>_168 = discriminant(_130)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_151)<br/>_151 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _151)<br/>StorageDead(_151)<br/>StorageDead(_123)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb63__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = move ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_149)<br/>_149 = move _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb64__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>_170 = discriminant(_130)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_123)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb66__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb68__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb70__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">return</td></tr></table>>];
    bb72__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb73__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb74__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb75__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb76__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb77__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left" balign="left">_178 = discriminant(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_179 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_180 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_181 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_487 -> bb1__0_487 [label="return"];
    bb1__0_487 -> bb2__0_487 [label="return"];
    bb1__0_487 -> bb76__0_487 [label="unwind"];
    bb2__0_487 -> bb3__0_487 [label="0"];
    bb2__0_487 -> bb5__0_487 [label="1"];
    bb2__0_487 -> bb4__0_487 [label="otherwise"];
    bb3__0_487 -> bb7__0_487 [label="return"];
    bb3__0_487 -> bb75__0_487 [label="unwind"];
    bb5__0_487 -> bb6__0_487 [label="return"];
    bb5__0_487 -> bb80__0_487 [label="unwind"];
    bb6__0_487 -> bb70__0_487 [label=""];
    bb7__0_487 -> bb8__0_487 [label="return"];
    bb7__0_487 -> bb75__0_487 [label="unwind"];
    bb8__0_487 -> bb9__0_487 [label="0"];
    bb8__0_487 -> bb10__0_487 [label="1"];
    bb8__0_487 -> bb4__0_487 [label="otherwise"];
    bb9__0_487 -> bb12__0_487 [label="return"];
    bb9__0_487 -> bb75__0_487 [label="unwind"];
    bb10__0_487 -> bb11__0_487 [label="return"];
    bb10__0_487 -> bb79__0_487 [label="unwind"];
    bb11__0_487 -> bb69__0_487 [label=""];
    bb12__0_487 -> bb13__0_487 [label="return"];
    bb12__0_487 -> bb75__0_487 [label="unwind"];
    bb13__0_487 -> bb14__0_487 [label="0"];
    bb13__0_487 -> bb15__0_487 [label="1"];
    bb13__0_487 -> bb4__0_487 [label="otherwise"];
    bb14__0_487 -> bb17__0_487 [label="return"];
    bb14__0_487 -> bb74__0_487 [label="unwind"];
    bb15__0_487 -> bb16__0_487 [label="return"];
    bb15__0_487 -> bb78__0_487 [label="unwind"];
    bb16__0_487 -> bb68__0_487 [label=""];
    bb17__0_487 -> bb18__0_487 [label="return"];
    bb17__0_487 -> bb74__0_487 [label="unwind"];
    bb18__0_487 -> bb19__0_487 [label="return"];
    bb18__0_487 -> bb74__0_487 [label="unwind"];
    bb19__0_487 -> bb20__0_487 [label="return"];
    bb19__0_487 -> bb74__0_487 [label="unwind"];
    bb20__0_487 -> bb21__0_487 [label="success"];
    bb20__0_487 -> bb74__0_487 [label="unwind"];
    bb21__0_487 -> bb22__0_487 [label="return"];
    bb21__0_487 -> bb74__0_487 [label="unwind"];
    bb22__0_487 -> bb23__0_487 [label="return"];
    bb22__0_487 -> bb74__0_487 [label="unwind"];
    bb23__0_487 -> bb26__0_487 [label="0"];
    bb23__0_487 -> bb24__0_487 [label="otherwise"];
    bb24__0_487 -> bb25__0_487 [label="success"];
    bb24__0_487 -> bb74__0_487 [label="unwind"];
    bb25__0_487 -> bb27__0_487 [label=""];
    bb26__0_487 -> bb27__0_487 [label=""];
    bb27__0_487 -> bb28__0_487 [label="return"];
    bb27__0_487 -> bb74__0_487 [label="unwind"];
    bb28__0_487 -> bb47__0_487 [label="0"];
    bb28__0_487 -> bb29__0_487 [label="otherwise"];
    bb29__0_487 -> bb30__0_487 [label="return"];
    bb29__0_487 -> bb74__0_487 [label="unwind"];
    bb30__0_487 -> bb31__0_487 [label="return"];
    bb30__0_487 -> bb74__0_487 [label="unwind"];
    bb31__0_487 -> bb32__0_487 [label="return"];
    bb31__0_487 -> bb74__0_487 [label="unwind"];
    bb32__0_487 -> bb33__0_487 [label="return"];
    bb32__0_487 -> bb74__0_487 [label="unwind"];
    bb33__0_487 -> bb34__0_487 [label="return"];
    bb33__0_487 -> bb74__0_487 [label="unwind"];
    bb34__0_487 -> bb35__0_487 [label="return"];
    bb34__0_487 -> bb74__0_487 [label="unwind"];
    bb35__0_487 -> bb36__0_487 [label="return"];
    bb35__0_487 -> bb74__0_487 [label="unwind"];
    bb36__0_487 -> bb37__0_487 [label="return"];
    bb36__0_487 -> bb74__0_487 [label="unwind"];
    bb37__0_487 -> bb38__0_487 [label="return"];
    bb37__0_487 -> bb74__0_487 [label="unwind"];
    bb38__0_487 -> bb39__0_487 [label="return"];
    bb38__0_487 -> bb74__0_487 [label="unwind"];
    bb39__0_487 -> bb40__0_487 [label="return"];
    bb39__0_487 -> bb73__0_487 [label="unwind"];
    bb40__0_487 -> bb41__0_487 [label="return"];
    bb40__0_487 -> bb73__0_487 [label="unwind"];
    bb41__0_487 -> bb42__0_487 [label="return"];
    bb41__0_487 -> bb74__0_487 [label="unwind"];
    bb42__0_487 -> bb43__0_487 [label="return"];
    bb42__0_487 -> bb74__0_487 [label="unwind"];
    bb43__0_487 -> bb44__0_487 [label="return"];
    bb43__0_487 -> bb72__0_487 [label="unwind"];
    bb44__0_487 -> bb45__0_487 [label="return"];
    bb44__0_487 -> bb72__0_487 [label="unwind"];
    bb45__0_487 -> bb46__0_487 [label="return"];
    bb45__0_487 -> bb74__0_487 [label="unwind"];
    bb46__0_487 -> bb67__0_487 [label=""];
    bb47__0_487 -> bb48__0_487 [label="return"];
    bb47__0_487 -> bb74__0_487 [label="unwind"];
    bb48__0_487 -> bb49__0_487 [label="return"];
    bb48__0_487 -> bb74__0_487 [label="unwind"];
    bb49__0_487 -> bb50__0_487 [label="return"];
    bb49__0_487 -> bb74__0_487 [label="unwind"];
    bb50__0_487 -> bb51__0_487 [label="return"];
    bb50__0_487 -> bb74__0_487 [label="unwind"];
    bb51__0_487 -> bb52__0_487 [label="return"];
    bb51__0_487 -> bb74__0_487 [label="unwind"];
    bb52__0_487 -> bb53__0_487 [label="return"];
    bb52__0_487 -> bb74__0_487 [label="unwind"];
    bb53__0_487 -> bb54__0_487 [label="return"];
    bb53__0_487 -> bb74__0_487 [label="unwind"];
    bb54__0_487 -> bb55__0_487 [label="return"];
    bb54__0_487 -> bb74__0_487 [label="unwind"];
    bb55__0_487 -> bb56__0_487 [label="return"];
    bb55__0_487 -> bb74__0_487 [label="unwind"];
    bb56__0_487 -> bb57__0_487 [label="return"];
    bb56__0_487 -> bb74__0_487 [label="unwind"];
    bb57__0_487 -> bb58__0_487 [label="return"];
    bb57__0_487 -> bb74__0_487 [label="unwind"];
    bb58__0_487 -> bb59__0_487 [label="return"];
    bb58__0_487 -> bb74__0_487 [label="unwind"];
    bb59__0_487 -> bb60__0_487 [label="return"];
    bb59__0_487 -> bb74__0_487 [label="unwind"];
    bb60__0_487 -> bb61__0_487 [label="return"];
    bb60__0_487 -> bb74__0_487 [label="unwind"];
    bb61__0_487 -> bb62__0_487 [label="0"];
    bb61__0_487 -> bb63__0_487 [label="1"];
    bb61__0_487 -> bb4__0_487 [label="otherwise"];
    bb62__0_487 -> bb65__0_487 [label="return"];
    bb62__0_487 -> bb75__0_487 [label="unwind"];
    bb63__0_487 -> bb64__0_487 [label="return"];
    bb63__0_487 -> bb77__0_487 [label="unwind"];
    bb64__0_487 -> bb67__0_487 [label=""];
    bb65__0_487 -> bb66__0_487 [label="return"];
    bb65__0_487 -> bb76__0_487 [label="unwind"];
    bb66__0_487 -> bb71__0_487 [label=""];
    bb67__0_487 -> bb68__0_487 [label="return"];
    bb67__0_487 -> bb75__0_487 [label="unwind"];
    bb68__0_487 -> bb69__0_487 [label=""];
    bb69__0_487 -> bb70__0_487 [label="return"];
    bb69__0_487 -> bb76__0_487 [label="unwind"];
    bb70__0_487 -> bb71__0_487 [label=""];
    bb72__0_487 -> bb74__0_487 [label="return"];
    bb73__0_487 -> bb74__0_487 [label="return"];
    bb74__0_487 -> bb75__0_487 [label="return"];
    bb75__0_487 -> bb76__0_487 [label="return"];
    bb77__0_487 -> bb74__0_487 [label=""];
    bb78__0_487 -> bb75__0_487 [label=""];
    bb79__0_487 -> bb75__0_487 [label=""];
    bb80__0_487 -> bb76__0_487 [label=""];
}
