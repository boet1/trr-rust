digraph Mir_0_1429 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_and_update_withdrawal_caps(_1: &amp;ReErased mut state::reserve::WithdrawalCaps, _2: u64, _3: u64, _4: lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction) -&gt; std::result::Result&lt;(), LendingError&gt;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, bool&gt;;<br align="left"/>let mut _10: std::result::Result&lt;bool, LendingError&gt;;<br align="left"/>let mut _11: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _17: bool;<br align="left"/>let _18: ();<br align="left"/>let mut _19: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _20: u64;<br align="left"/>let _21: ();<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: &amp;ReErased lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>let mut _24: &amp;ReErased lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>let _25: lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), LendingError&gt;;<br align="left"/>let mut _29: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _35: ();<br align="left"/>let mut _36: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>let mut _39: lending_market::withdrawal_cap_operations::utils::WithdrawalCapOverflowAction;<br align="left"/>let mut _40: &amp;ReErased mut state::reserve::WithdrawalCaps;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>let mut _43: lending_market::withdrawal_cap_operations::utils::WithdrawalCapOverflowAction;<br align="left"/>let mut _44: &amp;ReErased lending_market::withdrawal_cap_operations::utils::WithdrawalCapAction;<br align="left"/>debug caps =&gt; _1;<br align="left"/>debug requested_amount =&gt; _2;<br align="left"/>debug curr_timestamp =&gt; _3;<br align="left"/>debug action =&gt; _4;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>>;
    bb0__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).3: u64)<br/>_5 = Ne(move _6, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_1)<br/>StorageLive(_12)<br/>_12 = _3<br/></td></tr><tr><td align="left">_10 = check_last_interval_elapsed(move _11, move _12)</td></tr></table>>];
    bb2__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;bool, LendingError&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: bool)<br/>_8 = _17<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb5__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb7__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_1)<br/>StorageLive(_20)<br/>_20 = _3<br/></td></tr><tr><td align="left">_18 = reset_current_interval_and_counter(move _19, move _20)</td></tr></table>>];
    bb9__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_7 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;_4<br/>StorageLive(_24)<br/>_44 = const _<br/>_24 = &amp;(*_44)<br/></td></tr><tr><td align="left">_22 = &lt;WithdrawalCapAction as PartialEq&gt;::eq(move _23, move _24)</td></tr></table>>];
    bb12__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb13__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_1)<br/>StorageLive(_30)<br/>_30 = _2<br/></td></tr><tr><td align="left">_28 = check_capacity_allows_withdrawals(move _29, move _30)</td></tr></table>>];
    bb14__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), LendingError&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb15__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_31 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Continue).0: ())<br/>_26 = _35<br/>StorageDead(_35)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>_21 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>_21 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_36)<br/>_36 = &amp;mut (*_1)<br/>StorageLive(_37)<br/>_37 = _2<br/>StorageLive(_38)<br/>_38 = move _4<br/>StorageLive(_39)<br/>_39 = WithdrawalCapOverflowAction::ErrorOnOverflow<br/></td></tr><tr><td align="left">_0 = update_counter(move _36, move _37, move _38, move _39)</td></tr></table>>];
    bb21__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_1)<br/>StorageLive(_41)<br/>_41 = _2<br/>StorageLive(_42)<br/>_42 = move _4<br/>StorageLive(_43)<br/>_43 = WithdrawalCapOverflowAction::SaturatingOverflow<br/></td></tr><tr><td align="left">_0 = update_counter(move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb23__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1429 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1429 -> bb22__0_1429 [label="0"];
    bb0__0_1429 -> bb1__0_1429 [label="otherwise"];
    bb1__0_1429 -> bb2__0_1429 [label="return"];
    bb2__0_1429 -> bb3__0_1429 [label="return"];
    bb3__0_1429 -> bb4__0_1429 [label="0"];
    bb3__0_1429 -> bb6__0_1429 [label="1"];
    bb3__0_1429 -> bb5__0_1429 [label="otherwise"];
    bb4__0_1429 -> bb9__0_1429 [label="0"];
    bb4__0_1429 -> bb8__0_1429 [label="otherwise"];
    bb6__0_1429 -> bb7__0_1429 [label="return"];
    bb7__0_1429 -> bb25__0_1429 [label=""];
    bb8__0_1429 -> bb10__0_1429 [label="return"];
    bb9__0_1429 -> bb11__0_1429 [label=""];
    bb10__0_1429 -> bb11__0_1429 [label=""];
    bb11__0_1429 -> bb12__0_1429 [label="return"];
    bb12__0_1429 -> bb19__0_1429 [label="0"];
    bb12__0_1429 -> bb13__0_1429 [label="otherwise"];
    bb13__0_1429 -> bb14__0_1429 [label="return"];
    bb14__0_1429 -> bb15__0_1429 [label="return"];
    bb15__0_1429 -> bb16__0_1429 [label="0"];
    bb15__0_1429 -> bb17__0_1429 [label="1"];
    bb15__0_1429 -> bb5__0_1429 [label="otherwise"];
    bb16__0_1429 -> bb20__0_1429 [label=""];
    bb17__0_1429 -> bb18__0_1429 [label="return"];
    bb18__0_1429 -> bb25__0_1429 [label=""];
    bb19__0_1429 -> bb20__0_1429 [label=""];
    bb20__0_1429 -> bb21__0_1429 [label="return"];
    bb21__0_1429 -> bb24__0_1429 [label=""];
    bb22__0_1429 -> bb23__0_1429 [label="return"];
    bb23__0_1429 -> bb24__0_1429 [label=""];
    bb24__0_1429 -> bb26__0_1429 [label=""];
    bb25__0_1429 -> bb26__0_1429 [label=""];
}
