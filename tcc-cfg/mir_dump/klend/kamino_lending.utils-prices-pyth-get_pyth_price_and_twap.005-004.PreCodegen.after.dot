digraph Mir_0_2552 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_pyth_price_and_twap(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;utils::prices::types::TimestampedPriceWithTwap, anchor_lang::error::Error&gt;<br align="left"/>let _2: pyth_solana_receiver_sdk::price_update::PriceFeedMessage;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, pyth_solana_receiver_sdk::price_update::PriceFeedMessage&gt;;<br align="left"/>let mut _4: std::result::Result&lt;pyth_solana_receiver_sdk::price_update::PriceFeedMessage, anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _10: pyth_solana_receiver_sdk::price_update::PriceFeedMessage;<br align="left"/>let _11: pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let _12: pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let mut _13: (pyth_solana_receiver_sdk::price_update::Price, pyth_solana_receiver_sdk::price_update::Price);<br align="left"/>let mut _14: pyth_solana_receiver_sdk::price_update::PriceFeedMessage;<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _17: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let _19: &amp;ReErased pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _28: &amp;ReErased pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let _29: &amp;ReErased pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: ();<br align="left"/>let mut _35: utils::prices::types::TimestampedPriceWithTwap;<br align="left"/>let mut _36: utils::prices::types::TimestampedPrice;<br align="left"/>let mut _37: pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let mut _38: std::option::Option&lt;utils::prices::types::TimestampedPrice&gt;;<br align="left"/>let mut _39: utils::prices::types::TimestampedPrice;<br align="left"/>let mut _40: pyth_solana_receiver_sdk::price_update::Price;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>debug pyth_price_info =&gt; _1;<br align="left"/>debug price_feed =&gt; _2;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug price =&gt; _11;<br align="left"/>debug twap =&gt; _12;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>>;
    bb0__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = load_price_feed_from_account_info(move _5)</td></tr></table>>];
    bb1__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;PriceFeedMessage, anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_3 as Continue).0: pyth_solana_receiver_sdk::price_update::PriceFeedMessage)<br/>_2 = _10<br/>StorageDead(_10)<br/>_41 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _2<br/></td></tr><tr><td align="left">_13 = into_pyth_price_and_twap(move _14)</td></tr></table>>];
    bb4__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPriceWithTwap, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_51 = discriminant(_3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_11)<br/>_11 = (_13.0: pyth_solana_receiver_sdk::price_update::Price)<br/>StorageLive(_12)<br/>_12 = (_13.1: pyth_solana_receiver_sdk::price_update::Price)<br/>StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;_11<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_17 = validate_pyth_confidence(move _18, const _)</td></tr></table>>];
    bb8__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_20 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_16 as Continue).0: ())<br/>_15 = _24<br/>StorageDead(_24)<br/>_43 = discriminant(_16)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_12<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = validate_pyth_confidence(move _28, const _)</td></tr></table>>];
    bb11__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPriceWithTwap, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_49 = discriminant(_16)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb14__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_30 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_26 as Continue).0: ())<br/>_25 = _34<br/>StorageDead(_34)<br/>_45 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _11<br/></td></tr><tr><td align="left">_36 = &lt;pyth_solana_receiver_sdk::price_update::Price as Into&lt;TimestampedPrice&gt;&gt;::into(move _37)</td></tr></table>>];
    bb16__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;TimestampedPriceWithTwap, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb17__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_47 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _12<br/></td></tr><tr><td align="left">_39 = &lt;pyth_solana_receiver_sdk::price_update::Price as Into&lt;TimestampedPrice&gt;&gt;::into(move _40)</td></tr></table>>];
    bb19__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = std::option::Option::&lt;TimestampedPrice&gt;::Some(move _39)<br/>StorageDead(_39)<br/>_35 = TimestampedPriceWithTwap { price: move _36, twap: move _38 }<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>_0 = std::result::Result::&lt;TimestampedPriceWithTwap, anchor_lang::error::Error&gt;::Ok(move _35)<br/>StorageDead(_35)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb24__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb25__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_53 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_54 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_55 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2552 -> bb1__0_2552 [label="return"];
    bb1__0_2552 -> bb2__0_2552 [label="return"];
    bb1__0_2552 -> bb24__0_2552 [label="unwind"];
    bb2__0_2552 -> bb3__0_2552 [label="0"];
    bb2__0_2552 -> bb5__0_2552 [label="1"];
    bb2__0_2552 -> bb4__0_2552 [label="otherwise"];
    bb3__0_2552 -> bb7__0_2552 [label="return"];
    bb5__0_2552 -> bb6__0_2552 [label="return"];
    bb5__0_2552 -> bb27__0_2552 [label="unwind"];
    bb6__0_2552 -> bb21__0_2552 [label=""];
    bb7__0_2552 -> bb8__0_2552 [label="return"];
    bb8__0_2552 -> bb9__0_2552 [label="return"];
    bb8__0_2552 -> bb24__0_2552 [label="unwind"];
    bb9__0_2552 -> bb10__0_2552 [label="0"];
    bb9__0_2552 -> bb11__0_2552 [label="1"];
    bb9__0_2552 -> bb4__0_2552 [label="otherwise"];
    bb10__0_2552 -> bb13__0_2552 [label="return"];
    bb11__0_2552 -> bb12__0_2552 [label="return"];
    bb11__0_2552 -> bb26__0_2552 [label="unwind"];
    bb12__0_2552 -> bb20__0_2552 [label=""];
    bb13__0_2552 -> bb14__0_2552 [label="return"];
    bb13__0_2552 -> bb24__0_2552 [label="unwind"];
    bb14__0_2552 -> bb15__0_2552 [label="0"];
    bb14__0_2552 -> bb16__0_2552 [label="1"];
    bb14__0_2552 -> bb4__0_2552 [label="otherwise"];
    bb15__0_2552 -> bb18__0_2552 [label="return"];
    bb16__0_2552 -> bb17__0_2552 [label="return"];
    bb16__0_2552 -> bb25__0_2552 [label="unwind"];
    bb17__0_2552 -> bb20__0_2552 [label=""];
    bb18__0_2552 -> bb19__0_2552 [label="return"];
    bb18__0_2552 -> bb23__0_2552 [label="unwind"];
    bb19__0_2552 -> bb22__0_2552 [label=""];
    bb20__0_2552 -> bb21__0_2552 [label=""];
    bb21__0_2552 -> bb22__0_2552 [label=""];
    bb23__0_2552 -> bb24__0_2552 [label="return"];
    bb25__0_2552 -> bb24__0_2552 [label=""];
    bb26__0_2552 -> bb24__0_2552 [label=""];
    bb27__0_2552 -> bb24__0_2552 [label=""];
}
