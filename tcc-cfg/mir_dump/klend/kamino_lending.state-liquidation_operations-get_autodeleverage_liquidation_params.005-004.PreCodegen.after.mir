// MIR for `get_autodeleverage_liquidation_params` after PreCodegen

fn get_autodeleverage_liquidation_params(_1: &reserve::Reserve, _2: &obligation::Obligation, _3: u64) -> std::option::Option<state::types::LiquidationParams> {
    debug autodeleverage_reserve => _1;
    debug obligation => _2;
    debug secs_since_deleveraging_started => _3;
    let mut _0: std::option::Option<state::types::LiquidationParams>;
    let _4: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _5: u64;
    let mut _7: &state::reserve::Reserve;
    let mut _8: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _10: &state::obligation::Obligation;
    let mut _11: bool;
    let mut _12: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _13: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _14: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _16: u64;
    let mut _17: u16;
    let mut _18: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _19: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _20: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _21: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _22: &state::obligation::Obligation;
    let _23: ();
    let _24: ();
    let mut _25: std::fmt::Arguments<'_>;
    let mut _26: &[&str];
    let mut _27: &[&str; 6];
    let _28: &[&str; 6];
    let _29: [&str; 6];
    let mut _30: &[core::fmt::rt::Argument<'_>];
    let mut _31: &[core::fmt::rt::Argument<'_>; 5];
    let _32: &[core::fmt::rt::Argument<'_>; 5];
    let _33: [core::fmt::rt::Argument<'_>; 5];
    let mut _34: (&utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &u64);
    let mut _35: &utils::fraction::FractionDisplay<'_>;
    let _36: utils::fraction::FractionDisplay<'_>;
    let mut _37: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _38: &utils::fraction::FractionDisplay<'_>;
    let _39: utils::fraction::FractionDisplay<'_>;
    let mut _40: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _41: &utils::fraction::FractionDisplay<'_>;
    let _42: utils::fraction::FractionDisplay<'_>;
    let mut _43: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _44: &utils::fraction::FractionDisplay<'_>;
    let _45: utils::fraction::FractionDisplay<'_>;
    let mut _46: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _47: &u64;
    let mut _49: core::fmt::rt::Argument<'_>;
    let mut _50: &utils::fraction::FractionDisplay<'_>;
    let mut _51: core::fmt::rt::Argument<'_>;
    let mut _52: &utils::fraction::FractionDisplay<'_>;
    let mut _53: core::fmt::rt::Argument<'_>;
    let mut _54: &u64;
    let mut _55: core::fmt::rt::Argument<'_>;
    let mut _56: &utils::fraction::FractionDisplay<'_>;
    let mut _57: core::fmt::rt::Argument<'_>;
    let mut _58: &utils::fraction::FractionDisplay<'_>;
    let mut _59: state::types::LiquidationParams;
    let mut _60: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _61: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _62: state::types::LiquidationReason;
    let _63: ();
    let _64: ();
    let mut _65: std::fmt::Arguments<'_>;
    let mut _66: &[&str];
    let mut _67: &[&str; 5];
    let _68: &[&str; 5];
    let _69: [&str; 5];
    let mut _70: &[core::fmt::rt::Argument<'_>];
    let mut _71: &[core::fmt::rt::Argument<'_>; 4];
    let _72: &[core::fmt::rt::Argument<'_>; 4];
    let _73: [core::fmt::rt::Argument<'_>; 4];
    let mut _74: (&utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &u64);
    let mut _75: &utils::fraction::FractionDisplay<'_>;
    let _76: utils::fraction::FractionDisplay<'_>;
    let mut _77: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _78: &utils::fraction::FractionDisplay<'_>;
    let _79: utils::fraction::FractionDisplay<'_>;
    let mut _80: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _81: &utils::fraction::FractionDisplay<'_>;
    let _82: utils::fraction::FractionDisplay<'_>;
    let mut _83: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _84: &u64;
    let mut _86: core::fmt::rt::Argument<'_>;
    let mut _87: &utils::fraction::FractionDisplay<'_>;
    let mut _88: core::fmt::rt::Argument<'_>;
    let mut _89: &utils::fraction::FractionDisplay<'_>;
    let mut _90: core::fmt::rt::Argument<'_>;
    let mut _91: &u64;
    let mut _92: core::fmt::rt::Argument<'_>;
    let mut _93: &utils::fraction::FractionDisplay<'_>;
    let mut _96: &utils::fraction::FractionDisplay<'_>;
    let mut _97: &utils::fraction::FractionDisplay<'_>;
    let mut _98: &u64;
    let mut _99: &utils::fraction::FractionDisplay<'_>;
    let mut _100: &utils::fraction::FractionDisplay<'_>;
    let mut _101: &utils::fraction::FractionDisplay<'_>;
    let mut _102: &utils::fraction::FractionDisplay<'_>;
    let mut _103: &u64;
    let mut _104: &utils::fraction::FractionDisplay<'_>;
    scope 1 {
        debug days_since_deleveraging_started => _4;
        let _6: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        scope 2 {
            debug autodeleverage_ltv_threshold => _6;
            let _9: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            scope 3 {
                debug user_ltv => _9;
                let _15: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                let _85: (&utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &u64);
                let mut _95: &[&str; 5];
                scope 4 {
                    debug liquidation_bonus_rate => _15;
                    let _48: (&utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &utils::fraction::FractionDisplay<'_>, &u64);
                    let mut _94: &[&str; 6];
                    scope 5 {
                        debug args => _48;
                    }
                }
                scope 6 {
                    debug args => _85;
                }
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = _3;
        _4 = to_days_fractional(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_1);
        StorageLive(_8);
        _8 = _4;
        _6 = calculate_autodeleverage_threshold(move _7, move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &(*_2);
        _9 = obligation::Obligation::loan_to_value(move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &_9;
        StorageLive(_13);
        StorageLive(_14);
        _14 = &_6;
        _13 = &(*_14);
        _11 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::ge(move _12, move _13) -> [return: bb4, unwind continue];
    }

    bb4: {
        switchInt(move _11) -> [0: bb19, otherwise: bb5];
    }

    bb5: {
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageLive(_15);
        StorageLive(_16);
        _16 = (((*_1).9: state::reserve::ReserveConfig).29: u64);
        StorageLive(_17);
        _17 = (((*_1).9: state::reserve::ReserveConfig).10: u16);
        StorageLive(_18);
        _18 = _4;
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &(*_2);
        _21 = obligation::Obligation::no_bf_loan_to_value(move _22) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_22);
        _20 = &_21;
        _19 = &(*_20);
        _15 = calculate_autodeleverage_bonus_rate(move _16, move _17, const _, move _18, move _19) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_21);
        StorageDead(_20);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _94 = const _;
        _28 = &(*_94);
        _27 = &(*_28);
        _26 = move _27 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_27);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &_9;
        _36 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _37) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_37);
        _35 = &_36;
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &_6;
        _39 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _40) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_40);
        _38 = &_39;
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &_4;
        _42 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _43) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_43);
        _41 = &_42;
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &_15;
        _45 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _46) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_46);
        _44 = &_45;
        StorageLive(_47);
        _47 = &_3;
        _34 = (move _35, move _38, move _41, move _44, move _47);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_35);
        StorageLive(_48);
        _48 = _34;
        StorageLive(_49);
        StorageLive(_50);
        _96 = deref_copy (_48.0: &utils::fraction::FractionDisplay<'_>);
        _50 = &(*_96);
        _49 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _50) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_50);
        StorageLive(_51);
        StorageLive(_52);
        _97 = deref_copy (_48.1: &utils::fraction::FractionDisplay<'_>);
        _52 = &(*_97);
        _51 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _52) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_52);
        StorageLive(_53);
        StorageLive(_54);
        _98 = deref_copy (_48.4: &u64);
        _54 = &(*_98);
        _53 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _54) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_54);
        StorageLive(_55);
        StorageLive(_56);
        _99 = deref_copy (_48.2: &utils::fraction::FractionDisplay<'_>);
        _56 = &(*_99);
        _55 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _56) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_56);
        StorageLive(_57);
        StorageLive(_58);
        _100 = deref_copy (_48.3: &utils::fraction::FractionDisplay<'_>);
        _58 = &(*_100);
        _57 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _58) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_58);
        _33 = [move _49, move _51, move _53, move _55, move _57];
        StorageDead(_57);
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_48);
        _32 = &_33;
        _31 = &(*_32);
        _30 = move _31 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_31);
        _25 = Arguments::<'_>::new_v1(move _26, move _30) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_30);
        StorageDead(_26);
        _24 = _print(move _25) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_25);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_28);
        StorageDead(_24);
        _23 = const ();
        StorageDead(_23);
        StorageLive(_59);
        StorageLive(_60);
        _60 = _9;
        StorageLive(_61);
        _61 = _15;
        StorageLive(_62);
        _62 = state::types::LiquidationReason::MarketWideDeleveraging;
        _59 = state::types::LiquidationParams { user_ltv: move _60, liquidation_bonus_rate: move _61, liquidation_reason: move _62 };
        StorageDead(_62);
        StorageDead(_61);
        StorageDead(_60);
        _0 = std::option::Option::<state::types::LiquidationParams>::Some(move _59);
        StorageDead(_59);
        StorageDead(_15);
        goto -> bb29;
    }

    bb19: {
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        _95 = const _;
        _68 = &(*_95);
        _67 = &(*_68);
        _66 = move _67 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_67);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &_9;
        _76 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _77) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_77);
        _75 = &_76;
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &_6;
        _79 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _80) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_80);
        _78 = &_79;
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &_4;
        _82 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as utils::fraction::FractionExtra>::to_display(move _83) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_83);
        _81 = &_82;
        StorageLive(_84);
        _84 = &_3;
        _74 = (move _75, move _78, move _81, move _84);
        StorageDead(_84);
        StorageDead(_81);
        StorageDead(_78);
        StorageDead(_75);
        StorageLive(_85);
        _85 = _74;
        StorageLive(_86);
        StorageLive(_87);
        _101 = deref_copy (_85.0: &utils::fraction::FractionDisplay<'_>);
        _87 = &(*_101);
        _86 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _87) -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageDead(_87);
        StorageLive(_88);
        StorageLive(_89);
        _102 = deref_copy (_85.1: &utils::fraction::FractionDisplay<'_>);
        _89 = &(*_102);
        _88 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _89) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_89);
        StorageLive(_90);
        StorageLive(_91);
        _103 = deref_copy (_85.3: &u64);
        _91 = &(*_103);
        _90 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _91) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_91);
        StorageLive(_92);
        StorageLive(_93);
        _104 = deref_copy (_85.2: &utils::fraction::FractionDisplay<'_>);
        _93 = &(*_104);
        _92 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _93) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_93);
        _73 = [move _86, move _88, move _90, move _92];
        StorageDead(_92);
        StorageDead(_90);
        StorageDead(_88);
        StorageDead(_86);
        StorageDead(_85);
        _72 = &_73;
        _71 = &(*_72);
        _70 = move _71 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_71);
        _65 = Arguments::<'_>::new_v1(move _66, move _70) -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageDead(_70);
        StorageDead(_66);
        _64 = _print(move _65) -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageDead(_65);
        StorageDead(_82);
        StorageDead(_79);
        StorageDead(_76);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_72);
        StorageDead(_68);
        StorageDead(_64);
        _63 = const ();
        StorageDead(_63);
        _0 = std::option::Option::<state::types::LiquidationParams>::None;
        goto -> bb29;
    }

    bb29: {
        StorageDead(_11);
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_4);
        return;
    }
}
