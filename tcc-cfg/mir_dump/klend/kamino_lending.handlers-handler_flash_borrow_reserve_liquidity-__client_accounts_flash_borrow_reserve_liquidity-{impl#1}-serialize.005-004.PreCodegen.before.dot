digraph Mir_0_3643 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_flash_borrow_reserve_liquidity::__client_accounts_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity as BorshSerialize&gt;::serialize(_1: &amp;ReErased handlers::handler_flash_borrow_reserve_liquidity::__client_accounts_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity, _2: &amp;ReErased mut W/#0) -&gt; std::result::Result&lt;(), std::io::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: &amp;ReErased mut W/#0;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _16: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased mut W/#0;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: &amp;ReErased mut W/#0;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _35: ();<br align="left"/>let _36: ();<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _38: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut W/#0;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _46: ();<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _50: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _52: &amp;ReErased mut W/#0;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _57: ();<br align="left"/>let _58: ();<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _60: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _62: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _63: &amp;ReErased mut W/#0;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _68: ();<br align="left"/>let _69: ();<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _71: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _73: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _74: &amp;ReErased mut W/#0;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _79: ();<br align="left"/>let _80: ();<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _82: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _83: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut W/#0;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _90: ();<br align="left"/>let _91: ();<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _93: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _94: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _95: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _96: &amp;ReErased mut W/#0;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _101: ();<br align="left"/>let _102: ();<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _104: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _105: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _106: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _107: &amp;ReErased mut W/#0;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _112: ();<br align="left"/>let _113: ();<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _115: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _116: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _117: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _118: &amp;ReErased mut W/#0;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _123: ();<br align="left"/>let _124: ();<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _126: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _127: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _128: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _129: &amp;ReErased mut W/#0;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _134: ();<br align="left"/>let mut _135: ();<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug writer =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>>;
    bb0__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _6, move _8)</td></tr></table>>];
    bb1__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_4 as Continue).0: ())<br/>_3 = _13<br/>StorageDead(_13)<br/>_136 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_1).1: anchor_lang::prelude::Pubkey)<br/>_17 = &amp;(*_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _17, move _19)</td></tr></table>>];
    bb4__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_182 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Continue).0: ())<br/>_14 = _24<br/>StorageDead(_24)<br/>_138 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;((*_1).2: anchor_lang::prelude::Pubkey)<br/>_28 = &amp;(*_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_27 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _28, move _30)</td></tr></table>>];
    bb10__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_180 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb13__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_26 as Continue).0: ())<br/>_25 = _35<br/>StorageDead(_35)<br/>_140 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;((*_1).3: anchor_lang::prelude::Pubkey)<br/>_39 = &amp;(*_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _39, move _41)</td></tr></table>>];
    bb15__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_178 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb18__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_37 as Continue).0: ())<br/>_36 = _46<br/>StorageDead(_46)<br/>_142 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;((*_1).4: anchor_lang::prelude::Pubkey)<br/>_50 = &amp;(*_51)<br/>StorageLive(_52)<br/>_52 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _50, move _52)</td></tr></table>>];
    bb20__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb21__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_176 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb23__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb24__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_48 as Continue).0: ())<br/>_47 = _57<br/>StorageDead(_57)<br/>_144 = discriminant(_48)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;((*_1).5: anchor_lang::prelude::Pubkey)<br/>_61 = &amp;(*_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _61, move _63)</td></tr></table>>];
    bb25__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_56)<br/>_56 = move _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb26__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_174 = discriminant(_48)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb28__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_64 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb29__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_59 as Continue).0: ())<br/>_58 = _68<br/>StorageDead(_68)<br/>_146 = discriminant(_59)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;((*_1).6: anchor_lang::prelude::Pubkey)<br/>_72 = &amp;(*_73)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_71 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _72, move _74)</td></tr></table>>];
    bb30__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_67)<br/>_67 = move _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb31__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>_172 = discriminant(_59)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb33__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_75 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb34__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_70 as Continue).0: ())<br/>_69 = _79<br/>StorageDead(_79)<br/>_148 = discriminant(_70)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;((*_1).7: anchor_lang::prelude::Pubkey)<br/>_83 = &amp;(*_84)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_82 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _83, move _85)</td></tr></table>>];
    bb35__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb36__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_170 = discriminant(_70)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb38__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_86 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb39__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_81 as Continue).0: ())<br/>_80 = _90<br/>StorageDead(_90)<br/>_150 = discriminant(_81)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;((*_1).8: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>_94 = &amp;(*_95)<br/>StorageLive(_96)<br/>_96 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_93 = &lt;std::option::Option&lt;anchor_lang::prelude::Pubkey&gt; as BorshSerialize&gt;::serialize::&lt;W&gt;(move _94, move _96)</td></tr></table>>];
    bb40__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_89)<br/>_89 = move _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb41__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>_168 = discriminant(_81)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb43__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_97 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb44__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_92 as Continue).0: ())<br/>_91 = _101<br/>StorageDead(_101)<br/>_152 = discriminant(_92)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;((*_1).9: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>_105 = &amp;(*_106)<br/>StorageLive(_107)<br/>_107 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_104 = &lt;std::option::Option&lt;anchor_lang::prelude::Pubkey&gt; as BorshSerialize&gt;::serialize::&lt;W&gt;(move _105, move _107)</td></tr></table>>];
    bb45__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_100)<br/>_100 = move _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb46__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>_166 = discriminant(_92)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb48__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_108 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb49__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_103 as Continue).0: ())<br/>_102 = _112<br/>StorageDead(_112)<br/>_154 = discriminant(_103)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;((*_1).10: anchor_lang::prelude::Pubkey)<br/>_116 = &amp;(*_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_115 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _116, move _118)</td></tr></table>>];
    bb50__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_111)<br/>_111 = move _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb51__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>_164 = discriminant(_103)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb53__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_119 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb54__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_114 as Continue).0: ())<br/>_113 = _123<br/>StorageDead(_123)<br/>_156 = discriminant(_114)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;((*_1).11: anchor_lang::prelude::Pubkey)<br/>_127 = &amp;(*_128)<br/>StorageLive(_129)<br/>_129 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_126 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _127, move _129)</td></tr></table>>];
    bb55__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = move ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_122)<br/>_122 = move _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb56__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>_162 = discriminant(_114)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb58__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_130 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb59__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_125 as Continue).0: ())<br/>_124 = _134<br/>StorageDead(_134)<br/>_158 = discriminant(_125)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_135)<br/>_135 = ()<br/>_0 = std::result::Result::&lt;(), std::io::Error&gt;::Ok(move _135)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = move ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_133)<br/>_133 = move _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb61__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>_160 = discriminant(_125)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">return</td></tr></table>>];
    bb63__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb64__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_184 = discriminant(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_185 = discriminant(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_186 = discriminant(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_187 = discriminant(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_188 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left" balign="left">_189 = discriminant(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left" balign="left">_190 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_191 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left" balign="left">_192 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_193 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left" balign="left">_194 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left" balign="left">_195 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3643 -> bb1__0_3643 [label="return"];
    bb1__0_3643 -> bb2__0_3643 [label="return"];
    bb1__0_3643 -> bb63__0_3643 [label="unwind"];
    bb2__0_3643 -> bb3__0_3643 [label="0"];
    bb2__0_3643 -> bb5__0_3643 [label="1"];
    bb2__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb3__0_3643 -> bb7__0_3643 [label="return"];
    bb5__0_3643 -> bb6__0_3643 [label="return"];
    bb5__0_3643 -> bb75__0_3643 [label="unwind"];
    bb6__0_3643 -> bb62__0_3643 [label=""];
    bb7__0_3643 -> bb8__0_3643 [label="return"];
    bb7__0_3643 -> bb63__0_3643 [label="unwind"];
    bb8__0_3643 -> bb9__0_3643 [label="0"];
    bb8__0_3643 -> bb10__0_3643 [label="1"];
    bb8__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb9__0_3643 -> bb12__0_3643 [label="return"];
    bb10__0_3643 -> bb11__0_3643 [label="return"];
    bb10__0_3643 -> bb74__0_3643 [label="unwind"];
    bb11__0_3643 -> bb62__0_3643 [label=""];
    bb12__0_3643 -> bb13__0_3643 [label="return"];
    bb12__0_3643 -> bb63__0_3643 [label="unwind"];
    bb13__0_3643 -> bb14__0_3643 [label="0"];
    bb13__0_3643 -> bb15__0_3643 [label="1"];
    bb13__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb14__0_3643 -> bb17__0_3643 [label="return"];
    bb15__0_3643 -> bb16__0_3643 [label="return"];
    bb15__0_3643 -> bb73__0_3643 [label="unwind"];
    bb16__0_3643 -> bb62__0_3643 [label=""];
    bb17__0_3643 -> bb18__0_3643 [label="return"];
    bb17__0_3643 -> bb63__0_3643 [label="unwind"];
    bb18__0_3643 -> bb19__0_3643 [label="0"];
    bb18__0_3643 -> bb20__0_3643 [label="1"];
    bb18__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb19__0_3643 -> bb22__0_3643 [label="return"];
    bb20__0_3643 -> bb21__0_3643 [label="return"];
    bb20__0_3643 -> bb72__0_3643 [label="unwind"];
    bb21__0_3643 -> bb62__0_3643 [label=""];
    bb22__0_3643 -> bb23__0_3643 [label="return"];
    bb22__0_3643 -> bb63__0_3643 [label="unwind"];
    bb23__0_3643 -> bb24__0_3643 [label="0"];
    bb23__0_3643 -> bb25__0_3643 [label="1"];
    bb23__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb24__0_3643 -> bb27__0_3643 [label="return"];
    bb25__0_3643 -> bb26__0_3643 [label="return"];
    bb25__0_3643 -> bb71__0_3643 [label="unwind"];
    bb26__0_3643 -> bb62__0_3643 [label=""];
    bb27__0_3643 -> bb28__0_3643 [label="return"];
    bb27__0_3643 -> bb63__0_3643 [label="unwind"];
    bb28__0_3643 -> bb29__0_3643 [label="0"];
    bb28__0_3643 -> bb30__0_3643 [label="1"];
    bb28__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb29__0_3643 -> bb32__0_3643 [label="return"];
    bb30__0_3643 -> bb31__0_3643 [label="return"];
    bb30__0_3643 -> bb70__0_3643 [label="unwind"];
    bb31__0_3643 -> bb62__0_3643 [label=""];
    bb32__0_3643 -> bb33__0_3643 [label="return"];
    bb32__0_3643 -> bb63__0_3643 [label="unwind"];
    bb33__0_3643 -> bb34__0_3643 [label="0"];
    bb33__0_3643 -> bb35__0_3643 [label="1"];
    bb33__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb34__0_3643 -> bb37__0_3643 [label="return"];
    bb35__0_3643 -> bb36__0_3643 [label="return"];
    bb35__0_3643 -> bb69__0_3643 [label="unwind"];
    bb36__0_3643 -> bb62__0_3643 [label=""];
    bb37__0_3643 -> bb38__0_3643 [label="return"];
    bb37__0_3643 -> bb63__0_3643 [label="unwind"];
    bb38__0_3643 -> bb39__0_3643 [label="0"];
    bb38__0_3643 -> bb40__0_3643 [label="1"];
    bb38__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb39__0_3643 -> bb42__0_3643 [label="return"];
    bb40__0_3643 -> bb41__0_3643 [label="return"];
    bb40__0_3643 -> bb68__0_3643 [label="unwind"];
    bb41__0_3643 -> bb62__0_3643 [label=""];
    bb42__0_3643 -> bb43__0_3643 [label="return"];
    bb42__0_3643 -> bb63__0_3643 [label="unwind"];
    bb43__0_3643 -> bb44__0_3643 [label="0"];
    bb43__0_3643 -> bb45__0_3643 [label="1"];
    bb43__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb44__0_3643 -> bb47__0_3643 [label="return"];
    bb45__0_3643 -> bb46__0_3643 [label="return"];
    bb45__0_3643 -> bb67__0_3643 [label="unwind"];
    bb46__0_3643 -> bb62__0_3643 [label=""];
    bb47__0_3643 -> bb48__0_3643 [label="return"];
    bb47__0_3643 -> bb63__0_3643 [label="unwind"];
    bb48__0_3643 -> bb49__0_3643 [label="0"];
    bb48__0_3643 -> bb50__0_3643 [label="1"];
    bb48__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb49__0_3643 -> bb52__0_3643 [label="return"];
    bb50__0_3643 -> bb51__0_3643 [label="return"];
    bb50__0_3643 -> bb66__0_3643 [label="unwind"];
    bb51__0_3643 -> bb62__0_3643 [label=""];
    bb52__0_3643 -> bb53__0_3643 [label="return"];
    bb52__0_3643 -> bb63__0_3643 [label="unwind"];
    bb53__0_3643 -> bb54__0_3643 [label="0"];
    bb53__0_3643 -> bb55__0_3643 [label="1"];
    bb53__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb54__0_3643 -> bb57__0_3643 [label="return"];
    bb55__0_3643 -> bb56__0_3643 [label="return"];
    bb55__0_3643 -> bb65__0_3643 [label="unwind"];
    bb56__0_3643 -> bb62__0_3643 [label=""];
    bb57__0_3643 -> bb58__0_3643 [label="return"];
    bb57__0_3643 -> bb63__0_3643 [label="unwind"];
    bb58__0_3643 -> bb59__0_3643 [label="0"];
    bb58__0_3643 -> bb60__0_3643 [label="1"];
    bb58__0_3643 -> bb4__0_3643 [label="otherwise"];
    bb59__0_3643 -> bb62__0_3643 [label=""];
    bb60__0_3643 -> bb61__0_3643 [label="return"];
    bb60__0_3643 -> bb64__0_3643 [label="unwind"];
    bb61__0_3643 -> bb62__0_3643 [label=""];
    bb64__0_3643 -> bb63__0_3643 [label=""];
    bb65__0_3643 -> bb63__0_3643 [label=""];
    bb66__0_3643 -> bb63__0_3643 [label=""];
    bb67__0_3643 -> bb63__0_3643 [label=""];
    bb68__0_3643 -> bb63__0_3643 [label=""];
    bb69__0_3643 -> bb63__0_3643 [label=""];
    bb70__0_3643 -> bb63__0_3643 [label=""];
    bb71__0_3643 -> bb63__0_3643 [label=""];
    bb72__0_3643 -> bb63__0_3643 [label=""];
    bb73__0_3643 -> bb63__0_3643 [label=""];
    bb74__0_3643 -> bb63__0_3643 [label=""];
    bb75__0_3643 -> bb63__0_3643 [label=""];
}
