digraph Mir_0_1878 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::compute_depositable_amount_and_minted_collateral(_1: &amp;ReErased state::reserve::Reserve, _2: u64) -&gt; std::result::Result&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _5: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _6: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _7: u64;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _10: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _11: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _12: u64;<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: anchor_lang::error::Error;<br align="left"/>let mut _19: anchor_lang::error::Error;<br align="left"/>let mut _20: anchor_lang::error::AnchorError;<br align="left"/>let mut _21: std::string::String;<br align="left"/>let mut _22: &amp;ReErased LendingError;<br align="left"/>let _23: LendingError;<br align="left"/>let mut _24: u32;<br align="left"/>let mut _25: LendingError;<br align="left"/>let mut _26: std::string::String;<br align="left"/>let mut _27: &amp;ReErased LendingError;<br align="left"/>let _28: LendingError;<br align="left"/>let mut _29: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _30: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _31: anchor_lang::error::Source;<br align="left"/>let mut _32: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _33: (u64, u64);<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: state::types::DepositLiquidityResult;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: &amp;ReErased LendingError;<br align="left"/>let mut _40: &amp;ReErased LendingError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug collateral_amount =&gt; _3;<br align="left"/>debug liquidity_amount_to_deposit =&gt; _8;<br align="left"/>>;
    bb0__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/></td></tr><tr><td align="left">_5 = reserve::Reserve::collateral_exchange_rate(move _6)</td></tr></table>>];
    bb1__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;_5<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_3 = reserve::CollateralExchangeRate::liquidity_to_collateral(move _4, move _7)</td></tr></table>>];
    bb2__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/></td></tr><tr><td align="left">_10 = reserve::Reserve::collateral_exchange_rate(move _11)</td></tr></table>>];
    bb3__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_9 = &amp;_10<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>_12 = _3<br/></td></tr><tr><td align="left">_8 = reserve::CollateralExchangeRate::collateral_to_liquidity_ceil(move _9, move _12)</td></tr></table>>];
    bb4__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/>StorageLive(_16)<br/>_16 = _8<br/>_14 = Lt(move _15, move _16)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_40 = const _<br/>_22 = &amp;(*_40)<br/></td></tr><tr><td align="left">_21 = LendingError::name(move _22)</td></tr></table>>];
    bb6__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_24 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _25)</td></tr></table>>];
    bb7__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_39 = const _<br/>_27 = &amp;(*_39)<br/></td></tr><tr><td align="left">_26 = &lt;LendingError as ToString&gt;::to_string(move _27)</td></tr></table>>];
    bb8__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\reserve.rs&quot;, line: const 206_u32 }<br/>_30 = anchor_lang::error::ErrorOrigin::Source(move _31)<br/>StorageDead(_31)<br/>_29 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _30)<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>_32 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_20 = anchor_lang::error::AnchorError { error_name: move _21, error_code_number: move _24, error_msg: move _26, error_origin: move _29, compared_values: move _32 }<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _20)</td></tr></table>>];
    bb9__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _2<br/>StorageLive(_35)<br/>_35 = _8<br/>_33 = (move _34, move _35)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_18 = anchor_lang::error::Error::with_values::&lt;u64, u64&gt;(move _19, move _33)</td></tr></table>>];
    bb10__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_19)<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Err(move _18)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>_13 = const ()<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _8<br/>StorageLive(_38)<br/>_38 = _3<br/>_36 = state::types::DepositLiquidityResult { liquidity_amount: move _37, collateral_amount: move _38 }<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>_0 = std::result::Result::&lt;state::types::DepositLiquidityResult, anchor_lang::error::Error&gt;::Ok(move _36)<br/>StorageDead(_36)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb13__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb14__0_1878 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1878 -> bb1__0_1878 [label="return"];
    bb1__0_1878 -> bb2__0_1878 [label="return"];
    bb2__0_1878 -> bb3__0_1878 [label="return"];
    bb3__0_1878 -> bb4__0_1878 [label="return"];
    bb4__0_1878 -> bb11__0_1878 [label="0"];
    bb4__0_1878 -> bb5__0_1878 [label="otherwise"];
    bb5__0_1878 -> bb6__0_1878 [label="return"];
    bb6__0_1878 -> bb7__0_1878 [label="return"];
    bb6__0_1878 -> bb13__0_1878 [label="unwind"];
    bb7__0_1878 -> bb8__0_1878 [label="return"];
    bb7__0_1878 -> bb13__0_1878 [label="unwind"];
    bb8__0_1878 -> bb9__0_1878 [label="return"];
    bb8__0_1878 -> bb14__0_1878 [label="unwind"];
    bb9__0_1878 -> bb10__0_1878 [label="return"];
    bb9__0_1878 -> bb14__0_1878 [label="unwind"];
    bb10__0_1878 -> bb12__0_1878 [label=""];
    bb11__0_1878 -> bb12__0_1878 [label=""];
    bb13__0_1878 -> bb14__0_1878 [label="return"];
}
