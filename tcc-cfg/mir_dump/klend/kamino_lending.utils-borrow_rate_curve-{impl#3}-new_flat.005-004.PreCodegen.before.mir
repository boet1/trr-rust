// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::new_flat` before PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::new_flat(_1: u32) -> BorrowRateCurve {
    debug borrow_rate_bps => _1;
    let mut _0: utils::borrow_rate_curve::BorrowRateCurve;
    let _2: [utils::borrow_rate_curve::CurvePoint; 2];
    let mut _3: utils::borrow_rate_curve::CurvePoint;
    let mut _4: u32;
    let mut _5: utils::borrow_rate_curve::CurvePoint;
    let mut _6: u32;
    let mut _7: std::result::Result<utils::borrow_rate_curve::BorrowRateCurve, anchor_lang::error::Error>;
    let mut _8: &[utils::borrow_rate_curve::CurvePoint];
    let mut _9: &[utils::borrow_rate_curve::CurvePoint; 2];
    let _10: &[utils::borrow_rate_curve::CurvePoint; 2];
    scope 1 {
        debug points => _2;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = _1;
        _3 = CurvePoint { utilization_rate_bps: const 0_u32, borrow_rate_bps: move _4 };
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _1;
        _5 = CurvePoint { utilization_rate_bps: const _, borrow_rate_bps: move _6 };
        StorageDead(_6);
        _2 = [move _3, move _5];
        StorageDead(_5);
        StorageDead(_3);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &_2;
        _9 = &(*_10);
        _8 = move _9 as &[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize));
        StorageDead(_9);
        _7 = BorrowRateCurve::from_points(move _8) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_8);
        _0 = std::result::Result::<BorrowRateCurve, anchor_lang::error::Error>::unwrap(move _7) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_2);
        StorageDead(_10);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
