// MIR for `token_info::<impl at programs\klend\src\state\token_info.rs:57:1: 57:35>::fmt` after PreCodegen

fn token_info::<impl at programs\klend\src\state\token_info.rs:57:1: 57:35>::fmt(_1: &token_info::TokenInfo, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &str;
    let mut _4: std::result::Result<&str, std::str::Utf8Error>;
    let mut _5: &[u8];
    let mut _6: &[u8; 32];
    let _7: &[u8; 32];
    let mut _8: &str;
    let _9: &str;
    let mut _10: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _11: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _12: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _13: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _14: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _15: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _16: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _17: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _18: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _19: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _20: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _21: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _22: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _23: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _24: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _25: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _26: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _27: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _28: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _29: std::fmt::DebugStruct<'_, '_>;
    let mut _30: &mut std::fmt::Formatter<'_>;
    let mut _31: &str;
    let _32: &str;
    let mut _33: &str;
    let _34: &str;
    let mut _35: &dyn std::fmt::Debug;
    let mut _36: &&str;
    let _37: &&str;
    let mut _38: &str;
    let _39: &str;
    let mut _40: &dyn std::fmt::Debug;
    let mut _41: &state::token_info::PriceHeuristic;
    let _42: &state::token_info::PriceHeuristic;
    let mut _43: &str;
    let _44: &str;
    let mut _45: &dyn std::fmt::Debug;
    let mut _46: &u64;
    let _47: &u64;
    let mut _48: &str;
    let _49: &str;
    let mut _50: &dyn std::fmt::Debug;
    let mut _51: &u64;
    let _52: &u64;
    let mut _53: &str;
    let _54: &str;
    let mut _55: &dyn std::fmt::Debug;
    let mut _56: &u64;
    let _57: &u64;
    let mut _58: &str;
    let _59: &str;
    let mut _60: &dyn std::fmt::Debug;
    let mut _61: &state::token_info::ScopeConfiguration;
    let _62: &state::token_info::ScopeConfiguration;
    let mut _63: &str;
    let _64: &str;
    let mut _65: &dyn std::fmt::Debug;
    let mut _66: &state::token_info::SwitchboardConfiguration;
    let _67: &state::token_info::SwitchboardConfiguration;
    let mut _68: &str;
    let _69: &str;
    let mut _70: &dyn std::fmt::Debug;
    let mut _71: &state::token_info::PythConfiguration;
    let _72: &state::token_info::PythConfiguration;
    let mut _73: &str;
    let _74: &str;
    let mut _75: &dyn std::fmt::Debug;
    let mut _76: &u8;
    let _77: &u8;
    scope 1 {
        debug name => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: [u8; 32]);
        _6 = &(*_7);
        _5 = move _6 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_6);
        _4 = from_utf8(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageLive(_8);
        StorageLive(_9);
        _9 = const "InvalidTokenName";
        _8 = &(*_9);
        _3 = std::result::Result::<&str, Utf8Error>::unwrap_or(move _4, move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_4);
        StorageDead(_9);
        StorageDead(_7);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &mut (*_2);
        StorageLive(_31);
        StorageLive(_32);
        _32 = const "TokenInfo";
        _31 = &(*_32);
        _29 = Formatter::<'_>::debug_struct(move _30, move _31) -> [return: bb3, unwind continue];
    }

    bb3: {
        _28 = &mut _29;
        StorageDead(_31);
        StorageDead(_30);
        StorageLive(_33);
        StorageLive(_34);
        _34 = const "name";
        _33 = &(*_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &_3;
        _36 = &(*_37);
        _35 = move _36 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_36);
        _27 = DebugStruct::<'_, '_>::field(move _28, move _33, move _35) -> [return: bb4, unwind continue];
    }

    bb4: {
        _26 = &mut (*_27);
        StorageDead(_35);
        StorageDead(_33);
        StorageDead(_28);
        StorageLive(_38);
        StorageLive(_39);
        _39 = const "heuristic";
        _38 = &(*_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &((*_1).1: state::token_info::PriceHeuristic);
        _41 = &(*_42);
        _40 = move _41 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_41);
        _25 = DebugStruct::<'_, '_>::field(move _26, move _38, move _40) -> [return: bb5, unwind continue];
    }

    bb5: {
        _24 = &mut (*_25);
        StorageDead(_40);
        StorageDead(_38);
        StorageDead(_26);
        StorageLive(_43);
        StorageLive(_44);
        _44 = const "max_twap_divergence_bps";
        _43 = &(*_44);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &((*_1).2: u64);
        _46 = &(*_47);
        _45 = move _46 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_46);
        _23 = DebugStruct::<'_, '_>::field(move _24, move _43, move _45) -> [return: bb6, unwind continue];
    }

    bb6: {
        _22 = &mut (*_23);
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_24);
        StorageLive(_48);
        StorageLive(_49);
        _49 = const "max_age_price_seconds";
        _48 = &(*_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = &((*_1).3: u64);
        _51 = &(*_52);
        _50 = move _51 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_51);
        _21 = DebugStruct::<'_, '_>::field(move _22, move _48, move _50) -> [return: bb7, unwind continue];
    }

    bb7: {
        _20 = &mut (*_21);
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_22);
        StorageLive(_53);
        StorageLive(_54);
        _54 = const "max_age_twap_seconds";
        _53 = &(*_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = &((*_1).4: u64);
        _56 = &(*_57);
        _55 = move _56 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_56);
        _19 = DebugStruct::<'_, '_>::field(move _20, move _53, move _55) -> [return: bb8, unwind continue];
    }

    bb8: {
        _18 = &mut (*_19);
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_20);
        StorageLive(_58);
        StorageLive(_59);
        _59 = const "scope_configuration";
        _58 = &(*_59);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        _62 = &((*_1).5: state::token_info::ScopeConfiguration);
        _61 = &(*_62);
        _60 = move _61 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_61);
        _17 = DebugStruct::<'_, '_>::field(move _18, move _58, move _60) -> [return: bb9, unwind continue];
    }

    bb9: {
        _16 = &mut (*_17);
        StorageDead(_60);
        StorageDead(_58);
        StorageDead(_18);
        StorageLive(_63);
        StorageLive(_64);
        _64 = const "switchboard_configuration";
        _63 = &(*_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &((*_1).6: state::token_info::SwitchboardConfiguration);
        _66 = &(*_67);
        _65 = move _66 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_66);
        _15 = DebugStruct::<'_, '_>::field(move _16, move _63, move _65) -> [return: bb10, unwind continue];
    }

    bb10: {
        _14 = &mut (*_15);
        StorageDead(_65);
        StorageDead(_63);
        StorageDead(_16);
        StorageLive(_68);
        StorageLive(_69);
        _69 = const "pyth_configuration";
        _68 = &(*_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _72 = &((*_1).7: state::token_info::PythConfiguration);
        _71 = &(*_72);
        _70 = move _71 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_71);
        _13 = DebugStruct::<'_, '_>::field(move _14, move _68, move _70) -> [return: bb11, unwind continue];
    }

    bb11: {
        _12 = &mut (*_13);
        StorageDead(_70);
        StorageDead(_68);
        StorageDead(_14);
        StorageLive(_73);
        StorageLive(_74);
        _74 = const "block_price_usage";
        _73 = &(*_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &((*_1).8: u8);
        _76 = &(*_77);
        _75 = move _76 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_76);
        _11 = DebugStruct::<'_, '_>::field(move _12, move _73, move _75) -> [return: bb12, unwind continue];
    }

    bb12: {
        _10 = &mut (*_11);
        StorageDead(_75);
        StorageDead(_73);
        StorageDead(_12);
        _0 = DebugStruct::<'_, '_>::finish(move _10) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_10);
        StorageDead(_3);
        StorageDead(_77);
        StorageDead(_74);
        StorageDead(_72);
        StorageDead(_69);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_62);
        StorageDead(_59);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_52);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_27);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_19);
        StorageDead(_17);
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_11);
        return;
    }
}
